Microchip MPLAB XC8 Compiler V2.30

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.30\pic\dat\en_msgs.txt -cn \
  -h+dist/PIC16F688/production\Menu_prototype.X.production.sym \
  --cmf=dist/PIC16F688/production\Menu_prototype.X.production.cmf -z \
  -Q16F688 -oC:\Users\ILLYAB~1\AppData\Local\Temp\sf8ox2 \
  --defsym=__MPLAB_BUILD=1 \
  -Mdist/PIC16F688/production/Menu_prototype.X.production.map -E1 \
  -ver=XC8 Compiler --acfsm=1493 -ASTACK=0A0h-0EFh -pstack=STACK \
  -ACODE=00h-07FFhx2 -ASTRCODE=00h-0FFFh -ASTRING=00h-0FFhx16 \
  -ACONST=00h-0FFhx16 -AENTRY=00h-0FFhx16 -ACOMMON=070h-07Fh \
  -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh -ABANK2=0120h-016Fh \
  -ARAM=020h-06Fh,0A0h-0EFh,0120h-016Fh \
  -AABS1=020h-07Fh,0A0h-0EFh,0120h-016Fh -ASFR0=00h-01Fh -ASFR1=080h-09Fh \
  -ASFR2=0100h-011Fh -ASFR3=0180h-01EFh -ACONFIG=02007h-02007h -DCONFIG=2 \
  -AIDLOC=02000h-02003h -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE \
  -pcinit=CODE -pfunctab=ENTRY -k \
  C:\Users\ILLYAB~1\AppData\Local\Temp\sf8oxb.o \
  dist/PIC16F688/production\Menu_prototype.X.production.o 

Object code version is 3.11

Machine type is 16F688



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\ILLYAB~1\AppData\Local\Temp\sf8oxb.o
                end_init                              B        B        2        8       0
                reset_vec                             0        0        2        0       0
                config                             2007     2007        1        0       4
dist/PIC16F688/production\Menu_prototype.X.production.o
                cinit                                 D        D        F        8       0
                intentry                              4        4        7        8       0
                config                             2007     2007        1        0       4
                text11                              29C      29C        7      3EE       0
                text10                              280      280       10      3EE       0
                text9                               21B      21B       22      3EE       0
                text8                               1AE      1AE       25        8       0
                text7                               188      188       26        8       0
                text6                               290      290        C      3EE       0
                text5                               23D      23D       1D      3EE       0
                text4                                CC       CC       4C        8       0
                text3                               118      118       47        8       0
                text2                               25A      25A       15      3EE       0
                text1                               1F7      1F7       24      3EE       0
                maintext                             1C       1C       B0        8       0
                cstackBANK0                          49       49        8       20       1
                cstackCOMMON                         70       70        C       70       1
                inittext                            26F      26F       11      3EE       0
                dataBANK0                            20       20       29       20       1
                strings                             1D3      1D3       24      3A6       0
                idataBANK0                          15F      15F       29        8       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              B        B        2         0
                cinit                                 D        D        F         0
                intentry                              4        4        7         0
                reset_vec                             0        0        2         0
                text11                              29C      29C        7         0
                text10                              280      280       10         0
                text9                               21B      21B       22         0
                text8                               1AE      1AE       25         0
                text7                               188      188       26         0
                text6                               290      290        C         0
                text5                               23D      23D       1D         0
                text4                                CC       CC       4C         0
                text3                               118      118       47         0
                text2                               25A      25A       15         0
                text1                               1F7      1F7       24         0
                maintext                             1C       1C       B0         0
                inittext                            26F      26F       11         0
                idataBANK0                          15F      15F       29         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             1D3      1D3       24         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        C         1

        CLASS   BANK0          
                cstackBANK0                          49       49        8         1
                dataBANK0                            20       20       29         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         4

        CLASS   IDLOC          

        CLASS   EEDATA         

        CLASS   BANK3          



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000002  000002         0       0  CODE        2
                intentry                       000004  0001CF  0001D3         8       0  CODE        2
                dataBANK0                      000020  000031  000051        20       1  BANK0       1
                cstackCOMMON                   000070  00000C  00007C        70       1  COMMON      1
                strings                        0001D3  000024  0001F7       3A6       0  STRING      2
                text1                          0001F7  0000AC  0002A3       3EE       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0051-006F             1F           1
        BANK1            00A0-00EF             50           1
        BANK2            0120-016F             50           1
        CODE             0002-0003              2           2
                         02A3-0FFF            55D
        COMMON           007C-007D              2           1
        CONST            0002-0003              2           2
                         02A3-0FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0002-0003              2           2
                         02A3-0FFF            100
        IDLOC            2000-2003              4           2
        RAM              0051-006F             1F           1
                         00A0-00EF             50
                         0120-016F             50
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-011F             20           1
        SFR3             0180-01EF             70           1
        STACK            00A0-00EF             50           1
        STRCODE          0002-0003              2           2
                         02A3-0FFF            D5D
        STRING           0002-0003              2           2
                         02A3-0FFF            100

                                  Symbol Table

LCD_display_clear@i         cstackCOMMON 0079
LCD_display_ctrl@blink      cstackCOMMON 0075
LCD_display_ctrl@cursor     cstackCOMMON 0074
LCD_display_ctrl@display    cstackCOMMON 0077
LCD_display_ctrl@temp       cstackCOMMON 0078
LCD_send_string@i           cstackCOMMON 007B
LCD_send_string@string      cstackCOMMON 0078
LCD_set_cursor@column       cstackCOMMON 0074
LCD_set_cursor@row          cstackCOMMON 0077
LCD_set_cursor@temp         cstackCOMMON 0076
_ANSEL                      (abs)        0091
_CMCON0                     (abs)        0019
_Draw_main_display          text4        00CC
_LCD_Init                   text3        0118
_LCD_display_clear          text2        025A
_LCD_display_ctrl           text1        01F7
_LCD_send_string            text7        0188
_LCD_set_cursor             text5        023D
_PORTA                      (abs)        0005
_PORTAbits                  (abs)        0005
_PORTC                      (abs)        0007
_RA2                        (abs)        002A
_RA5                        (abs)        002D
_RC0                        (abs)        0038
_RC1                        (abs)        0039
_RC2                        (abs)        003A
_RC3                        (abs)        003B
_T1CON                      (abs)        0010
_T1CONbits                  (abs)        0010
_TMR1H                      (abs)        000F
_TMR1IF                     (abs)        0060
_TMR1L                      (abs)        000E
_TMR1ON                     (abs)        0080
_TRISA                      (abs)        0085
_TRISC                      (abs)        0087
__Habs1                     abs1         0000
__Hbank0                    bank0        0000
__Hbank1                    bank1        0000
__Hbank2                    bank2        0000
__Hbank3                    bank3        0000
__Hcinit                    cinit        001C
__Hclrtext                  clrtext      0000
__Hcode                     code         0000
__Hcommon                   common       0000
__Hconfig                   config       2008
__HcstackBANK0              cstackBANK0  0000
__HcstackCOMMON             cstackCOMMON 0000
__HdataBANK0                dataBANK0    0000
__Heeprom_data              eeprom_data  0000
__Hend_init                 end_init     000D
__Hfunctab                  functab      0000
__HidataBANK0               idataBANK0   0000
__Hinit                     init         000B
__Hinittext                 inittext     0000
__Hintentry                 intentry     000B
__Hmaintext                 maintext     0000
__Hpowerup                  powerup      0000
__Hram                      ram          0000
__Hreset_vec                reset_vec    0002
__Hsfr0                     sfr0         0000
__Hsfr1                     sfr1         0000
__Hsfr2                     sfr2         0000
__Hsfr3                     sfr3         0000
__Hspace_0                  (abs)        02A3
__Hspace_1                  (abs)        007C
__Hspace_2                  (abs)        0000
__Hspace_3                  (abs)        0000
__Hspace_4                  (abs)        400F
__Hstack                    stack        0000
__Hstrings                  strings      0000
__Htext                     text         0000
__Labs1                     abs1         0000
__Lbank0                    bank0        0000
__Lbank1                    bank1        0000
__Lbank2                    bank2        0000
__Lbank3                    bank3        0000
__Lcinit                    cinit        000D
__Lclrtext                  clrtext      0000
__Lcode                     code         0000
__Lcommon                   common       0000
__Lconfig                   config       0000
__LcstackBANK0              cstackBANK0  0000
__LcstackCOMMON             cstackCOMMON 0000
__LdataBANK0                dataBANK0    0000
__Leeprom_data              eeprom_data  0000
__Lend_init                 end_init     000B
__Lfunctab                  functab      0000
__LidataBANK0               idataBANK0   0000
__Linit                     init         000B
__Linittext                 inittext     0000
__Lintentry                 intentry     0004
__Lmaintext                 maintext     0000
__Lpowerup                  powerup      0000
__Lram                      ram          0000
__Lreset_vec                reset_vec    0000
__Lsfr0                     sfr0         0000
__Lsfr1                     sfr1         0000
__Lsfr2                     sfr2         0000
__Lsfr3                     sfr3         0000
__Lspace_0                  (abs)        0000
__Lspace_1                  (abs)        0000
__Lspace_2                  (abs)        0000
__Lspace_3                  (abs)        0000
__Lspace_4                  (abs)        0000
__Lstack                    stack        0000
__Lstrings                  strings      0000
__Ltext                     text         0000
__S0                        (abs)        02A3
__S1                        (abs)        007C
__S2                        (abs)        0000
__S3                        (abs)        0000
___int_sp                   stack        0000
___latbits                  (abs)        0001
___lcd_cmd                  text6        0290
___lcd_cmd@cmd              cstackCOMMON 0073
___lcd_en_pulse             text10       0280
___lcd_port_write           text9        021B
___lcd_port_write@data      cstackCOMMON 0072
___lcd_send_char            text8        01AE
___lcd_send_char@ascii      cstackCOMMON 0077
___lcd_send_char@high       cstackCOMMON 0075
___lcd_send_char@low        cstackCOMMON 0076
___sp                       stack        0000
___stackhi                  (abs)        0000
___stacklo                  (abs)        0000
__end_of_Draw_main_display  text4        0118
__end_of_LCD_Init           text3        015F
__end_of_LCD_display_clear  text2        026F
__end_of_LCD_display_ctrl   text1        021B
__end_of_LCD_send_string    text7        01AE
__end_of_LCD_set_cursor     text5        025A
__end_of___lcd_cmd          text6        029C
__end_of___lcd_en_pulse     text10       0290
__end_of___lcd_port_write   text9        023D
__end_of___lcd_send_char    text8        01D3
__end_of__initialization    cinit        0019
__end_of__stringtab         strings      01E3
__end_of_isr                text11       02A3
__end_of_l_date             strings      01F2
__end_of_l_humi             strings      01E8
__end_of_l_temp             strings      01ED
__end_of_l_time             strings      01F7
__end_of_main               maintext     00CC
__initialization            cinit        000D
__pcstackBANK0              cstackBANK0  0049
__pcstackCOMMON             cstackCOMMON 0070
__pdataBANK0                dataBANK0    0020
__pidataBANK0               idataBANK0   015F
__pintentry                 intentry     0004
__pmaintext                 maintext     001C
__pstrings                  strings      01D3
__ptext1                    text1        01F7
__ptext10                   text10       0280
__ptext11                   text11       029C
__ptext2                    text2        025A
__ptext3                    text3        0118
__ptext4                    text4        00CC
__ptext5                    text5        023D
__ptext6                    text6        0290
__ptext7                    text7        0188
__ptext8                    text8        01AE
__ptext9                    text9        021B
__size_of_Draw_main_display (abs)        0000
__size_of_LCD_Init          (abs)        0000
__size_of_LCD_display_clear (abs)        0000
__size_of_LCD_display_ctrl  (abs)        0000
__size_of_LCD_send_string   (abs)        0000
__size_of_LCD_set_cursor    (abs)        0000
__size_of___lcd_cmd         (abs)        0000
__size_of___lcd_en_pulse    (abs)        0000
__size_of___lcd_port_write  (abs)        0000
__size_of___lcd_send_char   (abs)        0000
__size_of_isr               (abs)        0000
__size_of_main              (abs)        0000
__stringbase                strings      01E2
__stringtab                 strings      01D3
_current_humi               dataBANK0    0045
_current_temp               dataBANK0    003C
_date                       dataBANK0    0026
_isr                        text11       029C
_l_date                     strings      01ED
_l_humi                     strings      01E3
_l_temp                     strings      01E8
_l_time                     strings      01F2
_main                       maintext     001C
_time                       dataBANK0    002F
_update_humi                dataBANK0    0041
_update_temp                dataBANK0    0037
btemp                       (abs)        007E
end_of_initialization       cinit        0019
init_fetch0                 inittext     026F
init_ram0                   inittext     0273
interrupt_function          intentry     0004
intlevel0                   functab      0000
intlevel1                   functab      0000
intlevel2                   functab      0000
intlevel3                   functab      0000
intlevel4                   functab      0000
intlevel5                   functab      0000
main@F831                   dataBANK0    0020
main@string                 cstackBANK0  004B
reset_vec                   reset_vec    0000
saved_w                     (abs)        007E
start                       init         000B
start_initialization        cinit        000D
wtemp0                      (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 233 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  string          6    2[BANK0 ] unsigned char [6]
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       6       0       0
      Temps:          0       1       0       0
      Totals:         0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels required when called:    5
 This function calls:
		_Draw_main_display
		_LCD_Init
		_LCD_display_clear
		_LCD_display_ctrl
		_LCD_send_string
		_LCD_set_cursor
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _LCD_display_ctrl *****************
 Defined at:
		line 103 in file "main.c"
 Parameters:    Size  Location     Type
  display         1    wreg     unsigned char 
  cursor          1    4[COMMON] unsigned char 
  blink           1    5[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  display         1    7[COMMON] unsigned char 
  temp            1    8[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         2       0       0       0
      Temps:          1       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___lcd_cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_display_clear *****************
 Defined at:
		line 156 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    9[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          1       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_LCD_set_cursor
		___lcd_send_char
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Init *****************
 Defined at:
		line 168 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          2       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___lcd_cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Draw_main_display *****************
 Defined at:
		line 215 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       1       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_LCD_send_string
		_LCD_set_cursor
		___lcd_send_char
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_set_cursor *****************
 Defined at:
		line 142 in file "main.c"
 Parameters:    Size  Location     Type
  row             1    wreg     unsigned char 
  column          1    4[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  row             1    7[COMMON] unsigned char 
  temp            1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         2       0       0       0
      Temps:          1       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___lcd_cmd
 This function is called by:
		_LCD_display_clear
		_Draw_main_display
		_main
 This function uses a non-reentrant model


 *************** function ___lcd_cmd *****************
 Defined at:
		line 72 in file "main.c"
 Parameters:    Size  Location     Type
  cmd             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  cmd             1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___lcd_en_pulse
		___lcd_port_write
 This function is called by:
		_LCD_display_ctrl
		_LCD_set_cursor
		_LCD_Init
		___lcd_shift_display
 This function uses a non-reentrant model


 *************** function _LCD_send_string *****************
 Defined at:
		line 94 in file "main.c"
 Parameters:    Size  Location     Type
  string          2    8[COMMON] PTR unsigned char 
		 -> date(9), l_date(5), time(8), l_time(5), 
		 -> main@string(6), update_humi(4), current_humi(4), l_humi(5), 
		 -> update_temp(5), current_temp(5), l_temp(5), 
 Auto vars:     Size  Location     Type
  i               1   11[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         1       0       0       0
      Temps:          1       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___lcd_send_char
 This function is called by:
		_Draw_main_display
		_main
 This function uses a non-reentrant model


 *************** function ___lcd_send_char *****************
 Defined at:
		line 79 in file "main.c"
 Parameters:    Size  Location     Type
  ascii           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  ascii           1    7[COMMON] unsigned char 
  low             1    6[COMMON] unsigned char 
  high            1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          2       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___lcd_en_pulse
		___lcd_port_write
 This function is called by:
		_LCD_send_string
		_LCD_display_clear
		_Draw_main_display
 This function uses a non-reentrant model


 *************** function ___lcd_port_write *****************
 Defined at:
		line 49 in file "main.c"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    2[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		___lcd_cmd
		___lcd_send_char
 This function uses a non-reentrant model


 *************** function ___lcd_en_pulse *****************
 Defined at:
		line 41 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          1       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		___lcd_cmd
		___lcd_send_char
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 23 in file "interrupts.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          2       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
interrupts.c
		_isr           		CODE           	029C	0000	7

interrupts.c estimated size: 7

shared
		__stringtab    		STRING         	01D3	0000	16
		_l_temp        		STRING         	01E8	0000	5
		__initialization		CODE           	000D	0000	12
		_l_date        		STRING         	01ED	0000	5
		_l_humi        		STRING         	01E3	0000	5
		_l_time        		STRING         	01F2	0000	5

shared estimated size: 48

main.c
		_LCD_display_ctrl		CODE           	01F7	0000	36
		_LCD_set_cursor		CODE           	023D	0000	29
		_LCD_Init      		CODE           	0118	0000	71
		_LCD_display_clear		CODE           	025A	0000	21
		_LCD_send_string		CODE           	0188	0000	38
		___lcd_cmd     		CODE           	0290	0000	12
		_main          		CODE           	001C	0000	176
		___lcd_port_write		CODE           	021B	0000	34
		_Draw_main_display		CODE           	00CC	0000	76
		___lcd_send_char		CODE           	01AE	0000	37
		___lcd_en_pulse		CODE           	0280	0000	16

main.c estimated size: 546

