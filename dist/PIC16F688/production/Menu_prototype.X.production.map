Microchip MPLAB XC8 Compiler V2.30

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.30\pic\dat\en_msgs.txt -cn \
  -h+dist/PIC16F688/production\Menu_prototype.X.production.sym \
  --cmf=dist/PIC16F688/production\Menu_prototype.X.production.cmf -z \
  -Q16F688 -oC:\Users\ILLYAB~1\AppData\Local\Temp\s76ox2 \
  --defsym=__MPLAB_BUILD=1 \
  -Mdist/PIC16F688/production/Menu_prototype.X.production.map -E1 \
  -ver=XC8 Compiler --acfsm=1493 -ASTACK=0A0h-0EFh -pstack=STACK \
  -ACODE=00h-07FFhx2 -ASTRCODE=00h-0FFFh -ASTRING=00h-0FFhx16 \
  -ACONST=00h-0FFhx16 -AENTRY=00h-0FFhx16 -ACOMMON=070h-07Fh \
  -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh -ABANK2=0120h-016Fh \
  -ARAM=020h-06Fh,0A0h-0EFh,0120h-016Fh \
  -AABS1=020h-07Fh,0A0h-0EFh,0120h-016Fh -ASFR0=00h-01Fh -ASFR1=080h-09Fh \
  -ASFR2=0100h-011Fh -ASFR3=0180h-01EFh -ACONFIG=02007h-02007h -DCONFIG=2 \
  -AIDLOC=02000h-02003h -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE \
  -pcinit=CODE -pfunctab=ENTRY -k \
  C:\Users\ILLYAB~1\AppData\Local\Temp\s76oxb.o \
  dist/PIC16F688/production\Menu_prototype.X.production.o 

Object code version is 3.11

Machine type is 16F688



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\ILLYAB~1\AppData\Local\Temp\s76oxb.o
                end_init                              B        B        2        8       0
                reset_vec                             0        0        2        0       0
                config                             2007     2007        1        0       4
dist/PIC16F688/production\Menu_prototype.X.production.o
                cinit                                 D        D       10        8       0
                intentry                              4        4        7        8       0
                config                             2007     2007        1        0       4
                text13                              394      394        7      486       0
                text12                              378      378       10      486       0
                text11                              313      313       22      486       0
                text10                              2A7      2A7       25      486       0
                text9                               281      281       26      486       0
                text8                               388      388        C      486       0
                text7                               335      335       1D      486       0
                text6                               14B      14B       4C        8       0
                text5                               352      352       15      486       0
                text4                               243      243       3E      486       0
                text3                                BE       BE       8D        8       0
                text2                               197      197       47        8       0
                text1                               2CC      2CC       24      486       0
                maintext                             1D       1D       A1        8       0
                cstackBANK0                          43       43        6       20       1
                cstackCOMMON                         70       70        C       70       1
                inittext                            367      367       11      486       0
                dataBANK0                            20       20       23       20       1
                bssBANK0                             49       49        1       20       1
                strings                             200      200       43      400       0
                idataBANK0                          2F0      2F0       23      486       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              B        B        2         0
                cinit                                 D        D       10         0
                intentry                              4        4        7         0
                reset_vec                             0        0        2         0
                text13                              394      394        7         0
                text12                              378      378       10         0
                text11                              313      313       22         0
                text10                              2A7      2A7       25         0
                text9                               281      281       26         0
                text8                               388      388        C         0
                text7                               335      335       1D         0
                text6                               14B      14B       4C         0
                text5                               352      352       15         0
                text4                               243      243       3E         0
                text3                                BE       BE       8D         0
                text2                               197      197       47         0
                text1                               2CC      2CC       24         0
                maintext                             1D       1D       A1         0
                inittext                            367      367       11         0
                idataBANK0                          2F0      2F0       23         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             200      200       43         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        C         1

        CLASS   BANK0          
                cstackBANK0                          43       43        6         1
                dataBANK0                            20       20       23         1
                bssBANK0                             49       49        1         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         4

        CLASS   IDLOC          

        CLASS   EEDATA         

        CLASS   BANK3          



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000002  000002         0       0  CODE        2
                intentry                       000004  0001DA  0001DE         8       0  CODE        2
                dataBANK0                      000020  00002A  00004A        20       1  BANK0       1
                cstackCOMMON                   000070  00000C  00007C        70       1  COMMON      1
                strings                        000200  000043  000243       400       0  STRING      2
                text4                          000243  000158  00039B       486       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            004A-006F             26           1
        BANK1            00A0-00EF             50           1
        BANK2            0120-016F             50           1
        CODE             0002-0003              2           2
                         01DE-01FF             22
                         039B-0FFF            465
        COMMON           007C-007D              2           1
        CONST            0002-0003              2           2
                         01DE-01FF             22
                         039B-0FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0002-0003              2           2
                         01DE-01FF             22
                         039B-0FFF            100
        IDLOC            2000-2003              4           2
        RAM              004A-006F             26           1
                         00A0-00EF             50
                         0120-016F             50
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-011F             20           1
        SFR3             0180-01EF             70           1
        STACK            00A0-00EF             50           1
        STRCODE          0002-0003              2           2
                         01DE-01FF             22
                         039B-0FFF            C65
        STRING           0002-0003              2           2
                         01DE-01FF             22
                         039B-0FFF            100

                                  Symbol Table

Draw_settings_display@ctr       cstackBANK0  0043
LCD_display_clear@i             cstackCOMMON 0079
LCD_display_ctrl@blink          cstackCOMMON 0075
LCD_display_ctrl@cursor         cstackCOMMON 0074
LCD_display_ctrl@display        cstackCOMMON 0077
LCD_display_ctrl@temp           cstackCOMMON 0078
LCD_send_string@i               cstackCOMMON 007B
LCD_send_string@string          cstackCOMMON 0078
LCD_set_cursor@column           cstackCOMMON 0074
LCD_set_cursor@row              cstackCOMMON 0077
LCD_set_cursor@temp             cstackCOMMON 0076
_ANSEL                          (abs)        0091
_CMCON0                         (abs)        0019
_Draw_main_display_p1           text6        014B
_Draw_main_display_p2           text4        0243
_Draw_settings_display          text3        00BE
_LCD_Init                       text2        0197
_LCD_display_clear              text5        0352
_LCD_display_ctrl               text1        02CC
_LCD_send_string                text9        0281
_LCD_set_cursor                 text7        0335
_PORTA                          (abs)        0005
_PORTAbits                      (abs)        0005
_PORTC                          (abs)        0007
_RA2                            (abs)        002A
_RA5                            (abs)        002D
_RC0                            (abs)        0038
_RC1                            (abs)        0039
_RC2                            (abs)        003A
_RC3                            (abs)        003B
_RC4                            (abs)        003C
_RC5                            (abs)        003D
_T1CON                          (abs)        0010
_T1CONbits                      (abs)        0010
_TMR1H                          (abs)        000F
_TMR1IF                         (abs)        0060
_TMR1L                          (abs)        000E
_TMR1ON                         (abs)        0080
_TRISA                          (abs)        0085
_TRISC                          (abs)        0087
__Habs1                         abs1         0000
__Hbank0                        bank0        0000
__Hbank1                        bank1        0000
__Hbank2                        bank2        0000
__Hbank3                        bank3        0000
__HbssBANK0                     bssBANK0     0000
__Hcinit                        cinit        001D
__Hclrtext                      clrtext      0000
__Hcode                         code         0000
__Hcommon                       common       0000
__Hconfig                       config       2008
__HcstackBANK0                  cstackBANK0  0000
__HcstackCOMMON                 cstackCOMMON 0000
__HdataBANK0                    dataBANK0    0000
__Heeprom_data                  eeprom_data  0000
__Hend_init                     end_init     000D
__Hfunctab                      functab      0000
__HidataBANK0                   idataBANK0   0000
__Hinit                         init         000B
__Hinittext                     inittext     0000
__Hintentry                     intentry     000B
__Hmaintext                     maintext     0000
__Hpowerup                      powerup      0000
__Hram                          ram          0000
__Hreset_vec                    reset_vec    0002
__Hsfr0                         sfr0         0000
__Hsfr1                         sfr1         0000
__Hsfr2                         sfr2         0000
__Hsfr3                         sfr3         0000
__Hspace_0                      (abs)        039B
__Hspace_1                      (abs)        007C
__Hspace_2                      (abs)        0000
__Hspace_3                      (abs)        0000
__Hspace_4                      (abs)        400F
__Hstack                        stack        0000
__Hstrings                      strings      0000
__Htext                         text         0000
__Labs1                         abs1         0000
__Lbank0                        bank0        0000
__Lbank1                        bank1        0000
__Lbank2                        bank2        0000
__Lbank3                        bank3        0000
__LbssBANK0                     bssBANK0     0000
__Lcinit                        cinit        000D
__Lclrtext                      clrtext      0000
__Lcode                         code         0000
__Lcommon                       common       0000
__Lconfig                       config       0000
__LcstackBANK0                  cstackBANK0  0000
__LcstackCOMMON                 cstackCOMMON 0000
__LdataBANK0                    dataBANK0    0000
__Leeprom_data                  eeprom_data  0000
__Lend_init                     end_init     000B
__Lfunctab                      functab      0000
__LidataBANK0                   idataBANK0   0000
__Linit                         init         000B
__Linittext                     inittext     0000
__Lintentry                     intentry     0004
__Lmaintext                     maintext     0000
__Lpowerup                      powerup      0000
__Lram                          ram          0000
__Lreset_vec                    reset_vec    0000
__Lsfr0                         sfr0         0000
__Lsfr1                         sfr1         0000
__Lsfr2                         sfr2         0000
__Lsfr3                         sfr3         0000
__Lspace_0                      (abs)        0000
__Lspace_1                      (abs)        0000
__Lspace_2                      (abs)        0000
__Lspace_3                      (abs)        0000
__Lspace_4                      (abs)        0000
__Lstack                        stack        0000
__Lstrings                      strings      0000
__Ltext                         text         0000
__S0                            (abs)        039B
__S1                            (abs)        007C
__S2                            (abs)        0000
__S3                            (abs)        0000
___int_sp                       stack        0000
___latbits                      (abs)        0001
___lcd_cmd                      text8        0388
___lcd_cmd@cmd                  cstackCOMMON 0073
___lcd_en_pulse                 text12       0378
___lcd_port_write               text11       0313
___lcd_port_write@data          cstackCOMMON 0072
___lcd_send_char                text10       02A7
___lcd_send_char@ascii          cstackCOMMON 0077
___lcd_send_char@high           cstackCOMMON 0075
___lcd_send_char@low            cstackCOMMON 0076
___sp                           stack        0000
___stackhi                      (abs)        0000
___stacklo                      (abs)        0000
__end_of_Draw_main_display_p1   text6        0197
__end_of_Draw_main_display_p2   text4        0281
__end_of_Draw_settings_display  text3        014B
__end_of_LCD_Init               text2        01DE
__end_of_LCD_display_clear      text5        0367
__end_of_LCD_display_ctrl       text1        02F0
__end_of_LCD_send_string        text9        02A7
__end_of_LCD_set_cursor         text7        0352
__end_of___lcd_cmd              text8        0394
__end_of___lcd_en_pulse         text12       0388
__end_of___lcd_port_write       text11       0335
__end_of___lcd_send_char        text10       02CC
__end_of__initialization        cinit        001A
__end_of__stringtab             strings      0210
__end_of_isr                    text13       039B
__end_of_l_date                 strings      0234
__end_of_l_humi                 strings      022A
__end_of_l_temp                 strings      022F
__end_of_l_time                 strings      0239
__end_of_main                   maintext     00BE
__end_of_s_date                 strings      023E
__end_of_s_humi                 strings      0225
__end_of_s_temp                 strings      021C
__end_of_s_time                 strings      0243
__initialization                cinit        000D
__pbssBANK0                     bssBANK0     0049
__pcstackBANK0                  cstackBANK0  0043
__pcstackCOMMON                 cstackCOMMON 0070
__pdataBANK0                    dataBANK0    0020
__pidataBANK0                   idataBANK0   02F0
__pintentry                     intentry     0004
__pmaintext                     maintext     001D
__pstrings                      strings      0200
__ptext1                        text1        02CC
__ptext10                       text10       02A7
__ptext11                       text11       0313
__ptext12                       text12       0378
__ptext13                       text13       0394
__ptext2                        text2        0197
__ptext3                        text3        00BE
__ptext4                        text4        0243
__ptext5                        text5        0352
__ptext6                        text6        014B
__ptext7                        text7        0335
__ptext8                        text8        0388
__ptext9                        text9        0281
__size_of_Draw_main_display_p1  (abs)        0000
__size_of_Draw_main_display_p2  (abs)        0000
__size_of_Draw_settings_display (abs)        0000
__size_of_LCD_Init              (abs)        0000
__size_of_LCD_display_clear     (abs)        0000
__size_of_LCD_display_ctrl      (abs)        0000
__size_of_LCD_send_string       (abs)        0000
__size_of_LCD_set_cursor        (abs)        0000
__size_of___lcd_cmd             (abs)        0000
__size_of___lcd_en_pulse        (abs)        0000
__size_of___lcd_port_write      (abs)        0000
__size_of___lcd_send_char       (abs)        0000
__size_of_isr                   (abs)        0000
__size_of_main                  (abs)        0000
__stringbase                    strings      020F
__stringtab                     strings      0200
_counter                        bssBANK0     0049
_current_humi                   dataBANK0    003F
_current_temp                   dataBANK0    0036
_date                           dataBANK0    0020
_isr                            text13       0394
_l_date                         strings      022F
_l_humi                         strings      0225
_l_temp                         strings      022A
_l_time                         strings      0234
_main                           maintext     001D
_s_date                         strings      0239
_s_humi                         strings      021C
_s_temp                         strings      0210
_s_time                         strings      023E
_time                           dataBANK0    0029
_update_humi                    dataBANK0    003B
_update_temp                    dataBANK0    0031
btemp                           (abs)        007E
end_of_initialization           cinit        001A
init_fetch0                     inittext     0367
init_ram0                       inittext     036B
interrupt_function              intentry     0004
intlevel0                       functab      0000
intlevel1                       functab      0000
intlevel2                       functab      0000
intlevel3                       functab      0000
intlevel4                       functab      0000
intlevel5                       functab      0000
main@currentCLK                 cstackBANK0  0048
main@lastCLK                    cstackBANK0  0047
reset_vec                       reset_vec    0000
saved_w                         (abs)        007E
start                           init         000B
start_initialization            cinit        000D
wtemp0                          (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 290 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  currentCLK      1    5[BANK0 ] unsigned char 
  lastCLK         1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       2       0       0
      Temps:          0       2       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels required when called:    6
 This function calls:
		_Draw_main_display_p1
		_Draw_main_display_p2
		_Draw_settings_display
		_LCD_Init
		_LCD_display_clear
		_LCD_display_ctrl
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _LCD_display_ctrl *****************
 Defined at:
		line 103 in file "main.c"
 Parameters:    Size  Location     Type
  display         1    wreg     unsigned char 
  cursor          1    4[COMMON] unsigned char 
  blink           1    5[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  display         1    7[COMMON] unsigned char 
  temp            1    8[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         2       0       0       0
      Temps:          1       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___lcd_cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Init *****************
 Defined at:
		line 168 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          2       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___lcd_cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Draw_settings_display *****************
 Defined at:
		line 252 in file "main.c"
 Parameters:    Size  Location     Type
  ctr             2    0[BANK0 ] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCD_display_clear
		_LCD_send_string
		_LCD_set_cursor
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Draw_main_display_p2 *****************
 Defined at:
		line 239 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       1       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCD_display_clear
		_LCD_send_string
		_LCD_set_cursor
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_display_clear *****************
 Defined at:
		line 156 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    9[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          1       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_LCD_set_cursor
		___lcd_send_char
 This function is called by:
		_Draw_main_display_p2
		_Draw_settings_display
		_main
 This function uses a non-reentrant model


 *************** function _Draw_main_display_p1 *****************
 Defined at:
		line 223 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       1       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_LCD_send_string
		_LCD_set_cursor
		___lcd_send_char
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_set_cursor *****************
 Defined at:
		line 142 in file "main.c"
 Parameters:    Size  Location     Type
  row             1    wreg     unsigned char 
  column          1    4[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  row             1    7[COMMON] unsigned char 
  temp            1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         2       0       0       0
      Temps:          1       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___lcd_cmd
 This function is called by:
		_LCD_display_clear
		_Draw_main_display_p1
		_Draw_main_display_p2
		_Draw_settings_display
 This function uses a non-reentrant model


 *************** function ___lcd_cmd *****************
 Defined at:
		line 72 in file "main.c"
 Parameters:    Size  Location     Type
  cmd             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  cmd             1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___lcd_en_pulse
		___lcd_port_write
 This function is called by:
		_LCD_display_ctrl
		_LCD_set_cursor
		_LCD_Init
		___lcd_shift_display
 This function uses a non-reentrant model


 *************** function _LCD_send_string *****************
 Defined at:
		line 94 in file "main.c"
 Parameters:    Size  Location     Type
  string          2    8[COMMON] PTR unsigned char 
		 -> s_humi(9), s_temp(12), s_date(5), s_time(5), 
		 -> date(9), l_date(5), time(8), l_time(5), 
		 -> update_humi(4), current_humi(4), l_humi(5), update_temp(5), 
		 -> current_temp(5), l_temp(5), 
 Auto vars:     Size  Location     Type
  i               1   11[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         1       0       0       0
      Temps:          1       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___lcd_send_char
 This function is called by:
		_Draw_main_display_p1
		_Draw_main_display_p2
		_Draw_settings_display
 This function uses a non-reentrant model


 *************** function ___lcd_send_char *****************
 Defined at:
		line 79 in file "main.c"
 Parameters:    Size  Location     Type
  ascii           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  ascii           1    7[COMMON] unsigned char 
  low             1    6[COMMON] unsigned char 
  high            1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          2       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___lcd_en_pulse
		___lcd_port_write
 This function is called by:
		_LCD_send_string
		_LCD_display_clear
		_Draw_main_display_p1
 This function uses a non-reentrant model


 *************** function ___lcd_port_write *****************
 Defined at:
		line 49 in file "main.c"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    2[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		___lcd_cmd
		___lcd_send_char
 This function uses a non-reentrant model


 *************** function ___lcd_en_pulse *****************
 Defined at:
		line 41 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          1       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		___lcd_cmd
		___lcd_send_char
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 23 in file "interrupts.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          2       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
interrupts.c
		_isr           		CODE           	0394	0000	7

interrupts.c estimated size: 7

shared
		__stringtab    		STRING         	0200	0000	16
		_l_temp        		STRING         	022A	0000	5
		_s_temp        		STRING         	0210	0000	12
		__initialization		CODE           	000D	0000	13
		_l_date        		STRING         	022F	0000	5
		_l_humi        		STRING         	0225	0000	5
		_s_date        		STRING         	0239	0000	5
		_s_humi        		STRING         	021C	0000	9
		_l_time        		STRING         	0234	0000	5
		_s_time        		STRING         	023E	0000	5

shared estimated size: 80

main.c
		_LCD_display_ctrl		CODE           	02CC	0000	36
		_LCD_set_cursor		CODE           	0335	0000	29
		_LCD_Init      		CODE           	0197	0000	71
		_LCD_display_clear		CODE           	0352	0000	21
		_LCD_send_string		CODE           	0281	0000	38
		___lcd_cmd     		CODE           	0388	0000	12
		_main          		CODE           	001D	0000	161
		___lcd_port_write		CODE           	0313	0000	34
		_Draw_settings_display		CODE           	00BE	0000	141
		_Draw_main_display_p1		CODE           	014B	0000	76
		_Draw_main_display_p2		CODE           	0243	0000	62
		___lcd_send_char		CODE           	02A7	0000	37
		___lcd_en_pulse		CODE           	0378	0000	16

main.c estimated size: 734

