

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat Oct 24 01:54:51 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F688
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.30
    40                           ; Generated 26/08/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F688 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0007                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0087                     	;# 
   103  008C                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0095                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0000                     	;# 
   123  0001                     	;# 
   124  0002                     	;# 
   125  0003                     	;# 
   126  0004                     	;# 
   127  0005                     	;# 
   128  0007                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000E                     	;# 
   133  000E                     	;# 
   134  000F                     	;# 
   135  0010                     	;# 
   136  0011                     	;# 
   137  0012                     	;# 
   138  0013                     	;# 
   139  0014                     	;# 
   140  0015                     	;# 
   141  0016                     	;# 
   142  0017                     	;# 
   143  0018                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001E                     	;# 
   147  001F                     	;# 
   148  0081                     	;# 
   149  0085                     	;# 
   150  0087                     	;# 
   151  008C                     	;# 
   152  008E                     	;# 
   153  008F                     	;# 
   154  0090                     	;# 
   155  0091                     	;# 
   156  0095                     	;# 
   157  0095                     	;# 
   158  0096                     	;# 
   159  0096                     	;# 
   160  0097                     	;# 
   161  0098                     	;# 
   162  0099                     	;# 
   163  009A                     	;# 
   164  009A                     	;# 
   165  009B                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0007                     	;# 
   177  000A                     	;# 
   178  000B                     	;# 
   179  000C                     	;# 
   180  000E                     	;# 
   181  000E                     	;# 
   182  000F                     	;# 
   183  0010                     	;# 
   184  0011                     	;# 
   185  0012                     	;# 
   186  0013                     	;# 
   187  0014                     	;# 
   188  0015                     	;# 
   189  0016                     	;# 
   190  0017                     	;# 
   191  0018                     	;# 
   192  0019                     	;# 
   193  001A                     	;# 
   194  001E                     	;# 
   195  001F                     	;# 
   196  0081                     	;# 
   197  0085                     	;# 
   198  0087                     	;# 
   199  008C                     	;# 
   200  008E                     	;# 
   201  008F                     	;# 
   202  0090                     	;# 
   203  0091                     	;# 
   204  0095                     	;# 
   205  0095                     	;# 
   206  0096                     	;# 
   207  0096                     	;# 
   208  0097                     	;# 
   209  0098                     	;# 
   210  0099                     	;# 
   211  009A                     	;# 
   212  009A                     	;# 
   213  009B                     	;# 
   214  009C                     	;# 
   215  009D                     	;# 
   216  009E                     	;# 
   217  009F                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0007                     	;# 
   225  000A                     	;# 
   226  000B                     	;# 
   227  000C                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0087                     	;# 
   247  008C                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0095                     	;# 
   253  0095                     	;# 
   254  0096                     	;# 
   255  0096                     	;# 
   256  0097                     	;# 
   257  0098                     	;# 
   258  0099                     	;# 
   259  009A                     	;# 
   260  009A                     	;# 
   261  009B                     	;# 
   262  009C                     	;# 
   263  009D                     	;# 
   264  009E                     	;# 
   265  009F                     	;# 
   266  0000                     	;# 
   267  0001                     	;# 
   268  0002                     	;# 
   269  0003                     	;# 
   270  0004                     	;# 
   271  0005                     	;# 
   272  0007                     	;# 
   273  000A                     	;# 
   274  000B                     	;# 
   275  000C                     	;# 
   276  000E                     	;# 
   277  000E                     	;# 
   278  000F                     	;# 
   279  0010                     	;# 
   280  0011                     	;# 
   281  0012                     	;# 
   282  0013                     	;# 
   283  0014                     	;# 
   284  0015                     	;# 
   285  0016                     	;# 
   286  0017                     	;# 
   287  0018                     	;# 
   288  0019                     	;# 
   289  001A                     	;# 
   290  001E                     	;# 
   291  001F                     	;# 
   292  0081                     	;# 
   293  0085                     	;# 
   294  0087                     	;# 
   295  008C                     	;# 
   296  008E                     	;# 
   297  008F                     	;# 
   298  0090                     	;# 
   299  0091                     	;# 
   300  0095                     	;# 
   301  0095                     	;# 
   302  0096                     	;# 
   303  0096                     	;# 
   304  0097                     	;# 
   305  0098                     	;# 
   306  0099                     	;# 
   307  009A                     	;# 
   308  009A                     	;# 
   309  009B                     	;# 
   310  009C                     	;# 
   311  009D                     	;# 
   312  009E                     	;# 
   313  009F                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0007                     	;# 
   321  000A                     	;# 
   322  000B                     	;# 
   323  000C                     	;# 
   324  000E                     	;# 
   325  000E                     	;# 
   326  000F                     	;# 
   327  0010                     	;# 
   328  0011                     	;# 
   329  0012                     	;# 
   330  0013                     	;# 
   331  0014                     	;# 
   332  0015                     	;# 
   333  0016                     	;# 
   334  0017                     	;# 
   335  0018                     	;# 
   336  0019                     	;# 
   337  001A                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0087                     	;# 
   343  008C                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0095                     	;# 
   349  0095                     	;# 
   350  0096                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362                           
   363                           	psect	idataBANK0
   364  069C                     __pidataBANK0:
   365                           
   366                           ;initializer for _time_hours
   367  069C  3418               	retlw	24
   368                           
   369                           ;initializer for _humi_integer
   370  069D  342D               	retlw	45
   371                           
   372                           ;initializer for _temp_decimal
   373  069E  3405               	retlw	5
   374                           
   375                           ;initializer for _temp_integer
   376  069F  3417               	retlw	23
   377                           
   378                           ;initializer for _time
   379  06A0  3432               	retlw	50
   380  06A1  3434               	retlw	52
   381  06A2  343A               	retlw	58
   382  06A3  3430               	retlw	48
   383  06A4  3430               	retlw	48
   384  06A5  3400               	retlw	0
   385                           
   386                           ;initializer for _update_temp
   387  06A6  3432               	retlw	50
   388  06A7  3433               	retlw	51
   389  06A8  342E               	retlw	46
   390  06A9  3435               	retlw	53
   391  06AA  3400               	retlw	0
   392                           
   393                           ;initializer for _l_time
   394  06AB  3454               	retlw	84
   395  06AC  3469               	retlw	105
   396  06AD  346D               	retlw	109
   397  06AE  3465               	retlw	101
   398  06AF  3400               	retlw	0
   399                           
   400                           ;initializer for _s_date
   401  06B0  3444               	retlw	68
   402  06B1  3461               	retlw	97
   403  06B2  3474               	retlw	116
   404  06B3  3465               	retlw	101
   405  06B4  3400               	retlw	0
   406                           
   407                           ;initializer for _s_time
   408  06B5  3454               	retlw	84
   409  06B6  3469               	retlw	105
   410  06B7  346D               	retlw	109
   411  06B8  3465               	retlw	101
   412  06B9  3400               	retlw	0
   413                           
   414                           ;initializer for _update_humi
   415  06BA  3434               	retlw	52
   416  06BB  3435               	retlw	53
   417  06BC  3425               	retlw	37
   418  06BD  3400               	retlw	0
   419                           
   420                           ;initializer for _current_humi
   421  06BE  3433               	retlw	51
   422  06BF  3438               	retlw	56
   423  06C0  3425               	retlw	37
   424  06C1  3400               	retlw	0
   425                           
   426                           	psect	idataBANK1
   427  0560                     __pidataBANK1:
   428                           
   429                           ;initializer for _s_end
   430  0560  342D               	retlw	45
   431  0561  342D               	retlw	45
   432  0562  342D               	retlw	45
   433  0563  342D               	retlw	45
   434  0564  342D               	retlw	45
   435  0565  342D               	retlw	45
   436  0566  342D               	retlw	45
   437  0567  342D               	retlw	45
   438  0568  342D               	retlw	45
   439  0569  342D               	retlw	45
   440  056A  342D               	retlw	45
   441  056B  342D               	retlw	45
   442  056C  342D               	retlw	45
   443  056D  342D               	retlw	45
   444  056E  342D               	retlw	45
   445  056F  342D               	retlw	45
   446  0570  3400               	retlw	0
   447                           
   448                           ;initializer for _s_temp
   449  0571  3454               	retlw	84
   450  0572  3465               	retlw	101
   451  0573  346D               	retlw	109
   452  0574  3470               	retlw	112
   453  0575  3465               	retlw	101
   454  0576  3472               	retlw	114
   455  0577  3461               	retlw	97
   456  0578  3474               	retlw	116
   457  0579  3475               	retlw	117
   458  057A  3472               	retlw	114
   459  057B  3465               	retlw	101
   460  057C  3400               	retlw	0
   461                           
   462                           ;initializer for _date
   463  057D  3433               	retlw	51
   464  057E  3430               	retlw	48
   465  057F  342F               	retlw	47
   466  0580  3430               	retlw	48
   467  0581  3437               	retlw	55
   468  0582  342F               	retlw	47
   469  0583  3439               	retlw	57
   470  0584  3432               	retlw	50
   471  0585  3400               	retlw	0
   472                           
   473                           ;initializer for _s_humi
   474  0586  3448               	retlw	72
   475  0587  3475               	retlw	117
   476  0588  346D               	retlw	109
   477  0589  3469               	retlw	105
   478  058A  3464               	retlw	100
   479  058B  3469               	retlw	105
   480  058C  3474               	retlw	116
   481  058D  3479               	retlw	121
   482  058E  3400               	retlw	0
   483                           
   484                           ;initializer for _current_temp
   485  058F  3432               	retlw	50
   486  0590  3431               	retlw	49
   487  0591  342E               	retlw	46
   488  0592  3435               	retlw	53
   489  0593  3400               	retlw	0
   490                           
   491                           ;initializer for _l_humi
   492  0594  3448               	retlw	72
   493  0595  3475               	retlw	117
   494  0596  346D               	retlw	109
   495  0597  3469               	retlw	105
   496  0598  3400               	retlw	0
   497                           
   498                           ;initializer for _l_temp
   499  0599  3454               	retlw	84
   500  059A  3465               	retlw	101
   501  059B  346D               	retlw	109
   502  059C  3470               	retlw	112
   503  059D  3400               	retlw	0
   504                           
   505                           ;initializer for _l_date
   506  059E  3444               	retlw	68
   507  059F  3461               	retlw	97
   508  05A0  3474               	retlw	116
   509  05A1  3465               	retlw	101
   510  05A2  3400               	retlw	0
   511                           
   512                           	psect	strings
   513  0600                     __pstrings:
   514  0600                     stringtab:
   515  0600                     __stringtab:
   516                           
   517                           ;	String table - string pointers are 1 byte each
   518  0600  1BFF               	btfsc	btemp+1,7
   519  0601  2E0A               	ljmp	stringcode
   520  0602  1383               	bcf	3,7
   521  0603  187F               	btfsc	btemp+1,0
   522  0604  1783               	bsf	3,7
   523  0605  0800               	movf	0,w
   524  0606  0A84               	incf	4,f
   525  0607  1903               	skipnz
   526  0608  0AFF               	incf	btemp+1,f
   527  0609  0008               	return
   528  060A                     stringcode:
   529  060A                     stringdir:
   530  060A  3006               	movlw	high stringdir
   531  060B  008A               	movwf	10
   532  060C  0804               	movf	4,w
   533  060D  0A84               	incf	4,f
   534  060E  0782               	addwf	2,f
   535  060F                     __stringbase:
   536  060F  3400               	retlw	0
   537  0610                     __end_of__stringtab:
   538  0610                     _dpowers:
   539  0610  3401               	retlw	1
   540  0611  3400               	retlw	0
   541  0612  340A               	retlw	10
   542  0613  3400               	retlw	0
   543  0614  3464               	retlw	100
   544  0615  3400               	retlw	0
   545  0616  34E8               	retlw	232
   546  0617  3403               	retlw	3
   547  0618  3410               	retlw	16
   548  0619  3427               	retlw	39
   549  061A                     __end_of_dpowers:
   550  0010                     _T1CON	set	16
   551  000F                     _TMR1H	set	15
   552  000E                     _TMR1L	set	14
   553  0010                     _T1CONbits	set	16
   554  0007                     _PORTC	set	7
   555  0005                     _PORTA	set	5
   556  0019                     _CMCON0	set	25
   557  0005                     _PORTAbits	set	5
   558  0080                     _TMR1ON	set	128
   559  0060                     _TMR1IF	set	96
   560  002A                     _RA2	set	42
   561  003D                     _RC5	set	61
   562  003C                     _RC4	set	60
   563  002D                     _RA5	set	45
   564  003B                     _RC3	set	59
   565  003A                     _RC2	set	58
   566  0039                     _RC1	set	57
   567  0038                     _RC0	set	56
   568  0087                     _TRISC	set	135
   569  0085                     _TRISA	set	133
   570  0091                     _ANSEL	set	145
   571  061A                     STR_3:
   572  061A  3425               	retlw	37	;'%'
   573  061B  3473               	retlw	115	;'s'
   574  061C  3425               	retlw	37	;'%'
   575  061D  3464               	retlw	100	;'d'
   576  061E  343A               	retlw	58	;':'
   577  061F  3425               	retlw	37	;'%'
   578  0620  3473               	retlw	115	;'s'
   579  0621  3425               	retlw	37	;'%'
   580  0622  3464               	retlw	100	;'d'
   581  0623  3400               	retlw	0
   582  0624                     STR_13:
   583  0624  3428               	retlw	40	;'('
   584  0625  346E               	retlw	110	;'n'
   585  0626  3475               	retlw	117	;'u'
   586  0627  346C               	retlw	108	;'l'
   587  0628  346C               	retlw	108	;'l'
   588  0629  3429               	retlw	41	;')'
   589  062A  3400               	retlw	0
   590  062B                     STR_1:
   591  062B  3425               	retlw	37	;'%'
   592  062C  3464               	retlw	100	;'d'
   593  062D  342E               	retlw	46	;'.'
   594  062E  3425               	retlw	37	;'%'
   595  062F  3464               	retlw	100	;'d'
   596  0630  3400               	retlw	0
   597  0631                     STR_2:
   598  0631  3425               	retlw	37	;'%'
   599  0632  3464               	retlw	100	;'d'
   600  0633  3425               	retlw	37	;'%'
   601  0634  3425               	retlw	37	;'%'
   602  0635  3400               	retlw	0
   603  0636                     STR_4:
   604  0636  3430               	retlw	48	;'0'
   605  0637  3400               	retlw	0
   606  0635                     
   607                           	psect	cinit
   608  000D                     start_initialization:	
   609                           ; #config settings
   610                           
   611  000D                     __initialization:
   612                           
   613                           ; Initialize objects allocated to BANK1
   614  000D  1383               	bcf	3,7	;select IRP bank0
   615  000E  30E3               	movlw	low (__pdataBANK1+67)
   616  000F  00FD               	movwf	btemp+-1
   617  0010  3005               	movlw	high __pidataBANK1
   618  0011  00FE               	movwf	btemp
   619  0012  3060               	movlw	low __pidataBANK1
   620  0013  00FF               	movwf	btemp+1
   621  0014  30A0               	movlw	low __pdataBANK1
   622  0015  0084               	movwf	4
   623  0016  118A  2796  118A   	fcall	init_ram0
   624                           
   625                           ; Initialize objects allocated to BANK0
   626  0019  3046               	movlw	low (__pdataBANK0+38)
   627  001A  00FD               	movwf	btemp+-1
   628  001B  3006               	movlw	high __pidataBANK0
   629  001C  00FE               	movwf	btemp
   630  001D  309C               	movlw	low __pidataBANK0
   631  001E  00FF               	movwf	btemp+1
   632  001F  3020               	movlw	low __pdataBANK0
   633  0020  0084               	movwf	4
   634  0021  118A  2796  118A   	fcall	init_ram0
   635                           
   636                           ; Clear objects allocated to BANK0
   637  0024  01EC               	clrf	__pbssBANK0& (0+127)
   638  0025  01ED               	clrf	(__pbssBANK0+1)& (0+127)
   639  0026  01EE               	clrf	(__pbssBANK0+2)& (0+127)
   640  0027  01EF               	clrf	(__pbssBANK0+3)& (0+127)
   641  0028                     end_of_initialization:	
   642                           ;End of C runtime variable initialization code
   643                           
   644  0028                     __end_of__initialization:
   645  0028  0183               	clrf	3
   646  0029  118A  2A76         	ljmp	_main	;jump to C main() function
   647                           
   648                           	psect	bssBANK0
   649  006C                     __pbssBANK0:
   650  006C                     _counter:
   651  006C                     	ds	1
   652  006D                     _s_lastCLK:
   653  006D                     	ds	1
   654  006E                     _s_currentCLK:
   655  006E                     	ds	1
   656  006F                     _time_minutes:
   657  006F                     	ds	1
   658                           
   659                           	psect	dataBANK0
   660  0020                     __pdataBANK0:
   661  0020                     _time_hours:
   662  0020                     	ds	1
   663  0021                     _humi_integer:
   664  0021                     	ds	1
   665  0022                     _temp_decimal:
   666  0022                     	ds	1
   667  0023                     _temp_integer:
   668  0023                     	ds	1
   669  0024                     _time:
   670  0024                     	ds	6
   671  002A                     _update_temp:
   672  002A                     	ds	5
   673  002F                     _l_time:
   674  002F                     	ds	5
   675  0034                     _s_date:
   676  0034                     	ds	5
   677  0039                     _s_time:
   678  0039                     	ds	5
   679  003E                     _update_humi:
   680  003E                     	ds	4
   681  0042                     _current_humi:
   682  0042                     	ds	4
   683                           
   684                           	psect	dataBANK1
   685  00A0                     __pdataBANK1:
   686  00A0                     _s_end:
   687  00A0                     	ds	17
   688  00B1                     _s_temp:
   689  00B1                     	ds	12
   690  00BD                     _date:
   691  00BD                     	ds	9
   692  00C6                     _s_humi:
   693  00C6                     	ds	9
   694  00CF                     _current_temp:
   695  00CF                     	ds	5
   696  00D4                     _l_humi:
   697  00D4                     	ds	5
   698  00D9                     _l_temp:
   699  00D9                     	ds	5
   700  00DE                     _l_date:
   701  00DE                     	ds	5
   702                           
   703                           	psect	inittext
   704  0792                     init_fetch0:	
   705                           ;	Called with low address in FSR and high address in W
   706                           
   707  0792  087E               	movf	btemp,w
   708  0793  008A               	movwf	10
   709  0794  087F               	movf	btemp+1,w
   710  0795  0082               	movwf	2
   711  0796                     init_ram0:	
   712                           ;Called with:
   713                           ;	high address of idata address in btemp 
   714                           ;	low address of idata address in btemp+1 
   715                           ;	low address of data in FSR
   716                           ;	high address + 1 of data in btemp-1
   717                           
   718  0796  118A  2792  118A   	fcall	init_fetch0
   719  0799  0080               	movwf	0
   720  079A  0A84               	incf	4,f
   721  079B  0804               	movf	4,w
   722  079C  067D               	xorwf	btemp+-1,w
   723  079D  1903               	btfsc	3,2
   724  079E  3400               	retlw	0
   725  079F  0AFF               	incf	btemp+1,f
   726  07A0  1903               	btfsc	3,2
   727  07A1  0AFE               	incf	btemp,f
   728  07A2  2F96               	goto	init_ram0
   729                           
   730                           	psect	cstackCOMMON
   731  0070                     __pcstackCOMMON:
   732  0070                     ?_isr:
   733  0070                     ??_isr:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ?___lcd_en_pulse:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     ?___lcd_port_write:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0070                     ?___lcd_cmd:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     ?___lcd_send_char:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0070                     ?_LCD_send_string:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0070                     ?_LCD_display_clear:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0070                     ?_LCD_Init:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0070                     ?_Draw_main_display_p1:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     ?_Draw_main_display_p2:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     ?_set_temp:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     ?_set_humi:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     ?_set_time:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     ?_set_date:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     ?_main:	
   776                           ; 1 bytes @ 0x0
   777                           
   778                           
   779                           ; 1 bytes @ 0x0
   780  0070                     	ds	2
   781  0072                     ??___lcd_en_pulse:
   782  0072                     ??___lcd_port_write:	
   783                           ; 1 bytes @ 0x2
   784                           
   785  0072                     ??_set_date:	
   786                           ; 1 bytes @ 0x2
   787                           
   788  0072                     ?___lwdiv:	
   789                           ; 1 bytes @ 0x2
   790                           
   791  0072                     ___lcd_port_write@data:	
   792                           ; 2 bytes @ 0x2
   793                           
   794  0072                     ___lwdiv@divisor:	
   795                           ; 1 bytes @ 0x2
   796                           
   797                           
   798                           ; 2 bytes @ 0x2
   799  0072                     	ds	1
   800  0073                     ??___lcd_cmd:
   801  0073                     ??___lcd_send_char:	
   802                           ; 1 bytes @ 0x3
   803                           
   804  0073                     ___lcd_cmd@cmd:	
   805                           ; 1 bytes @ 0x3
   806                           
   807                           
   808                           ; 1 bytes @ 0x3
   809  0073                     	ds	1
   810  0074                     ?_LCD_display_ctrl:
   811  0074                     ?_LCD_set_cursor:	
   812                           ; 1 bytes @ 0x4
   813                           
   814  0074                     ??_LCD_Init:	
   815                           ; 1 bytes @ 0x4
   816                           
   817  0074                     LCD_display_ctrl@cursor:	
   818                           ; 1 bytes @ 0x4
   819                           
   820  0074                     LCD_set_cursor@column:	
   821                           ; 1 bytes @ 0x4
   822                           
   823  0074                     ___lwdiv@dividend:	
   824                           ; 1 bytes @ 0x4
   825                           
   826                           
   827                           ; 2 bytes @ 0x4
   828  0074                     	ds	1
   829  0075                     ??_LCD_set_cursor:
   830  0075                     ___lcd_send_char@high:	
   831                           ; 1 bytes @ 0x5
   832                           
   833  0075                     LCD_display_ctrl@blink:	
   834                           ; 1 bytes @ 0x5
   835                           
   836                           
   837                           ; 1 bytes @ 0x5
   838  0075                     	ds	1
   839  0076                     ??_LCD_display_ctrl:
   840  0076                     ??___lwdiv:	
   841                           ; 1 bytes @ 0x6
   842                           
   843  0076                     ___lcd_send_char@low:	
   844                           ; 1 bytes @ 0x6
   845                           
   846  0076                     LCD_set_cursor@temp:	
   847                           ; 1 bytes @ 0x6
   848                           
   849                           
   850                           ; 1 bytes @ 0x6
   851  0076                     	ds	1
   852  0077                     ___lcd_send_char@ascii:
   853  0077                     LCD_display_ctrl@display:	
   854                           ; 1 bytes @ 0x7
   855                           
   856  0077                     LCD_set_cursor@row:	
   857                           ; 1 bytes @ 0x7
   858                           
   859  0077                     ___lwdiv@quotient:	
   860                           ; 1 bytes @ 0x7
   861                           
   862                           
   863                           ; 2 bytes @ 0x7
   864  0077                     	ds	1
   865  0078                     ??_LCD_send_string:
   866  0078                     ??_LCD_display_clear:	
   867                           ; 1 bytes @ 0x8
   868                           
   869  0078                     LCD_display_ctrl@temp:	
   870                           ; 1 bytes @ 0x8
   871                           
   872                           
   873                           ; 1 bytes @ 0x8
   874  0078                     	ds	1
   875  0079                     LCD_send_string@i:
   876  0079                     LCD_display_clear@i:	
   877                           ; 1 bytes @ 0x9
   878                           
   879  0079                     ___lwdiv@counter:	
   880                           ; 1 bytes @ 0x9
   881                           
   882                           
   883                           ; 1 bytes @ 0x9
   884  0079                     	ds	1
   885  007A                     ??___lwmod:
   886  007A                     LCD_send_string@string:	
   887                           ; 1 bytes @ 0xA
   888                           
   889                           
   890                           ; 1 bytes @ 0xA
   891  007A                     	ds	1
   892  007B                     ??_Draw_main_display_p1:
   893  007B                     ??_Draw_main_display_p2:	
   894                           ; 1 bytes @ 0xB
   895                           
   896  007B                     ??_Draw_settings_display:	
   897                           ; 1 bytes @ 0xB
   898                           
   899  007B                     ___lwmod@counter:	
   900                           ; 1 bytes @ 0xB
   901                           
   902                           
   903                           ; 1 bytes @ 0xB
   904  007B                     	ds	1
   905                           
   906                           	psect	cstackBANK0
   907  0046                     __pcstackBANK0:
   908  0046                     ?_Draw_settings_display:
   909  0046                     ?___lwmod:	
   910                           ; 1 bytes @ 0x0
   911                           
   912  0046                     Draw_settings_display@ctr:	
   913                           ; 2 bytes @ 0x0
   914                           
   915  0046                     ___lwmod@divisor:	
   916                           ; 2 bytes @ 0x0
   917                           
   918                           
   919                           ; 2 bytes @ 0x0
   920  0046                     	ds	2
   921  0048                     ___lwmod@dividend:
   922                           
   923                           ; 2 bytes @ 0x2
   924  0048                     	ds	2
   925  004A                     ?_sprintf:
   926  004A                     sprintf@f:	
   927                           ; 2 bytes @ 0x4
   928                           
   929                           
   930                           ; 1 bytes @ 0x4
   931  004A                     	ds	9
   932  0053                     ??_sprintf:
   933                           
   934                           ; 1 bytes @ 0xD
   935  0053                     	ds	3
   936  0056                     sprintf@flag:
   937                           
   938                           ; 1 bytes @ 0x10
   939  0056                     	ds	1
   940  0057                     sprintf@prec:
   941                           
   942                           ; 1 bytes @ 0x11
   943  0057                     	ds	1
   944  0058                     sprintf@ap:
   945                           
   946                           ; 1 bytes @ 0x12
   947  0058                     	ds	1
   948  0059                     sprintf@cp:
   949                           
   950                           ; 2 bytes @ 0x13
   951  0059                     	ds	2
   952  005B                     sprintf@val:
   953                           
   954                           ; 2 bytes @ 0x15
   955  005B                     	ds	2
   956  005D                     sprintf@sp:
   957                           
   958                           ; 1 bytes @ 0x17
   959  005D                     	ds	1
   960  005E                     sprintf@c:
   961                           
   962                           ; 1 bytes @ 0x18
   963  005E                     	ds	1
   964  005F                     ??_set_temp:
   965  005F                     ??_set_humi:	
   966                           ; 1 bytes @ 0x19
   967                           
   968  005F                     ??_set_time:	
   969                           ; 1 bytes @ 0x19
   970                           
   971                           
   972                           ; 1 bytes @ 0x19
   973  005F                     	ds	5
   974  0064                     _set_time$182:
   975                           
   976                           ; 1 bytes @ 0x1E
   977  0064                     	ds	1
   978  0065                     _set_time$183:
   979                           
   980                           ; 1 bytes @ 0x1F
   981  0065                     	ds	1
   982  0066                     _set_time$191:
   983                           
   984                           ; 1 bytes @ 0x20
   985  0066                     	ds	1
   986  0067                     _set_time$192:
   987                           
   988                           ; 1 bytes @ 0x21
   989  0067                     	ds	1
   990  0068                     ??_main:
   991                           
   992                           ; 1 bytes @ 0x22
   993  0068                     	ds	2
   994  006A                     main@lastCLK:
   995                           
   996                           ; 1 bytes @ 0x24
   997  006A                     	ds	1
   998  006B                     main@currentCLK:
   999                           
  1000                           ; 1 bytes @ 0x25
  1001  006B                     	ds	1
  1002                           
  1003                           	psect	maintext
  1004  0276                     __pmaintext:	
  1005 ;;
  1006 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1007 ;;
  1008 ;; *************** function _main *****************
  1009 ;; Defined at:
  1010 ;;		line 488 in file "main.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;		None
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  currentCLK      1   37[BANK0 ] unsigned char 
  1015 ;;  lastCLK         1   36[BANK0 ] unsigned char 
  1016 ;; Return value:  Size  Location     Type
  1017 ;;                  1    wreg      void 
  1018 ;; Registers used:
  1019 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1020 ;; Tracked objects:
  1021 ;;		On entry : B00/0
  1022 ;;		On exit  : 0/0
  1023 ;;		Unchanged: 0/0
  1024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1025 ;;      Params:         0       0       0       0
  1026 ;;      Locals:         0       2       0       0
  1027 ;;      Temps:          0       2       0       0
  1028 ;;      Totals:         0       4       0       0
  1029 ;;Total ram usage:        4 bytes
  1030 ;; Hardware stack levels required when called:    6
  1031 ;; This function calls:
  1032 ;;		_Draw_main_display_p1
  1033 ;;		_Draw_main_display_p2
  1034 ;;		_Draw_settings_display
  1035 ;;		_LCD_Init
  1036 ;;		_LCD_display_clear
  1037 ;;		_LCD_display_ctrl
  1038 ;;		_set_date
  1039 ;;		_set_humi
  1040 ;;		_set_temp
  1041 ;;		_set_time
  1042 ;; This function is called by:
  1043 ;;		Startup code after reset
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047                           
  1048                           ;psect for function _main
  1049  0276                     _main:
  1050  0276                     l2003:	
  1051                           ;incstack = 0
  1052                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1053                           
  1054                           
  1055                           ;main.c: 490:     ANSEL = 0x00;
  1056  0276  1683               	bsf	3,5	;RP0=1, select bank1
  1057  0277  1303               	bcf	3,6	;RP1=0, select bank1
  1058  0278  0191               	clrf	17	;volatile
  1059  0279                     l2005:
  1060                           
  1061                           ;main.c: 491:     CMCON0 = 0x07;
  1062  0279  3007               	movlw	7
  1063  027A  1283               	bcf	3,5	;RP0=0, select bank0
  1064  027B  1303               	bcf	3,6	;RP1=0, select bank0
  1065  027C  0099               	movwf	25	;volatile
  1066  027D                     l2007:
  1067                           
  1068                           ;main.c: 493:     TRISA = 0x04;
  1069  027D  3004               	movlw	4
  1070  027E  1683               	bsf	3,5	;RP0=1, select bank1
  1071  027F  1303               	bcf	3,6	;RP1=0, select bank1
  1072  0280  0085               	movwf	5	;volatile
  1073                           
  1074                           ;main.c: 494:     PORTA = 0x00;
  1075  0281  1283               	bcf	3,5	;RP0=0, select bank0
  1076  0282  1303               	bcf	3,6	;RP1=0, select bank0
  1077  0283  0185               	clrf	5	;volatile
  1078  0284                     l2009:
  1079                           
  1080                           ;main.c: 496:     TRISC = 0x30;
  1081  0284  3030               	movlw	48
  1082  0285  1683               	bsf	3,5	;RP0=1, select bank1
  1083  0286  1303               	bcf	3,6	;RP1=0, select bank1
  1084  0287  0087               	movwf	7	;volatile
  1085  0288                     l2011:
  1086                           
  1087                           ;main.c: 497:     PORTC = 0x00;
  1088  0288  1283               	bcf	3,5	;RP0=0, select bank0
  1089  0289  1303               	bcf	3,6	;RP1=0, select bank0
  1090  028A  0187               	clrf	7	;volatile
  1091  028B                     l2013:
  1092                           
  1093                           ;main.c: 499:     T1CONbits.TMR1ON = 0;
  1094  028B  1010               	bcf	16,0	;volatile
  1095  028C                     l2015:
  1096                           
  1097                           ;main.c: 500:     TMR1L = 0x00;
  1098  028C  018E               	clrf	14	;volatile
  1099  028D                     l2017:
  1100                           
  1101                           ;main.c: 501:     TMR1H = 0x00;
  1102  028D  018F               	clrf	15	;volatile
  1103                           
  1104                           ;main.c: 502:     T1CON = 0x30;
  1105  028E  3030               	movlw	48
  1106  028F  0090               	movwf	16	;volatile
  1107  0290                     l2019:
  1108                           
  1109                           ;main.c: 503:     TMR1IF = 0;
  1110  0290  100C               	bcf	12,0	;volatile
  1111  0291                     l2021:
  1112                           
  1113                           ;main.c: 505:     LCD_Init();
  1114  0291  118A  24D5  118A   	fcall	_LCD_Init
  1115  0294                     l2023:
  1116                           
  1117                           ;main.c: 507:     LCD_display_ctrl(1,0,0);
  1118  0294  01F4               	clrf	LCD_display_ctrl@cursor
  1119  0295  01F5               	clrf	LCD_display_ctrl@blink
  1120  0296  3001               	movlw	1
  1121  0297  118A  26E7  118A   	fcall	_LCD_display_ctrl
  1122  029A                     l247:
  1123  029A  1283               	bcf	3,5	;RP0=0, select bank0
  1124  029B  1303               	bcf	3,6	;RP1=0, select bank0
  1125  029C  1905               	btfsc	5,2	;volatile
  1126  029D  2A9F               	goto	u1641
  1127  029E  2AA0               	goto	u1640
  1128  029F                     u1641:
  1129  029F  2A9A               	goto	l247
  1130  02A0                     u1640:
  1131  02A0                     l249:
  1132                           
  1133                           ;main.c: 514:         TMR1ON = 0;
  1134  02A0  1010               	bcf	16,0	;volatile
  1135  02A1                     l2025:
  1136                           
  1137                           ;main.c: 515:         TMR1L = 0x00;
  1138  02A1  018E               	clrf	14	;volatile
  1139                           
  1140                           ;main.c: 516:         TMR1H = 0x00;
  1141  02A2  018F               	clrf	15	;volatile
  1142  02A3                     l2027:
  1143                           
  1144                           ;main.c: 517:         TMR1IF = 0;
  1145  02A3  100C               	bcf	12,0	;volatile
  1146  02A4                     l2029:
  1147                           
  1148                           ;main.c: 518:         Draw_main_display_p1();
  1149  02A4  118A  2638  118A   	fcall	_Draw_main_display_p1
  1150  02A7                     l2031:
  1151                           
  1152                           ;main.c: 519:         if(RA2)
  1153  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  1154  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  1155  02A9  1D05               	btfss	5,2	;volatile
  1156  02AA  2AAC               	goto	u1651
  1157  02AB  2AAD               	goto	u1650
  1158  02AC                     u1651:
  1159  02AC  2A9A               	goto	l247
  1160  02AD                     u1650:
  1161  02AD                     l2033:
  1162                           
  1163                           ;main.c: 520:         {;main.c: 521:             T1CONbits.TMR1ON = 1;
  1164  02AD  1410               	bsf	16,0	;volatile
  1165  02AE                     l251:	
  1166                           ;main.c: 522:             while(RA2);
  1167                           
  1168  02AE  1905               	btfsc	5,2	;volatile
  1169  02AF  2AB1               	goto	u1661
  1170  02B0  2AB2               	goto	u1660
  1171  02B1                     u1661:
  1172  02B1  2AAE               	goto	l251
  1173  02B2                     u1660:
  1174  02B2                     l253:
  1175                           
  1176                           ;main.c: 523:             if(TMR1IF)
  1177  02B2  1C0C               	btfss	12,0	;volatile
  1178  02B3  2AB5               	goto	u1671
  1179  02B4  2AB6               	goto	u1670
  1180  02B5                     u1671:
  1181  02B5  2B3F               	goto	l2093
  1182  02B6                     u1670:
  1183  02B6                     l2035:
  1184                           
  1185                           ;main.c: 524:             {;main.c: 525:                 TMR1ON = 0;
  1186  02B6  1010               	bcf	16,0	;volatile
  1187  02B7                     l2037:
  1188                           
  1189                           ;main.c: 526:                 TMR1L = 0x00;
  1190  02B7  018E               	clrf	14	;volatile
  1191                           
  1192                           ;main.c: 527:                 TMR1H = 0x00;
  1193  02B8  018F               	clrf	15	;volatile
  1194  02B9                     l2039:
  1195                           
  1196                           ;main.c: 528:                 TMR1IF = 0;
  1197  02B9  100C               	bcf	12,0	;volatile
  1198                           
  1199                           ;main.c: 529:                 while(!TMR1IF)
  1200  02BA  2B37               	goto	l2089
  1201  02BB                     l2041:
  1202                           
  1203                           ;main.c: 530:                 {;main.c: 531:                     currentCLK = RC4;
  1204  02BB  3000               	movlw	0
  1205  02BC  1A07               	btfsc	7,4	;volatile
  1206  02BD  3001               	movlw	1
  1207  02BE  00EB               	movwf	main@currentCLK
  1208  02BF                     l2043:
  1209                           
  1210                           ;main.c: 532:                     if(currentCLK != lastCLK && currentCLK == 1)
  1211  02BF  086B               	movf	main@currentCLK,w
  1212  02C0  066A               	xorwf	main@lastCLK,w
  1213  02C1  1903               	skipnz
  1214  02C2  2AC4               	goto	u1681
  1215  02C3  2AC5               	goto	u1680
  1216  02C4                     u1681:
  1217  02C4  2AF5               	goto	l257
  1218  02C5                     u1680:
  1219  02C5                     l2045:
  1220  02C5  036B               	decf	main@currentCLK,w
  1221  02C6  1D03               	btfss	3,2
  1222  02C7  2AC9               	goto	u1691
  1223  02C8  2ACA               	goto	u1690
  1224  02C9                     u1691:
  1225  02C9  2AF5               	goto	l257
  1226  02CA                     u1690:
  1227  02CA                     l2047:
  1228                           
  1229                           ;main.c: 533:                     {;main.c: 534:                         if (RC5 != curr
      +                          entCLK)
  1230  02CA  3000               	movlw	0
  1231  02CB  1A87               	btfsc	7,5	;volatile
  1232  02CC  3001               	movlw	1
  1233  02CD  066B               	xorwf	main@currentCLK,w
  1234  02CE  1903               	skipnz
  1235  02CF  2AD1               	goto	u1701
  1236  02D0  2AD2               	goto	u1700
  1237  02D1                     u1701:
  1238  02D1  2AE6               	goto	l2057
  1239  02D2                     u1700:
  1240  02D2                     l2049:
  1241                           
  1242                           ;main.c: 535:                         {;main.c: 536:                             if(coun
      +                          ter > 0)
  1243  02D2  086C               	movf	_counter,w	;volatile
  1244  02D3  1903               	btfsc	3,2
  1245  02D4  2AD6               	goto	u1711
  1246  02D5  2AD7               	goto	u1710
  1247  02D6                     u1711:
  1248  02D6  2AE4               	goto	l2055
  1249  02D7                     u1710:
  1250  02D7                     l2051:
  1251                           
  1252                           ;main.c: 537:                             {;main.c: 538:                                
      +                           counter--;
  1253  02D7  3001               	movlw	1
  1254  02D8  02EC               	subwf	_counter,f	;volatile
  1255  02D9                     l2053:
  1256                           
  1257                           ;main.c: 539:                                 Draw_settings_display(counter);
  1258  02D9  086C               	movf	_counter,w	;volatile
  1259  02DA  00E8               	movwf	??_main
  1260  02DB  01E9               	clrf	??_main+1
  1261  02DC  0868               	movf	??_main,w
  1262  02DD  00C6               	movwf	Draw_settings_display@ctr
  1263  02DE  0869               	movf	??_main+1,w
  1264  02DF  00C7               	movwf	Draw_settings_display@ctr+1
  1265  02E0  118A  23DD  118A   	fcall	_Draw_settings_display
  1266                           
  1267                           ;main.c: 540:                             }
  1268  02E3  2AF5               	goto	l257
  1269  02E4                     l2055:
  1270                           
  1271                           ;main.c: 542:                             {;main.c: 543:                                
      +                           counter = 0;
  1272  02E4  01EC               	clrf	_counter	;volatile
  1273  02E5  2AF5               	goto	l257
  1274  02E6                     l2057:
  1275                           
  1276                           ;main.c: 547:                         {;main.c: 548:                             if(coun
      +                          ter < 3)
  1277  02E6  3003               	movlw	3
  1278  02E7  026C               	subwf	_counter,w	;volatile
  1279  02E8  1803               	skipnc
  1280  02E9  2AEB               	goto	u1721
  1281  02EA  2AEC               	goto	u1720
  1282  02EB                     u1721:
  1283  02EB  2AF1               	goto	l2063
  1284  02EC                     u1720:
  1285  02EC                     l2059:
  1286                           
  1287                           ;main.c: 549:                             {;main.c: 550:                                
      +                           counter++;
  1288  02EC  3001               	movlw	1
  1289  02ED  00E8               	movwf	??_main
  1290  02EE  0868               	movf	??_main,w
  1291  02EF  07EC               	addwf	_counter,f	;volatile
  1292  02F0  2AD9               	goto	l2053
  1293  02F1                     l2063:
  1294                           
  1295                           ;main.c: 554:                             {;main.c: 555:                                
      +                           counter = 3;
  1296  02F1  3003               	movlw	3
  1297  02F2  00E8               	movwf	??_main
  1298  02F3  0868               	movf	??_main,w
  1299  02F4  00EC               	movwf	_counter	;volatile
  1300  02F5                     l257:	
  1301                           ;main.c: 558:                     }
  1302                           
  1303                           
  1304                           ;main.c: 559:                     lastCLK = currentCLK;
  1305  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  1306  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  1307  02F7  086B               	movf	main@currentCLK,w
  1308  02F8  00E8               	movwf	??_main
  1309  02F9  0868               	movf	??_main,w
  1310  02FA  00EA               	movwf	main@lastCLK
  1311  02FB                     l2065:
  1312                           
  1313                           ;main.c: 560:                     if(RA2)
  1314  02FB  1D05               	btfss	5,2	;volatile
  1315  02FC  2AFE               	goto	u1731
  1316  02FD  2AFF               	goto	u1730
  1317  02FE                     u1731:
  1318  02FE  2B37               	goto	l2089
  1319  02FF                     u1730:
  1320  02FF                     l2067:
  1321                           
  1322                           ;main.c: 561:                     {;main.c: 562:                         TMR1ON = 1;
  1323  02FF  1410               	bsf	16,0	;volatile
  1324  0300                     l265:	
  1325                           ;main.c: 563:                         while(RA2 && TMR1IF == 0);
  1326                           
  1327  0300  1D05               	btfss	5,2	;volatile
  1328  0301  2B03               	goto	u1741
  1329  0302  2B04               	goto	u1740
  1330  0303                     u1741:
  1331  0303  2B08               	goto	l269
  1332  0304                     u1740:
  1333  0304                     l2069:
  1334  0304  1C0C               	btfss	12,0	;volatile
  1335  0305  2B07               	goto	u1751
  1336  0306  2B08               	goto	u1750
  1337  0307                     u1751:
  1338  0307  2B00               	goto	l265
  1339  0308                     u1750:
  1340  0308                     l269:
  1341                           
  1342                           ;main.c: 564:                         if(TMR1IF == 0)
  1343  0308  180C               	btfsc	12,0	;volatile
  1344  0309  2B0B               	goto	u1761
  1345  030A  2B0C               	goto	u1760
  1346  030B                     u1761:
  1347  030B  2B32               	goto	l278
  1348  030C                     u1760:
  1349  030C                     l2071:
  1350                           
  1351                           ;main.c: 565:                         {;main.c: 566:                             if(coun
      +                          ter == 0)
  1352  030C  086C               	movf	_counter,w	;volatile
  1353  030D  1D03               	btfss	3,2
  1354  030E  2B10               	goto	u1771
  1355  030F  2B11               	goto	u1770
  1356  0310                     u1771:
  1357  0310  2B15               	goto	l2075
  1358  0311                     u1770:
  1359  0311                     l2073:
  1360                           
  1361                           ;main.c: 567:                             {;main.c: 568:                                
      +                           set_time();
  1362  0311  118A  202B  118A   	fcall	_set_time
  1363                           
  1364                           ;main.c: 569:                             }
  1365  0314  2B32               	goto	l278
  1366  0315                     l2075:
  1367  0315  036C               	decf	_counter,w	;volatile
  1368  0316  1D03               	btfss	3,2
  1369  0317  2B19               	goto	u1781
  1370  0318  2B1A               	goto	u1780
  1371  0319                     u1781:
  1372  0319  2B1E               	goto	l2079
  1373  031A                     u1780:
  1374  031A                     l2077:
  1375                           
  1376                           ;main.c: 571:                             {;main.c: 572:                                
      +                           set_date();
  1377  031A  118A  2767  118A   	fcall	_set_date
  1378                           
  1379                           ;main.c: 573:                             }
  1380  031D  2B32               	goto	l278
  1381  031E                     l2079:
  1382  031E  3002               	movlw	2
  1383  031F  066C               	xorwf	_counter,w	;volatile
  1384  0320  1D03               	btfss	3,2
  1385  0321  2B23               	goto	u1791
  1386  0322  2B24               	goto	u1790
  1387  0323                     u1791:
  1388  0323  2B28               	goto	l2083
  1389  0324                     u1790:
  1390  0324                     l2081:
  1391                           
  1392                           ;main.c: 575:                             {;main.c: 576:                                
      +                           set_temp();
  1393  0324  118A  234B  118A   	fcall	_set_temp
  1394                           
  1395                           ;main.c: 577:                             }
  1396  0327  2B32               	goto	l278
  1397  0328                     l2083:
  1398  0328  3003               	movlw	3
  1399  0329  066C               	xorwf	_counter,w	;volatile
  1400  032A  1D03               	btfss	3,2
  1401  032B  2B2D               	goto	u1801
  1402  032C  2B2E               	goto	u1800
  1403  032D                     u1801:
  1404  032D  2B32               	goto	l274
  1405  032E                     u1800:
  1406  032E                     l2085:
  1407                           
  1408                           ;main.c: 579:                             {;main.c: 580:                                
      +                           set_humi();
  1409  032E  118A  2462  118A   	fcall	_set_humi
  1410  0331  2B32               	goto	l278
  1411  0332                     l274:
  1412  0332                     l278:	
  1413                           ;main.c: 584:                         {;main.c: 586:                         }
  1414                           
  1415                           
  1416                           ;main.c: 587:                         TMR1ON = 0;
  1417  0332  1283               	bcf	3,5	;RP0=0, select bank0
  1418  0333  1303               	bcf	3,6	;RP1=0, select bank0
  1419  0334  1010               	bcf	16,0	;volatile
  1420  0335                     l2087:
  1421                           
  1422                           ;main.c: 588:                         TMR1L = 0x00;
  1423  0335  018E               	clrf	14	;volatile
  1424                           
  1425                           ;main.c: 589:                         TMR1H = 0x00;
  1426  0336  018F               	clrf	15	;volatile
  1427  0337                     l2089:
  1428                           
  1429                           ;main.c: 529:                 while(!TMR1IF)
  1430  0337  1C0C               	btfss	12,0	;volatile
  1431  0338  2B3A               	goto	u1811
  1432  0339  2B3B               	goto	u1810
  1433  033A                     u1811:
  1434  033A  2ABB               	goto	l2041
  1435  033B                     u1810:
  1436  033B                     l2091:
  1437                           
  1438                           ;main.c: 592:                 LCD_display_clear();
  1439  033B  118A  277D  118A   	fcall	_LCD_display_clear
  1440                           
  1441                           ;main.c: 593:             }
  1442  033E  2A9A               	goto	l247
  1443  033F                     l2093:
  1444                           
  1445                           ;main.c: 595:             {;main.c: 596:                 Draw_main_display_p2();
  1446  033F  118A  266E  118A   	fcall	_Draw_main_display_p2
  1447  0342                     l281:	
  1448                           ;main.c: 597:                 while(!RA2);
  1449                           
  1450  0342  1283               	bcf	3,5	;RP0=0, select bank0
  1451  0343  1303               	bcf	3,6	;RP1=0, select bank0
  1452  0344  1D05               	btfss	5,2	;volatile
  1453  0345  2B47               	goto	u1821
  1454  0346  2B48               	goto	u1820
  1455  0347                     u1821:
  1456  0347  2B42               	goto	l281
  1457  0348                     u1820:
  1458  0348  2B3B               	goto	l2091
  1459  0349  118A  280B         	ljmp	start
  1460  034B                     __end_of_main:
  1461                           
  1462                           	psect	text1
  1463  002B                     __ptext1:	
  1464 ;; *************** function _set_time *****************
  1465 ;; Defined at:
  1466 ;;		line 391 in file "main.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;		None
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;		None
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      void 
  1473 ;; Registers used:
  1474 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1480 ;;      Params:         0       0       0       0
  1481 ;;      Locals:         0       4       0       0
  1482 ;;      Temps:          0       5       0       0
  1483 ;;      Totals:         0       9       0       0
  1484 ;;Total ram usage:        9 bytes
  1485 ;; Hardware stack levels used:    1
  1486 ;; Hardware stack levels required when called:    5
  1487 ;; This function calls:
  1488 ;;		_LCD_display_clear
  1489 ;;		_LCD_send_string
  1490 ;;		_LCD_set_cursor
  1491 ;;		_sprintf
  1492 ;; This function is called by:
  1493 ;;		_main
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           
  1498                           ;psect for function _set_time
  1499  002B                     _set_time:
  1500  002B                     l1901:	
  1501                           ;incstack = 0
  1502                           ; Regs used in _set_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1503                           
  1504                           
  1505                           ;main.c: 393:     LCD_display_clear();
  1506  002B  118A  277D  118A   	fcall	_LCD_display_clear
  1507                           
  1508                           ;main.c: 395:     LCD_set_cursor(0,0);
  1509  002E  01F4               	clrf	LCD_set_cursor@column
  1510  002F  3000               	movlw	0
  1511  0030  118A  272D  118A   	fcall	_LCD_set_cursor
  1512  0033                     l1903:
  1513                           
  1514                           ;main.c: 396:     LCD_send_string(s_time);
  1515  0033  3039               	movlw	(low (_s_time| 0))& (0+255)
  1516  0034  118A  274A  118A   	fcall	_LCD_send_string
  1517  0037                     l1905:
  1518                           
  1519                           ;main.c: 398:     LCD_set_cursor(0,11);
  1520  0037  300B               	movlw	11
  1521  0038  1283               	bcf	3,5	;RP0=0, select bank0
  1522  0039  1303               	bcf	3,6	;RP1=0, select bank0
  1523  003A  00DF               	movwf	??_set_time
  1524  003B  085F               	movf	??_set_time,w
  1525  003C  00F4               	movwf	LCD_set_cursor@column
  1526  003D  3000               	movlw	0
  1527  003E  118A  272D  118A   	fcall	_LCD_set_cursor
  1528                           
  1529                           ;main.c: 399:     LCD_send_string(time);
  1530  0041  3024               	movlw	(low (_time| 0))& (0+255)
  1531  0042  118A  274A  118A   	fcall	_LCD_send_string
  1532                           
  1533                           ;main.c: 400:     while(!RA2)
  1534  0045  28C8               	goto	l1941
  1535  0046                     l1907:
  1536                           
  1537                           ;main.c: 401:     {;main.c: 402:         s_currentCLK = RC4;
  1538  0046  3000               	movlw	0
  1539  0047  1A07               	btfsc	7,4	;volatile
  1540  0048  3001               	movlw	1
  1541  0049  00EE               	movwf	_s_currentCLK
  1542  004A                     l1909:
  1543                           
  1544                           ;main.c: 403:         if(s_currentCLK != s_lastCLK && s_currentCLK == 1)
  1545  004A  086E               	movf	_s_currentCLK,w
  1546  004B  066D               	xorwf	_s_lastCLK,w
  1547  004C  1903               	skipnz
  1548  004D  284F               	goto	u1441
  1549  004E  2850               	goto	u1440
  1550  004F                     u1441:
  1551  004F  2876               	goto	l198
  1552  0050                     u1440:
  1553  0050                     l1911:
  1554  0050  036E               	decf	_s_currentCLK,w
  1555  0051  1D03               	btfss	3,2
  1556  0052  2854               	goto	u1451
  1557  0053  2855               	goto	u1450
  1558  0054                     u1451:
  1559  0054  2876               	goto	l198
  1560  0055                     u1450:
  1561  0055                     l1913:
  1562                           
  1563                           ;main.c: 404:         {;main.c: 405:             if(RC5 != s_currentCLK)
  1564  0055  3000               	movlw	0
  1565  0056  1A87               	btfsc	7,5	;volatile
  1566  0057  3001               	movlw	1
  1567  0058  066E               	xorwf	_s_currentCLK,w
  1568  0059  1903               	skipnz
  1569  005A  285C               	goto	u1461
  1570  005B  285D               	goto	u1460
  1571  005C                     u1461:
  1572  005C  2867               	goto	l1921
  1573  005D                     u1460:
  1574  005D                     l1915:
  1575                           
  1576                           ;main.c: 406:             {;main.c: 407:                 if(time_hours > 0)
  1577  005D  0820               	movf	_time_hours,w
  1578  005E  1903               	btfsc	3,2
  1579  005F  2861               	goto	u1471
  1580  0060  2862               	goto	u1470
  1581  0061                     u1471:
  1582  0061  2865               	goto	l1919
  1583  0062                     u1470:
  1584  0062                     l1917:
  1585                           
  1586                           ;main.c: 408:                 {;main.c: 409:                     time_hours -= 1;
  1587  0062  3001               	movlw	1
  1588  0063  02A0               	subwf	_time_hours,f
  1589                           
  1590                           ;main.c: 410:                 }
  1591  0064  2876               	goto	l198
  1592  0065                     l1919:
  1593                           
  1594                           ;main.c: 412:                 {;main.c: 413:                     time_hours = 0;
  1595  0065  01A0               	clrf	_time_hours
  1596  0066  2876               	goto	l198
  1597  0067                     l1921:
  1598                           
  1599                           ;main.c: 417:             {;main.c: 418:                 if(time_hours < 24)
  1600  0067  3018               	movlw	24
  1601  0068  0220               	subwf	_time_hours,w
  1602  0069  1803               	skipnc
  1603  006A  286C               	goto	u1481
  1604  006B  286D               	goto	u1480
  1605  006C                     u1481:
  1606  006C  2872               	goto	l1925
  1607  006D                     u1480:
  1608  006D                     l1923:
  1609                           
  1610                           ;main.c: 419:                 {;main.c: 420:                     time_hours += 1;
  1611  006D  3001               	movlw	1
  1612  006E  00DF               	movwf	??_set_time
  1613  006F  085F               	movf	??_set_time,w
  1614  0070  07A0               	addwf	_time_hours,f
  1615                           
  1616                           ;main.c: 421:                 }
  1617  0071  2876               	goto	l198
  1618  0072                     l1925:
  1619                           
  1620                           ;main.c: 423:                 {;main.c: 424:                     time_hours = 24;
  1621  0072  3018               	movlw	24
  1622  0073  00DF               	movwf	??_set_time
  1623  0074  085F               	movf	??_set_time,w
  1624  0075  00A0               	movwf	_time_hours
  1625  0076                     l198:	
  1626                           ;main.c: 427:         }
  1627                           
  1628                           
  1629                           ;main.c: 428:         s_lastCLK = s_currentCLK;
  1630  0076  086E               	movf	_s_currentCLK,w
  1631  0077  00DF               	movwf	??_set_time
  1632  0078  085F               	movf	??_set_time,w
  1633  0079  00ED               	movwf	_s_lastCLK
  1634                           
  1635                           ;main.c: 429:         sprintf(time,"%s%d:%s%d",(time_hours<10)?"0":"",time_hours,(time_m
      +                          inutes<10)?"0":"",time_minutes);
  1636  007A  300A               	movlw	10
  1637  007B  026F               	subwf	_time_minutes,w
  1638  007C  1C03               	skipc
  1639  007D  287F               	goto	u1491
  1640  007E  2880               	goto	u1490
  1641  007F                     u1491:
  1642  007F  2885               	goto	l1929
  1643  0080                     u1490:
  1644  0080                     l1927:
  1645  0080  3026               	movlw	(low (((STR_2+4)-__stringbase)| (0+32768)))& (0+255)
  1646  0081  00DF               	movwf	??_set_time
  1647  0082  085F               	movf	??_set_time,w
  1648  0083  00E4               	movwf	_set_time$182
  1649  0084  2889               	goto	l208
  1650  0085                     l1929:
  1651  0085  3027               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1652  0086  00DF               	movwf	??_set_time
  1653  0087  085F               	movf	??_set_time,w
  1654  0088  00E4               	movwf	_set_time$182
  1655  0089                     l208:
  1656  0089  300A               	movlw	10
  1657  008A  0220               	subwf	_time_hours,w
  1658  008B  1C03               	skipc
  1659  008C  288E               	goto	u1501
  1660  008D  288F               	goto	u1500
  1661  008E                     u1501:
  1662  008E  2894               	goto	l1933
  1663  008F                     u1500:
  1664  008F                     l1931:
  1665  008F  3026               	movlw	(low (((STR_2+4)-__stringbase)| (0+32768)))& (0+255)
  1666  0090  00DF               	movwf	??_set_time
  1667  0091  085F               	movf	??_set_time,w
  1668  0092  00E5               	movwf	_set_time$183
  1669  0093  2898               	goto	l1935
  1670  0094                     l1933:
  1671  0094  3027               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1672  0095  00DF               	movwf	??_set_time
  1673  0096  085F               	movf	??_set_time,w
  1674  0097  00E5               	movwf	_set_time$183
  1675  0098                     l1935:
  1676  0098  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1677  0099  00DF               	movwf	??_set_time
  1678  009A  085F               	movf	??_set_time,w
  1679  009B  00CA               	movwf	sprintf@f
  1680  009C  0865               	movf	_set_time$183,w
  1681  009D  00CB               	movwf	low ((?_sprintf| 0+1))
  1682  009E  3000               	movlw	0
  1683  009F  1D03               	btfss	3,2
  1684  00A0  3080               	movlw	128
  1685  00A1  00CC               	movwf	(low ((?_sprintf| 0+1))+1)
  1686  00A2  0820               	movf	_time_hours,w
  1687  00A3  00E0               	movwf	??_set_time+1
  1688  00A4  01E1               	clrf	??_set_time+2
  1689  00A5  0860               	movf	??_set_time+1,w
  1690  00A6  00CD               	movwf	?_sprintf+3
  1691  00A7  0861               	movf	??_set_time+2,w
  1692  00A8  00CE               	movwf	?_sprintf+4
  1693  00A9  0864               	movf	_set_time$182,w
  1694  00AA  00CF               	movwf	low ((?_sprintf| 0+5))
  1695  00AB  3000               	movlw	0
  1696  00AC  1D03               	btfss	3,2
  1697  00AD  3080               	movlw	128
  1698  00AE  00D0               	movwf	(low ((?_sprintf| 0+5))+1)
  1699  00AF  086F               	movf	_time_minutes,w
  1700  00B0  00E2               	movwf	??_set_time+3
  1701  00B1  01E3               	clrf	??_set_time+4
  1702  00B2  0862               	movf	??_set_time+3,w
  1703  00B3  00D1               	movwf	?_sprintf+7
  1704  00B4  0863               	movf	??_set_time+4,w
  1705  00B5  00D2               	movwf	?_sprintf+8
  1706  00B6  3024               	movlw	(low (_time| 0))& (0+255)
  1707  00B7  118A  215C  118A   	fcall	_sprintf
  1708  00BA                     l1937:
  1709                           
  1710                           ;main.c: 430:         LCD_set_cursor(0,11);
  1711  00BA  300B               	movlw	11
  1712  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1713  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1714  00BD  00DF               	movwf	??_set_time
  1715  00BE  085F               	movf	??_set_time,w
  1716  00BF  00F4               	movwf	LCD_set_cursor@column
  1717  00C0  3000               	movlw	0
  1718  00C1  118A  272D  118A   	fcall	_LCD_set_cursor
  1719  00C4                     l1939:
  1720                           
  1721                           ;main.c: 431:         LCD_send_string(time);
  1722  00C4  3024               	movlw	(low (_time| 0))& (0+255)
  1723  00C5  118A  274A  118A   	fcall	_LCD_send_string
  1724  00C8                     l1941:
  1725                           
  1726                           ;main.c: 400:     while(!RA2)
  1727  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1728  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  1729  00CA  1D05               	btfss	5,2	;volatile
  1730  00CB  28CD               	goto	u1511
  1731  00CC  28CE               	goto	u1510
  1732  00CD                     u1511:
  1733  00CD  2846               	goto	l1907
  1734  00CE                     u1510:
  1735  00CE                     l214:
  1736  00CE  1905               	btfsc	5,2	;volatile
  1737  00CF  28D1               	goto	u1521
  1738  00D0  28D2               	goto	u1520
  1739  00D1                     u1521:
  1740  00D1  28CE               	goto	l214
  1741  00D2                     u1520:
  1742  00D2  2955               	goto	l1977
  1743  00D3                     l1943:
  1744                           
  1745                           ;main.c: 436:     {;main.c: 437:         s_currentCLK = RC4;
  1746  00D3  3000               	movlw	0
  1747  00D4  1A07               	btfsc	7,4	;volatile
  1748  00D5  3001               	movlw	1
  1749  00D6  00EE               	movwf	_s_currentCLK
  1750  00D7                     l1945:
  1751                           
  1752                           ;main.c: 438:         if(s_currentCLK != s_lastCLK && s_currentCLK == 1)
  1753  00D7  086E               	movf	_s_currentCLK,w
  1754  00D8  066D               	xorwf	_s_lastCLK,w
  1755  00D9  1903               	skipnz
  1756  00DA  28DC               	goto	u1531
  1757  00DB  28DD               	goto	u1530
  1758  00DC                     u1531:
  1759  00DC  2903               	goto	l219
  1760  00DD                     u1530:
  1761  00DD                     l1947:
  1762  00DD  036E               	decf	_s_currentCLK,w
  1763  00DE  1D03               	btfss	3,2
  1764  00DF  28E1               	goto	u1541
  1765  00E0  28E2               	goto	u1540
  1766  00E1                     u1541:
  1767  00E1  2903               	goto	l219
  1768  00E2                     u1540:
  1769  00E2                     l1949:
  1770                           
  1771                           ;main.c: 439:         {;main.c: 440:             if(RC5 != s_currentCLK)
  1772  00E2  3000               	movlw	0
  1773  00E3  1A87               	btfsc	7,5	;volatile
  1774  00E4  3001               	movlw	1
  1775  00E5  066E               	xorwf	_s_currentCLK,w
  1776  00E6  1903               	skipnz
  1777  00E7  28E9               	goto	u1551
  1778  00E8  28EA               	goto	u1550
  1779  00E9                     u1551:
  1780  00E9  28F4               	goto	l1957
  1781  00EA                     u1550:
  1782  00EA                     l1951:
  1783                           
  1784                           ;main.c: 441:             {;main.c: 442:                 if(time_minutes > 0)
  1785  00EA  086F               	movf	_time_minutes,w
  1786  00EB  1903               	btfsc	3,2
  1787  00EC  28EE               	goto	u1561
  1788  00ED  28EF               	goto	u1560
  1789  00EE                     u1561:
  1790  00EE  28F2               	goto	l1955
  1791  00EF                     u1560:
  1792  00EF                     l1953:
  1793                           
  1794                           ;main.c: 443:                 {;main.c: 444:                     time_minutes -= 1;
  1795  00EF  3001               	movlw	1
  1796  00F0  02EF               	subwf	_time_minutes,f
  1797                           
  1798                           ;main.c: 445:                 }
  1799  00F1  2903               	goto	l219
  1800  00F2                     l1955:
  1801                           
  1802                           ;main.c: 447:                 {;main.c: 448:                     time_minutes = 0;
  1803  00F2  01EF               	clrf	_time_minutes
  1804  00F3  2903               	goto	l219
  1805  00F4                     l1957:
  1806                           
  1807                           ;main.c: 452:             {;main.c: 453:                 if(time_minutes < 59)
  1808  00F4  303B               	movlw	59
  1809  00F5  026F               	subwf	_time_minutes,w
  1810  00F6  1803               	skipnc
  1811  00F7  28F9               	goto	u1571
  1812  00F8  28FA               	goto	u1570
  1813  00F9                     u1571:
  1814  00F9  28FF               	goto	l1961
  1815  00FA                     u1570:
  1816  00FA                     l1959:
  1817                           
  1818                           ;main.c: 454:                 {;main.c: 455:                     time_minutes += 1;
  1819  00FA  3001               	movlw	1
  1820  00FB  00DF               	movwf	??_set_time
  1821  00FC  085F               	movf	??_set_time,w
  1822  00FD  07EF               	addwf	_time_minutes,f
  1823                           
  1824                           ;main.c: 456:                 }
  1825  00FE  2903               	goto	l219
  1826  00FF                     l1961:
  1827                           
  1828                           ;main.c: 458:                 {;main.c: 459:                     time_minutes = 59;
  1829  00FF  303B               	movlw	59
  1830  0100  00DF               	movwf	??_set_time
  1831  0101  085F               	movf	??_set_time,w
  1832  0102  00EF               	movwf	_time_minutes
  1833  0103                     l219:	
  1834                           ;main.c: 462:         }
  1835                           
  1836                           
  1837                           ;main.c: 463:         s_lastCLK = s_currentCLK;
  1838  0103  086E               	movf	_s_currentCLK,w
  1839  0104  00DF               	movwf	??_set_time
  1840  0105  085F               	movf	??_set_time,w
  1841  0106  00ED               	movwf	_s_lastCLK
  1842                           
  1843                           ;main.c: 464:         sprintf(time,"%s%d:%s%d",(time_hours<10)?"0":"",time_hours,(time_m
      +                          inutes<10)?"0":"",time_minutes);
  1844  0107  300A               	movlw	10
  1845  0108  026F               	subwf	_time_minutes,w
  1846  0109  1C03               	skipc
  1847  010A  290C               	goto	u1581
  1848  010B  290D               	goto	u1580
  1849  010C                     u1581:
  1850  010C  2912               	goto	l1965
  1851  010D                     u1580:
  1852  010D                     l1963:
  1853  010D  3026               	movlw	(low (((STR_2+4)-__stringbase)| (0+32768)))& (0+255)
  1854  010E  00DF               	movwf	??_set_time
  1855  010F  085F               	movf	??_set_time,w
  1856  0110  00E6               	movwf	_set_time$191
  1857  0111  2916               	goto	l229
  1858  0112                     l1965:
  1859  0112  3027               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1860  0113  00DF               	movwf	??_set_time
  1861  0114  085F               	movf	??_set_time,w
  1862  0115  00E6               	movwf	_set_time$191
  1863  0116                     l229:
  1864  0116  300A               	movlw	10
  1865  0117  0220               	subwf	_time_hours,w
  1866  0118  1C03               	skipc
  1867  0119  291B               	goto	u1591
  1868  011A  291C               	goto	u1590
  1869  011B                     u1591:
  1870  011B  2921               	goto	l1969
  1871  011C                     u1590:
  1872  011C                     l1967:
  1873  011C  3026               	movlw	(low (((STR_2+4)-__stringbase)| (0+32768)))& (0+255)
  1874  011D  00DF               	movwf	??_set_time
  1875  011E  085F               	movf	??_set_time,w
  1876  011F  00E7               	movwf	_set_time$192
  1877  0120  2925               	goto	l1971
  1878  0121                     l1969:
  1879  0121  3027               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1880  0122  00DF               	movwf	??_set_time
  1881  0123  085F               	movf	??_set_time,w
  1882  0124  00E7               	movwf	_set_time$192
  1883  0125                     l1971:
  1884  0125  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1885  0126  00DF               	movwf	??_set_time
  1886  0127  085F               	movf	??_set_time,w
  1887  0128  00CA               	movwf	sprintf@f
  1888  0129  0867               	movf	_set_time$192,w
  1889  012A  00CB               	movwf	low ((?_sprintf| 0+1))
  1890  012B  3000               	movlw	0
  1891  012C  1D03               	btfss	3,2
  1892  012D  3080               	movlw	128
  1893  012E  00CC               	movwf	(low ((?_sprintf| 0+1))+1)
  1894  012F  0820               	movf	_time_hours,w
  1895  0130  00E0               	movwf	??_set_time+1
  1896  0131  01E1               	clrf	??_set_time+2
  1897  0132  0860               	movf	??_set_time+1,w
  1898  0133  00CD               	movwf	?_sprintf+3
  1899  0134  0861               	movf	??_set_time+2,w
  1900  0135  00CE               	movwf	?_sprintf+4
  1901  0136  0866               	movf	_set_time$191,w
  1902  0137  00CF               	movwf	low ((?_sprintf| 0+5))
  1903  0138  3000               	movlw	0
  1904  0139  1D03               	btfss	3,2
  1905  013A  3080               	movlw	128
  1906  013B  00D0               	movwf	(low ((?_sprintf| 0+5))+1)
  1907  013C  086F               	movf	_time_minutes,w
  1908  013D  00E2               	movwf	??_set_time+3
  1909  013E  01E3               	clrf	??_set_time+4
  1910  013F  0862               	movf	??_set_time+3,w
  1911  0140  00D1               	movwf	?_sprintf+7
  1912  0141  0863               	movf	??_set_time+4,w
  1913  0142  00D2               	movwf	?_sprintf+8
  1914  0143  3024               	movlw	(low (_time| 0))& (0+255)
  1915  0144  118A  215C  118A   	fcall	_sprintf
  1916  0147                     l1973:
  1917                           
  1918                           ;main.c: 465:         LCD_set_cursor(0,11 );
  1919  0147  300B               	movlw	11
  1920  0148  1283               	bcf	3,5	;RP0=0, select bank0
  1921  0149  1303               	bcf	3,6	;RP1=0, select bank0
  1922  014A  00DF               	movwf	??_set_time
  1923  014B  085F               	movf	??_set_time,w
  1924  014C  00F4               	movwf	LCD_set_cursor@column
  1925  014D  3000               	movlw	0
  1926  014E  118A  272D  118A   	fcall	_LCD_set_cursor
  1927  0151                     l1975:
  1928                           
  1929                           ;main.c: 466:         LCD_send_string(time);
  1930  0151  3024               	movlw	(low (_time| 0))& (0+255)
  1931  0152  118A  274A  118A   	fcall	_LCD_send_string
  1932  0155                     l1977:
  1933                           
  1934                           ;main.c: 435:     while(!RA2)
  1935  0155  1283               	bcf	3,5	;RP0=0, select bank0
  1936  0156  1303               	bcf	3,6	;RP1=0, select bank0
  1937  0157  1D05               	btfss	5,2	;volatile
  1938  0158  295A               	goto	u1601
  1939  0159  295B               	goto	u1600
  1940  015A                     u1601:
  1941  015A  28D3               	goto	l1943
  1942  015B                     u1600:
  1943  015B                     l235:
  1944  015B  0008               	return
  1945  015C                     __end_of_set_time:
  1946                           
  1947                           	psect	text2
  1948  034B                     __ptext2:	
  1949 ;; *************** function _set_temp *****************
  1950 ;; Defined at:
  1951 ;;		line 291 in file "main.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;		None
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;		None
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  1    wreg      void 
  1958 ;; Registers used:
  1959 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1965 ;;      Params:         0       0       0       0
  1966 ;;      Locals:         0       0       0       0
  1967 ;;      Temps:          0       5       0       0
  1968 ;;      Totals:         0       5       0       0
  1969 ;;Total ram usage:        5 bytes
  1970 ;; Hardware stack levels used:    1
  1971 ;; Hardware stack levels required when called:    5
  1972 ;; This function calls:
  1973 ;;		_LCD_display_clear
  1974 ;;		_LCD_send_string
  1975 ;;		_LCD_set_cursor
  1976 ;;		_sprintf
  1977 ;; This function is called by:
  1978 ;;		_main
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           
  1983                           ;psect for function _set_temp
  1984  034B                     _set_temp:
  1985  034B                     l1825:	
  1986                           ;incstack = 0
  1987                           ; Regs used in _set_temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1988                           
  1989                           
  1990                           ;main.c: 293:     LCD_display_clear();
  1991  034B  118A  277D  118A   	fcall	_LCD_display_clear
  1992                           
  1993                           ;main.c: 295:     LCD_set_cursor(0,0);
  1994  034E  01F4               	clrf	LCD_set_cursor@column
  1995  034F  3000               	movlw	0
  1996  0350  118A  272D  118A   	fcall	_LCD_set_cursor
  1997  0353                     l1827:
  1998                           
  1999                           ;main.c: 296:     LCD_send_string(s_temp);
  2000  0353  30B1               	movlw	(low (_s_temp| 0))& (0+255)
  2001  0354  118A  274A  118A   	fcall	_LCD_send_string
  2002  0357                     l1829:
  2003                           
  2004                           ;main.c: 298:     LCD_set_cursor(0,12);
  2005  0357  300C               	movlw	12
  2006  0358  1283               	bcf	3,5	;RP0=0, select bank0
  2007  0359  1303               	bcf	3,6	;RP1=0, select bank0
  2008  035A  00DF               	movwf	??_set_temp
  2009  035B  085F               	movf	??_set_temp,w
  2010  035C  00F4               	movwf	LCD_set_cursor@column
  2011  035D  3000               	movlw	0
  2012  035E  118A  272D  118A   	fcall	_LCD_set_cursor
  2013                           
  2014                           ;main.c: 299:     LCD_send_string(update_temp);
  2015  0361  302A               	movlw	(low (_update_temp| 0))& (0+255)
  2016  0362  118A  274A  118A   	fcall	_LCD_send_string
  2017                           
  2018                           ;main.c: 301:     while(!RA2)
  2019  0365  2BD6               	goto	l1865
  2020  0366                     l1831:
  2021                           
  2022                           ;main.c: 302:     {;main.c: 303:         s_currentCLK = RC4;
  2023  0366  3000               	movlw	0
  2024  0367  1A07               	btfsc	7,4	;volatile
  2025  0368  3001               	movlw	1
  2026  0369  00EE               	movwf	_s_currentCLK
  2027  036A                     l1833:
  2028                           
  2029                           ;main.c: 304:         if(s_currentCLK != s_lastCLK && s_currentCLK == 1)
  2030  036A  086E               	movf	_s_currentCLK,w
  2031  036B  066D               	xorwf	_s_lastCLK,w
  2032  036C  1903               	skipnz
  2033  036D  2B6F               	goto	u1301
  2034  036E  2B70               	goto	u1300
  2035  036F                     u1301:
  2036  036F  2BAE               	goto	l170
  2037  0370                     u1300:
  2038  0370                     l1835:
  2039  0370  036E               	decf	_s_currentCLK,w
  2040  0371  1D03               	btfss	3,2
  2041  0372  2B74               	goto	u1311
  2042  0373  2B75               	goto	u1310
  2043  0374                     u1311:
  2044  0374  2BAE               	goto	l170
  2045  0375                     u1310:
  2046  0375                     l1837:
  2047                           
  2048                           ;main.c: 305:         {;main.c: 306:             if(RC5 != s_currentCLK)
  2049  0375  3000               	movlw	0
  2050  0376  1A87               	btfsc	7,5	;volatile
  2051  0377  3001               	movlw	1
  2052  0378  066E               	xorwf	_s_currentCLK,w
  2053  0379  1903               	skipnz
  2054  037A  2B7C               	goto	u1321
  2055  037B  2B7D               	goto	u1320
  2056  037C                     u1321:
  2057  037C  2B93               	goto	l1849
  2058  037D                     u1320:
  2059  037D                     l1839:
  2060                           
  2061                           ;main.c: 307:             {;main.c: 308:                 temp_decimal = temp_decimal + 5
      +                          ;
  2062  037D  0822               	movf	_temp_decimal,w
  2063  037E  3E05               	addlw	5
  2064  037F  00DF               	movwf	??_set_temp
  2065  0380  085F               	movf	??_set_temp,w
  2066  0381  00A2               	movwf	_temp_decimal
  2067                           
  2068                           ;main.c: 309:                 if(temp_decimal == 10)
  2069  0382  300A               	movlw	10
  2070  0383  0622               	xorwf	_temp_decimal,w
  2071  0384  1D03               	btfss	3,2
  2072  0385  2B87               	goto	u1331
  2073  0386  2B88               	goto	u1330
  2074  0387                     u1331:
  2075  0387  2BAE               	goto	l170
  2076  0388                     u1330:
  2077  0388                     l1841:
  2078                           
  2079                           ;main.c: 310:                 {;main.c: 311:                     temp_decimal = 0;
  2080  0388  01A2               	clrf	_temp_decimal
  2081  0389                     l1843:
  2082                           
  2083                           ;main.c: 312:                     if(temp_integer > 0)
  2084  0389  0823               	movf	_temp_integer,w
  2085  038A  1903               	btfsc	3,2
  2086  038B  2B8D               	goto	u1341
  2087  038C  2B8E               	goto	u1340
  2088  038D                     u1341:
  2089  038D  2B91               	goto	l1847
  2090  038E                     u1340:
  2091  038E                     l1845:
  2092                           
  2093                           ;main.c: 313:                     {;main.c: 314:                         temp_integer -=
      +                           1;
  2094  038E  3001               	movlw	1
  2095  038F  02A3               	subwf	_temp_integer,f
  2096                           
  2097                           ;main.c: 315:                     }
  2098  0390  2BAE               	goto	l170
  2099  0391                     l1847:
  2100                           
  2101                           ;main.c: 317:                     {;main.c: 318:                         temp_integer = 
      +                          0;
  2102  0391  01A3               	clrf	_temp_integer
  2103  0392  2BAE               	goto	l170
  2104  0393                     l1849:
  2105                           
  2106                           ;main.c: 323:             {;main.c: 324:                 temp_decimal = temp_decimal + 5
      +                          ;
  2107  0393  0822               	movf	_temp_decimal,w
  2108  0394  3E05               	addlw	5
  2109  0395  00DF               	movwf	??_set_temp
  2110  0396  085F               	movf	??_set_temp,w
  2111  0397  00A2               	movwf	_temp_decimal
  2112                           
  2113                           ;main.c: 325:                 if(temp_decimal == 10)
  2114  0398  300A               	movlw	10
  2115  0399  0622               	xorwf	_temp_decimal,w
  2116  039A  1D03               	btfss	3,2
  2117  039B  2B9D               	goto	u1351
  2118  039C  2B9E               	goto	u1350
  2119  039D                     u1351:
  2120  039D  2BAE               	goto	l170
  2121  039E                     u1350:
  2122  039E                     l1851:
  2123                           
  2124                           ;main.c: 326:                 {;main.c: 327:                     temp_decimal = 0;
  2125  039E  01A2               	clrf	_temp_decimal
  2126  039F                     l1853:
  2127                           
  2128                           ;main.c: 328:                     if(temp_integer < 100)
  2129  039F  3064               	movlw	100
  2130  03A0  0223               	subwf	_temp_integer,w
  2131  03A1  1803               	skipnc
  2132  03A2  2BA4               	goto	u1361
  2133  03A3  2BA5               	goto	u1360
  2134  03A4                     u1361:
  2135  03A4  2BAA               	goto	l1857
  2136  03A5                     u1360:
  2137  03A5                     l1855:
  2138                           
  2139                           ;main.c: 329:                     {;main.c: 330:                         temp_integer +=
      +                           1;
  2140  03A5  3001               	movlw	1
  2141  03A6  00DF               	movwf	??_set_temp
  2142  03A7  085F               	movf	??_set_temp,w
  2143  03A8  07A3               	addwf	_temp_integer,f
  2144                           
  2145                           ;main.c: 331:                     }
  2146  03A9  2BAE               	goto	l170
  2147  03AA                     l1857:
  2148                           
  2149                           ;main.c: 333:                     {;main.c: 334:                         temp_integer = 
      +                          99;
  2150  03AA  3063               	movlw	99
  2151  03AB  00DF               	movwf	??_set_temp
  2152  03AC  085F               	movf	??_set_temp,w
  2153  03AD  00A3               	movwf	_temp_integer
  2154  03AE                     l170:	
  2155                           ;main.c: 338:         }
  2156                           
  2157                           
  2158                           ;main.c: 339:         s_lastCLK = s_currentCLK;
  2159  03AE  086E               	movf	_s_currentCLK,w
  2160  03AF  00DF               	movwf	??_set_temp
  2161  03B0  085F               	movf	??_set_temp,w
  2162  03B1  00ED               	movwf	_s_lastCLK
  2163  03B2                     l1859:
  2164                           
  2165                           ;main.c: 340:         sprintf(update_temp,"%d.%d",temp_integer,temp_decimal);
  2166  03B2  301C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2167  03B3  00DF               	movwf	??_set_temp
  2168  03B4  085F               	movf	??_set_temp,w
  2169  03B5  00CA               	movwf	sprintf@f
  2170  03B6  0823               	movf	_temp_integer,w
  2171  03B7  00E0               	movwf	??_set_temp+1
  2172  03B8  01E1               	clrf	??_set_temp+2
  2173  03B9  0860               	movf	??_set_temp+1,w
  2174  03BA  00CB               	movwf	?_sprintf+1
  2175  03BB  0861               	movf	??_set_temp+2,w
  2176  03BC  00CC               	movwf	?_sprintf+2
  2177  03BD  0822               	movf	_temp_decimal,w
  2178  03BE  00E2               	movwf	??_set_temp+3
  2179  03BF  01E3               	clrf	??_set_temp+4
  2180  03C0  0862               	movf	??_set_temp+3,w
  2181  03C1  00CD               	movwf	?_sprintf+3
  2182  03C2  0863               	movf	??_set_temp+4,w
  2183  03C3  00CE               	movwf	?_sprintf+4
  2184  03C4  302A               	movlw	(low (_update_temp| 0))& (0+255)
  2185  03C5  118A  215C  118A   	fcall	_sprintf
  2186  03C8                     l1861:
  2187                           
  2188                           ;main.c: 341:         LCD_set_cursor(0,12);
  2189  03C8  300C               	movlw	12
  2190  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  2191  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  2192  03CB  00DF               	movwf	??_set_temp
  2193  03CC  085F               	movf	??_set_temp,w
  2194  03CD  00F4               	movwf	LCD_set_cursor@column
  2195  03CE  3000               	movlw	0
  2196  03CF  118A  272D  118A   	fcall	_LCD_set_cursor
  2197  03D2                     l1863:
  2198                           
  2199                           ;main.c: 342:         LCD_send_string(update_temp);
  2200  03D2  302A               	movlw	(low (_update_temp| 0))& (0+255)
  2201  03D3  118A  274A  118A   	fcall	_LCD_send_string
  2202  03D6                     l1865:
  2203                           
  2204                           ;main.c: 301:     while(!RA2)
  2205  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  2206  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  2207  03D8  1D05               	btfss	5,2	;volatile
  2208  03D9  2BDB               	goto	u1371
  2209  03DA  2BDC               	goto	u1370
  2210  03DB                     u1371:
  2211  03DB  2B66               	goto	l1831
  2212  03DC                     u1370:
  2213  03DC                     l180:
  2214  03DC  0008               	return
  2215  03DD                     __end_of_set_temp:
  2216                           
  2217                           	psect	text3
  2218  0462                     __ptext3:	
  2219 ;; *************** function _set_humi *****************
  2220 ;; Defined at:
  2221 ;;		line 346 in file "main.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;		None
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;		None
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  1    wreg      void 
  2228 ;; Registers used:
  2229 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2235 ;;      Params:         0       0       0       0
  2236 ;;      Locals:         0       0       0       0
  2237 ;;      Temps:          0       3       0       0
  2238 ;;      Totals:         0       3       0       0
  2239 ;;Total ram usage:        3 bytes
  2240 ;; Hardware stack levels used:    1
  2241 ;; Hardware stack levels required when called:    5
  2242 ;; This function calls:
  2243 ;;		_LCD_display_clear
  2244 ;;		_LCD_send_string
  2245 ;;		_LCD_set_cursor
  2246 ;;		_sprintf
  2247 ;; This function is called by:
  2248 ;;		_main
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           
  2253                           ;psect for function _set_humi
  2254  0462                     _set_humi:
  2255  0462                     l1867:	
  2256                           ;incstack = 0
  2257                           ; Regs used in _set_humi: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2258                           
  2259                           
  2260                           ;main.c: 348:     LCD_display_clear();
  2261  0462  118A  277D  118A   	fcall	_LCD_display_clear
  2262                           
  2263                           ;main.c: 350:     LCD_set_cursor(0,0);
  2264  0465  01F4               	clrf	LCD_set_cursor@column
  2265  0466  3000               	movlw	0
  2266  0467  118A  272D  118A   	fcall	_LCD_set_cursor
  2267  046A                     l1869:
  2268                           
  2269                           ;main.c: 351:     LCD_send_string(s_humi);
  2270  046A  30C6               	movlw	(low (_s_humi| 0))& (0+255)
  2271  046B  118A  274A  118A   	fcall	_LCD_send_string
  2272  046E                     l1871:
  2273                           
  2274                           ;main.c: 353:     LCD_set_cursor(0,13);
  2275  046E  300D               	movlw	13
  2276  046F  1283               	bcf	3,5	;RP0=0, select bank0
  2277  0470  1303               	bcf	3,6	;RP1=0, select bank0
  2278  0471  00DF               	movwf	??_set_humi
  2279  0472  085F               	movf	??_set_humi,w
  2280  0473  00F4               	movwf	LCD_set_cursor@column
  2281  0474  3000               	movlw	0
  2282  0475  118A  272D  118A   	fcall	_LCD_set_cursor
  2283                           
  2284                           ;main.c: 354:     LCD_send_string(update_humi);
  2285  0478  303E               	movlw	(low (_update_humi| 0))& (0+255)
  2286  0479  118A  274A  118A   	fcall	_LCD_send_string
  2287                           
  2288                           ;main.c: 356:     while(!RA2)
  2289  047C  2CCE               	goto	l1899
  2290  047D                     l1873:
  2291                           
  2292                           ;main.c: 357:     {;main.c: 358:         s_currentCLK = RC4;
  2293  047D  3000               	movlw	0
  2294  047E  1A07               	btfsc	7,4	;volatile
  2295  047F  3001               	movlw	1
  2296  0480  00EE               	movwf	_s_currentCLK
  2297  0481                     l1875:
  2298                           
  2299                           ;main.c: 359:         if(s_currentCLK != s_lastCLK && s_currentCLK == 1)
  2300  0481  086E               	movf	_s_currentCLK,w
  2301  0482  066D               	xorwf	_s_lastCLK,w
  2302  0483  1903               	skipnz
  2303  0484  2C86               	goto	u1381
  2304  0485  2C87               	goto	u1380
  2305  0486                     u1381:
  2306  0486  2CAD               	goto	l185
  2307  0487                     u1380:
  2308  0487                     l1877:
  2309  0487  036E               	decf	_s_currentCLK,w
  2310  0488  1D03               	btfss	3,2
  2311  0489  2C8B               	goto	u1391
  2312  048A  2C8C               	goto	u1390
  2313  048B                     u1391:
  2314  048B  2CAD               	goto	l185
  2315  048C                     u1390:
  2316  048C                     l1879:
  2317                           
  2318                           ;main.c: 360:         {;main.c: 361:             if(RC5 != s_currentCLK)
  2319  048C  3000               	movlw	0
  2320  048D  1A87               	btfsc	7,5	;volatile
  2321  048E  3001               	movlw	1
  2322  048F  066E               	xorwf	_s_currentCLK,w
  2323  0490  1903               	skipnz
  2324  0491  2C93               	goto	u1401
  2325  0492  2C94               	goto	u1400
  2326  0493                     u1401:
  2327  0493  2C9E               	goto	l1887
  2328  0494                     u1400:
  2329  0494                     l1881:
  2330                           
  2331                           ;main.c: 362:             {;main.c: 363:                 if(humi_integer > 0)
  2332  0494  0821               	movf	_humi_integer,w
  2333  0495  1903               	btfsc	3,2
  2334  0496  2C98               	goto	u1411
  2335  0497  2C99               	goto	u1410
  2336  0498                     u1411:
  2337  0498  2C9C               	goto	l1885
  2338  0499                     u1410:
  2339  0499                     l1883:
  2340                           
  2341                           ;main.c: 364:                 {;main.c: 365:                     humi_integer -= 1;
  2342  0499  3001               	movlw	1
  2343  049A  02A1               	subwf	_humi_integer,f
  2344                           
  2345                           ;main.c: 366:                 }
  2346  049B  2CAD               	goto	l185
  2347  049C                     l1885:
  2348                           
  2349                           ;main.c: 368:                 {;main.c: 369:                     humi_integer = 0;
  2350  049C  01A1               	clrf	_humi_integer
  2351  049D  2CAD               	goto	l185
  2352  049E                     l1887:
  2353                           
  2354                           ;main.c: 373:             {;main.c: 374:                 if(humi_integer < 100)
  2355  049E  3064               	movlw	100
  2356  049F  0221               	subwf	_humi_integer,w
  2357  04A0  1803               	skipnc
  2358  04A1  2CA3               	goto	u1421
  2359  04A2  2CA4               	goto	u1420
  2360  04A3                     u1421:
  2361  04A3  2CA9               	goto	l1891
  2362  04A4                     u1420:
  2363  04A4                     l1889:
  2364                           
  2365                           ;main.c: 375:                 {;main.c: 376:                     humi_integer += 1;
  2366  04A4  3001               	movlw	1
  2367  04A5  00DF               	movwf	??_set_humi
  2368  04A6  085F               	movf	??_set_humi,w
  2369  04A7  07A1               	addwf	_humi_integer,f
  2370                           
  2371                           ;main.c: 377:                 }
  2372  04A8  2CAD               	goto	l185
  2373  04A9                     l1891:
  2374                           
  2375                           ;main.c: 379:                 {;main.c: 380:                     humi_integer = 99;
  2376  04A9  3063               	movlw	99
  2377  04AA  00DF               	movwf	??_set_humi
  2378  04AB  085F               	movf	??_set_humi,w
  2379  04AC  00A1               	movwf	_humi_integer
  2380  04AD                     l185:	
  2381                           ;main.c: 383:         }
  2382                           
  2383                           
  2384                           ;main.c: 384:         s_lastCLK = s_currentCLK;
  2385  04AD  086E               	movf	_s_currentCLK,w
  2386  04AE  00DF               	movwf	??_set_humi
  2387  04AF  085F               	movf	??_set_humi,w
  2388  04B0  00ED               	movwf	_s_lastCLK
  2389  04B1                     l1893:
  2390                           
  2391                           ;main.c: 385:         sprintf(update_humi,"%d%%",humi_integer);
  2392  04B1  3022               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2393  04B2  00DF               	movwf	??_set_humi
  2394  04B3  085F               	movf	??_set_humi,w
  2395  04B4  00CA               	movwf	sprintf@f
  2396  04B5  0821               	movf	_humi_integer,w
  2397  04B6  00E0               	movwf	??_set_humi+1
  2398  04B7  01E1               	clrf	??_set_humi+2
  2399  04B8  0860               	movf	??_set_humi+1,w
  2400  04B9  00CB               	movwf	?_sprintf+1
  2401  04BA  0861               	movf	??_set_humi+2,w
  2402  04BB  00CC               	movwf	?_sprintf+2
  2403  04BC  303E               	movlw	(low (_update_humi| 0))& (0+255)
  2404  04BD  118A  215C  118A   	fcall	_sprintf
  2405  04C0                     l1895:
  2406                           
  2407                           ;main.c: 386:         LCD_set_cursor(0,13);
  2408  04C0  300D               	movlw	13
  2409  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  2410  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  2411  04C3  00DF               	movwf	??_set_humi
  2412  04C4  085F               	movf	??_set_humi,w
  2413  04C5  00F4               	movwf	LCD_set_cursor@column
  2414  04C6  3000               	movlw	0
  2415  04C7  118A  272D  118A   	fcall	_LCD_set_cursor
  2416  04CA                     l1897:
  2417                           
  2418                           ;main.c: 387:         LCD_send_string(update_humi);
  2419  04CA  303E               	movlw	(low (_update_humi| 0))& (0+255)
  2420  04CB  118A  274A  118A   	fcall	_LCD_send_string
  2421  04CE                     l1899:
  2422                           
  2423                           ;main.c: 356:     while(!RA2)
  2424  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  2425  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  2426  04D0  1D05               	btfss	5,2	;volatile
  2427  04D1  2CD3               	goto	u1431
  2428  04D2  2CD4               	goto	u1430
  2429  04D3                     u1431:
  2430  04D3  2C7D               	goto	l1873
  2431  04D4                     u1430:
  2432  04D4                     l193:
  2433  04D4  0008               	return
  2434  04D5                     __end_of_set_humi:
  2435                           
  2436                           	psect	text4
  2437  015C                     __ptext4:	
  2438 ;; *************** function _sprintf *****************
  2439 ;; Defined at:
  2440 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;  sp              1    wreg     PTR unsigned char 
  2443 ;;		 -> time(6), update_humi(4), update_temp(5), 
  2444 ;;  f               1    4[BANK0 ] PTR const unsigned char 
  2445 ;;		 -> STR_8(10), STR_3(10), STR_2(5), STR_1(6), 
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;  sp              1   23[BANK0 ] PTR unsigned char 
  2448 ;;		 -> time(6), update_humi(4), update_temp(5), 
  2449 ;;  tmpval          4    0        struct .
  2450 ;;  val             2   21[BANK0 ] unsigned int 
  2451 ;;  cp              2   19[BANK0 ] PTR const unsigned char 
  2452 ;;		 -> STR_13(7), ?_sprintf(2), STR_12(1), STR_11(2), 
  2453 ;;		 -> STR_10(1), STR_9(2), STR_7(1), STR_6(2), 
  2454 ;;		 -> STR_5(1), STR_4(2), 
  2455 ;;  len             2    0        unsigned int 
  2456 ;;  c               1   24[BANK0 ] unsigned char 
  2457 ;;  ap              1   18[BANK0 ] PTR void [1]
  2458 ;;		 -> ?_sprintf(2), 
  2459 ;;  prec            1   17[BANK0 ] char 
  2460 ;;  flag            1   16[BANK0 ] unsigned char 
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  2    4[BANK0 ] int 
  2463 ;; Registers used:
  2464 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2470 ;;      Params:         0       9       0       0
  2471 ;;      Locals:         0       9       0       0
  2472 ;;      Temps:          0       3       0       0
  2473 ;;      Totals:         0      21       0       0
  2474 ;;Total ram usage:       21 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; Hardware stack levels required when called:    2
  2477 ;; This function calls:
  2478 ;;		___lwdiv
  2479 ;;		___lwmod
  2480 ;; This function is called by:
  2481 ;;		_set_temp
  2482 ;;		_set_humi
  2483 ;;		_set_time
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           
  2488                           ;psect for function _sprintf
  2489  015C                     _sprintf:
  2490                           
  2491                           ;incstack = 0
  2492                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2493                           ;sprintf@sp stored from wreg
  2494  015C  1283               	bcf	3,5	;RP0=0, select bank0
  2495  015D  1303               	bcf	3,6	;RP1=0, select bank0
  2496  015E  00DD               	movwf	sprintf@sp
  2497  015F                     l1637:
  2498                           
  2499                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2500  015F  304B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2501  0160  00D3               	movwf	??_sprintf
  2502  0161  0853               	movf	??_sprintf,w
  2503  0162  00D8               	movwf	sprintf@ap
  2504                           
  2505                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2506  0163  2A61               	goto	l1709
  2507  0164                     l1639:
  2508                           
  2509                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2510  0164  3025               	movlw	37
  2511  0165  065E               	xorwf	sprintf@c,w
  2512  0166  1903               	btfsc	3,2
  2513  0167  2969               	goto	u1141
  2514  0168  296A               	goto	u1140
  2515  0169                     u1141:
  2516  0169  2976               	goto	l1645
  2517  016A                     u1140:
  2518  016A                     l1641:
  2519                           
  2520                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2521  016A  085E               	movf	sprintf@c,w
  2522  016B  00D3               	movwf	??_sprintf
  2523  016C  085D               	movf	sprintf@sp,w
  2524  016D  0084               	movwf	4
  2525  016E  0853               	movf	??_sprintf,w
  2526  016F  1383               	bcf	3,7	;select IRP bank0
  2527  0170  0080               	movwf	0
  2528  0171                     l1643:
  2529  0171  3001               	movlw	1
  2530  0172  00D3               	movwf	??_sprintf
  2531  0173  0853               	movf	??_sprintf,w
  2532  0174  07DD               	addwf	sprintf@sp,f
  2533                           
  2534                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 559:    continue;
  2535  0175  2A61               	goto	l1709
  2536  0176                     l1645:
  2537                           
  2538                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2539  0176  01D6               	clrf	sprintf@flag
  2540                           
  2541                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2542  0177  29B4               	goto	l1669
  2543  0178                     l1647:
  2544                           
  2545                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 760:     cp = (*(
      +                          const char * *)__va_arg((*(const char * **)ap), (const char *)0));
  2546  0178  0858               	movf	sprintf@ap,w
  2547  0179  0084               	movwf	4
  2548  017A  1383               	bcf	3,7	;select IRP bank0
  2549  017B  0800               	movf	0,w
  2550  017C  00D9               	movwf	sprintf@cp
  2551  017D  0A84               	incf	4,f
  2552  017E  0800               	movf	0,w
  2553  017F  0384               	decf	4,f
  2554  0180  00DA               	movwf	sprintf@cp+1
  2555  0181                     l1649:
  2556  0181  3002               	movlw	2
  2557  0182  00D3               	movwf	??_sprintf
  2558  0183  0853               	movf	??_sprintf,w
  2559  0184  07D8               	addwf	sprintf@ap,f
  2560  0185                     l1651:
  2561                           
  2562                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 766:    if(!cp)
  2563  0185  0859               	movf	sprintf@cp,w
  2564  0186  045A               	iorwf	sprintf@cp+1,w
  2565  0187  1D03               	btfss	3,2
  2566  0188  298A               	goto	u1151
  2567  0189  298B               	goto	u1150
  2568  018A                     u1151:
  2569  018A  29A7               	goto	l1661
  2570  018B                     u1150:
  2571  018B                     l1653:
  2572                           
  2573                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 767:     cp = "(n
      +                          ull)";
  2574  018B  3015               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2575  018C  00D9               	movwf	sprintf@cp
  2576  018D  3080               	movlw	128
  2577  018E  00DA               	movwf	sprintf@cp+1
  2578  018F  29A7               	goto	l1661
  2579  0190                     l1655:
  2580                           
  2581                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 804:     ((*sp++ 
      +                          = (*cp++)));
  2582  0190  085A               	movf	sprintf@cp+1,w
  2583  0191  00FF               	movwf	btemp+1
  2584  0192  0859               	movf	sprintf@cp,w
  2585  0193  0084               	movwf	4
  2586  0194  118A  2600  118A   	fcall	stringtab
  2587  0197  00D3               	movwf	??_sprintf
  2588  0198  085D               	movf	sprintf@sp,w
  2589  0199  0084               	movwf	4
  2590  019A  0853               	movf	??_sprintf,w
  2591  019B  1383               	bcf	3,7	;select IRP bank0
  2592  019C  0080               	movwf	0
  2593  019D                     l1657:
  2594  019D  3001               	movlw	1
  2595  019E  07D9               	addwf	sprintf@cp,f
  2596  019F  1803               	skipnc
  2597  01A0  0ADA               	incf	sprintf@cp+1,f
  2598  01A1  3000               	movlw	0
  2599  01A2  07DA               	addwf	sprintf@cp+1,f
  2600  01A3                     l1659:
  2601  01A3  3001               	movlw	1
  2602  01A4  00D3               	movwf	??_sprintf
  2603  01A5  0853               	movf	??_sprintf,w
  2604  01A6  07DD               	addwf	sprintf@sp,f
  2605  01A7                     l1661:
  2606                           
  2607                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 803:    while(*cp
      +                          )
  2608  01A7  085A               	movf	sprintf@cp+1,w
  2609  01A8  00FF               	movwf	btemp+1
  2610  01A9  0859               	movf	sprintf@cp,w
  2611  01AA  0084               	movwf	4
  2612  01AB  118A  2600  118A   	fcall	stringtab
  2613  01AE  3A00               	xorlw	0
  2614  01AF  1D03               	skipz
  2615  01B0  29B2               	goto	u1161
  2616  01B1  29B3               	goto	u1160
  2617  01B2                     u1161:
  2618  01B2  2990               	goto	l1655
  2619  01B3                     u1160:
  2620  01B3  2A61               	goto	l1709
  2621  01B4                     l1669:
  2622  01B4  3001               	movlw	1
  2623  01B5  07CA               	addwf	sprintf@f,f
  2624  01B6  30FF               	movlw	-1
  2625  01B7  074A               	addwf	sprintf@f,w
  2626  01B8  0084               	movwf	4
  2627  01B9  118A  260A  118A   	fcall	stringdir
  2628  01BC  00DE               	movwf	sprintf@c
  2629  01BD  00D3               	movwf	??_sprintf
  2630  01BE  01D4               	clrf	??_sprintf+1
  2631                           
  2632                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2633                           ; Switch size 1, requested type "simple"
  2634                           ; Number of cases is 1, Range of values is 0 to 0
  2635                           ; switch strategies available:
  2636                           ; Name         Instructions Cycles
  2637                           ; simple_byte            4     3 (average)
  2638                           ; direct_byte            9     7 (fixed)
  2639                           ; jumptable            260     6 (fixed)
  2640                           ;	Chosen strategy is simple_byte
  2641  01BF  0854               	movf	??_sprintf+1,w
  2642  01C0  3A00               	xorlw	0	; case 0
  2643  01C1  1903               	skipnz
  2644  01C2  29C4               	goto	l2117
  2645  01C3  296A               	goto	l1641
  2646  01C4                     l2117:
  2647                           
  2648                           ; Switch size 1, requested type "simple"
  2649                           ; Number of cases is 4, Range of values is 0 to 115
  2650                           ; switch strategies available:
  2651                           ; Name         Instructions Cycles
  2652                           ; simple_byte           13     7 (average)
  2653                           ; direct_byte          239     7 (fixed)
  2654                           ; jumptable            260     6 (fixed)
  2655                           ;	Chosen strategy is simple_byte
  2656  01C4  0853               	movf	??_sprintf,w
  2657  01C5  3A00               	xorlw	0	; case 0
  2658  01C6  1903               	skipnz
  2659  01C7  2A71               	goto	l1711
  2660  01C8  3A64               	xorlw	100	; case 100
  2661  01C9  1903               	skipnz
  2662  01CA  29D2               	goto	l1671
  2663  01CB  3A0D               	xorlw	13	; case 105
  2664  01CC  1903               	skipnz
  2665  01CD  29D2               	goto	l1671
  2666  01CE  3A1A               	xorlw	26	; case 115
  2667  01CF  1903               	skipnz
  2668  01D0  2978               	goto	l1647
  2669  01D1  296A               	goto	l1641
  2670  01D2                     l1671:
  2671                           
  2672                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2673  01D2  0858               	movf	sprintf@ap,w
  2674  01D3  0084               	movwf	4
  2675  01D4  1383               	bcf	3,7	;select IRP bank0
  2676  01D5  0800               	movf	0,w
  2677  01D6  00DB               	movwf	sprintf@val
  2678  01D7  0A84               	incf	4,f
  2679  01D8  0800               	movf	0,w
  2680  01D9  00DC               	movwf	sprintf@val+1
  2681  01DA                     l1673:
  2682  01DA  3002               	movlw	2
  2683  01DB  00D3               	movwf	??_sprintf
  2684  01DC  0853               	movf	??_sprintf,w
  2685  01DD  07D8               	addwf	sprintf@ap,f
  2686  01DE                     l1675:
  2687                           
  2688                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2689  01DE  1FDC               	btfss	sprintf@val+1,7
  2690  01DF  29E1               	goto	u1171
  2691  01E0  29E2               	goto	u1170
  2692  01E1                     u1171:
  2693  01E1  29EB               	goto	l1681
  2694  01E2                     u1170:
  2695  01E2                     l1677:
  2696                           
  2697                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2698  01E2  3003               	movlw	3
  2699  01E3  00D3               	movwf	??_sprintf
  2700  01E4  0853               	movf	??_sprintf,w
  2701  01E5  04D6               	iorwf	sprintf@flag,f
  2702  01E6                     l1679:
  2703                           
  2704                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2705  01E6  09DB               	comf	sprintf@val,f
  2706  01E7  09DC               	comf	sprintf@val+1,f
  2707  01E8  0ADB               	incf	sprintf@val,f
  2708  01E9  1903               	skipnz
  2709  01EA  0ADC               	incf	sprintf@val+1,f
  2710  01EB                     l1681:
  2711                           
  2712                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2713  01EB  01DE               	clrf	sprintf@c
  2714  01EC  0ADE               	incf	sprintf@c,f
  2715  01ED                     l1687:
  2716                           
  2717                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2718  01ED  085E               	movf	sprintf@c,w
  2719  01EE  00D3               	movwf	??_sprintf
  2720  01EF  0753               	addwf	??_sprintf,w
  2721  01F0  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2722  01F1  0084               	movwf	4
  2723  01F2  118A  260A  118A   	fcall	stringdir
  2724  01F5  00D4               	movwf	??_sprintf+1
  2725  01F6  118A  260A  118A   	fcall	stringdir
  2726  01F9  00D5               	movwf	??_sprintf+2
  2727  01FA  0855               	movf	??_sprintf+2,w
  2728  01FB  025C               	subwf	sprintf@val+1,w
  2729  01FC  1D03               	skipz
  2730  01FD  2A00               	goto	u1185
  2731  01FE  0854               	movf	??_sprintf+1,w
  2732  01FF  025B               	subwf	sprintf@val,w
  2733  0200                     u1185:
  2734  0200  1803               	skipnc
  2735  0201  2A03               	goto	u1181
  2736  0202  2A04               	goto	u1180
  2737  0203                     u1181:
  2738  0203  2A05               	goto	l1691
  2739  0204                     u1180:
  2740  0204  2A0F               	goto	l1693
  2741  0205                     l1691:
  2742  0205  3001               	movlw	1
  2743  0206  00D3               	movwf	??_sprintf
  2744  0207  0853               	movf	??_sprintf,w
  2745  0208  07DE               	addwf	sprintf@c,f
  2746  0209  3005               	movlw	5
  2747  020A  065E               	xorwf	sprintf@c,w
  2748  020B  1D03               	btfss	3,2
  2749  020C  2A0E               	goto	u1191
  2750  020D  2A0F               	goto	u1190
  2751  020E                     u1191:
  2752  020E  29ED               	goto	l1687
  2753  020F                     u1190:
  2754  020F                     l1693:
  2755                           
  2756                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2757  020F  0856               	movf	sprintf@flag,w
  2758  0210  3903               	andlw	3
  2759  0211  1903               	btfsc	3,2
  2760  0212  2A14               	goto	u1201
  2761  0213  2A15               	goto	u1200
  2762  0214                     u1201:
  2763  0214  2A20               	goto	l1699
  2764  0215                     u1200:
  2765  0215                     l1695:
  2766                           
  2767                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2768  0215  302D               	movlw	45
  2769  0216  00D3               	movwf	??_sprintf
  2770  0217  085D               	movf	sprintf@sp,w
  2771  0218  0084               	movwf	4
  2772  0219  0853               	movf	??_sprintf,w
  2773  021A  1383               	bcf	3,7	;select IRP bank0
  2774  021B  0080               	movwf	0
  2775  021C                     l1697:
  2776  021C  3001               	movlw	1
  2777  021D  00D3               	movwf	??_sprintf
  2778  021E  0853               	movf	??_sprintf,w
  2779  021F  07DD               	addwf	sprintf@sp,f
  2780  0220                     l1699:
  2781                           
  2782                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2783  0220  085E               	movf	sprintf@c,w
  2784  0221  00D3               	movwf	??_sprintf
  2785  0222  0853               	movf	??_sprintf,w
  2786  0223  00D7               	movwf	sprintf@prec
  2787                           
  2788                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2789  0224  2A58               	goto	l1707
  2790  0225                     l1701:
  2791                           
  2792                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2793  0225  300A               	movlw	10
  2794  0226  00C6               	movwf	___lwmod@divisor
  2795  0227  3000               	movlw	0
  2796  0228  00C7               	movwf	___lwmod@divisor+1
  2797  0229  0857               	movf	sprintf@prec,w
  2798  022A  00D3               	movwf	??_sprintf
  2799  022B  0753               	addwf	??_sprintf,w
  2800  022C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2801  022D  0084               	movwf	4
  2802  022E  118A  260A  118A   	fcall	stringdir
  2803  0231  00F2               	movwf	___lwdiv@divisor
  2804  0232  118A  260A  118A   	fcall	stringdir
  2805  0235  00F3               	movwf	___lwdiv@divisor+1
  2806  0236  085C               	movf	sprintf@val+1,w
  2807  0237  00F5               	movwf	___lwdiv@dividend+1
  2808  0238  085B               	movf	sprintf@val,w
  2809  0239  00F4               	movwf	___lwdiv@dividend
  2810  023A  118A  251C  118A   	fcall	___lwdiv
  2811  023D  0873               	movf	?___lwdiv+1,w
  2812  023E  1283               	bcf	3,5	;RP0=0, select bank0
  2813  023F  1303               	bcf	3,6	;RP1=0, select bank0
  2814  0240  00C9               	movwf	___lwmod@dividend+1
  2815  0241  0872               	movf	?___lwdiv,w
  2816  0242  00C8               	movwf	___lwmod@dividend
  2817  0243  118A  25A3  118A   	fcall	___lwmod
  2818  0246  1283               	bcf	3,5	;RP0=0, select bank0
  2819  0247  1303               	bcf	3,6	;RP1=0, select bank0
  2820  0248  0846               	movf	?___lwmod,w
  2821  0249  3E30               	addlw	48
  2822  024A  00D4               	movwf	??_sprintf+1
  2823  024B  0854               	movf	??_sprintf+1,w
  2824  024C  00DE               	movwf	sprintf@c
  2825  024D                     l1703:
  2826                           
  2827                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2828  024D  085E               	movf	sprintf@c,w
  2829  024E  00D3               	movwf	??_sprintf
  2830  024F  085D               	movf	sprintf@sp,w
  2831  0250  0084               	movwf	4
  2832  0251  0853               	movf	??_sprintf,w
  2833  0252  1383               	bcf	3,7	;select IRP bank0
  2834  0253  0080               	movwf	0
  2835  0254                     l1705:
  2836  0254  3001               	movlw	1
  2837  0255  00D3               	movwf	??_sprintf
  2838  0256  0853               	movf	??_sprintf,w
  2839  0257  07DD               	addwf	sprintf@sp,f
  2840  0258                     l1707:
  2841                           
  2842                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2843  0258  30FF               	movlw	255
  2844  0259  00D3               	movwf	??_sprintf
  2845  025A  0853               	movf	??_sprintf,w
  2846  025B  07D7               	addwf	sprintf@prec,f
  2847  025C  0A57               	incf	sprintf@prec,w
  2848  025D  1D03               	btfss	3,2
  2849  025E  2A60               	goto	u1211
  2850  025F  2A61               	goto	u1210
  2851  0260                     u1211:
  2852  0260  2A25               	goto	l1701
  2853  0261                     u1210:
  2854  0261                     l1709:
  2855                           
  2856                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2857  0261  3001               	movlw	1
  2858  0262  07CA               	addwf	sprintf@f,f
  2859  0263  30FF               	movlw	-1
  2860  0264  074A               	addwf	sprintf@f,w
  2861  0265  0084               	movwf	4
  2862  0266  118A  260A  118A   	fcall	stringdir
  2863  0269  00D3               	movwf	??_sprintf
  2864  026A  0853               	movf	??_sprintf,w
  2865  026B  00DE               	movwf	sprintf@c
  2866  026C  085E               	movf	sprintf@c,w
  2867  026D  1D03               	btfss	3,2
  2868  026E  2A70               	goto	u1221
  2869  026F  2A71               	goto	u1220
  2870  0270                     u1221:
  2871  0270  2964               	goto	l1639
  2872  0271                     u1220:
  2873  0271                     l1711:
  2874                           
  2875                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2876  0271  085D               	movf	sprintf@sp,w
  2877  0272  0084               	movwf	4
  2878  0273  1383               	bcf	3,7	;select IRP bank0
  2879  0274  0180               	clrf	0
  2880  0275                     l407:
  2881  0275  0008               	return
  2882  0276                     __end_of_sprintf:
  2883                           
  2884                           	psect	text5
  2885  05A3                     __ptext5:	
  2886 ;; *************** function ___lwmod *****************
  2887 ;; Defined at:
  2888 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;  divisor         2    0[BANK0 ] unsigned int 
  2891 ;;  dividend        2    2[BANK0 ] unsigned int 
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;  counter         1   11[COMMON] unsigned char 
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  2    0[BANK0 ] unsigned int 
  2896 ;; Registers used:
  2897 ;;		wreg, status,2, status,0
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2903 ;;      Params:         0       4       0       0
  2904 ;;      Locals:         1       0       0       0
  2905 ;;      Temps:          1       0       0       0
  2906 ;;      Totals:         2       4       0       0
  2907 ;;Total ram usage:        6 bytes
  2908 ;; Hardware stack levels used:    1
  2909 ;; Hardware stack levels required when called:    1
  2910 ;; This function calls:
  2911 ;;		Nothing
  2912 ;; This function is called by:
  2913 ;;		_sprintf
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           
  2918                           ;psect for function ___lwmod
  2919  05A3                     ___lwmod:
  2920  05A3                     l1591:	
  2921                           ;incstack = 0
  2922                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2923                           
  2924  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  2925  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  2926  05A5  0846               	movf	___lwmod@divisor,w
  2927  05A6  0447               	iorwf	___lwmod@divisor+1,w
  2928  05A7  1903               	btfsc	3,2
  2929  05A8  2DAA               	goto	u1061
  2930  05A9  2DAB               	goto	u1060
  2931  05AA                     u1061:
  2932  05AA  2DDA               	goto	l1609
  2933  05AB                     u1060:
  2934  05AB                     l1593:
  2935  05AB  01FB               	clrf	___lwmod@counter
  2936  05AC  0AFB               	incf	___lwmod@counter,f
  2937  05AD  2DB9               	goto	l1599
  2938  05AE                     l1595:
  2939  05AE  3001               	movlw	1
  2940  05AF                     u1075:
  2941  05AF  1003               	clrc
  2942  05B0  0DC6               	rlf	___lwmod@divisor,f
  2943  05B1  0DC7               	rlf	___lwmod@divisor+1,f
  2944  05B2  3EFF               	addlw	-1
  2945  05B3  1D03               	skipz
  2946  05B4  2DAF               	goto	u1075
  2947  05B5                     l1597:
  2948  05B5  3001               	movlw	1
  2949  05B6  00FA               	movwf	??___lwmod
  2950  05B7  087A               	movf	??___lwmod,w
  2951  05B8  07FB               	addwf	___lwmod@counter,f
  2952  05B9                     l1599:
  2953  05B9  1FC7               	btfss	___lwmod@divisor+1,7
  2954  05BA  2DBC               	goto	u1081
  2955  05BB  2DBD               	goto	u1080
  2956  05BC                     u1081:
  2957  05BC  2DAE               	goto	l1595
  2958  05BD                     u1080:
  2959  05BD                     l1601:
  2960  05BD  0847               	movf	___lwmod@divisor+1,w
  2961  05BE  0249               	subwf	___lwmod@dividend+1,w
  2962  05BF  1D03               	skipz
  2963  05C0  2DC3               	goto	u1095
  2964  05C1  0846               	movf	___lwmod@divisor,w
  2965  05C2  0248               	subwf	___lwmod@dividend,w
  2966  05C3                     u1095:
  2967  05C3  1C03               	skipc
  2968  05C4  2DC6               	goto	u1091
  2969  05C5  2DC7               	goto	u1090
  2970  05C6                     u1091:
  2971  05C6  2DCD               	goto	l1605
  2972  05C7                     u1090:
  2973  05C7                     l1603:
  2974  05C7  0846               	movf	___lwmod@divisor,w
  2975  05C8  02C8               	subwf	___lwmod@dividend,f
  2976  05C9  0847               	movf	___lwmod@divisor+1,w
  2977  05CA  1C03               	skipc
  2978  05CB  03C9               	decf	___lwmod@dividend+1,f
  2979  05CC  02C9               	subwf	___lwmod@dividend+1,f
  2980  05CD                     l1605:
  2981  05CD  3001               	movlw	1
  2982  05CE                     u1105:
  2983  05CE  1003               	clrc
  2984  05CF  0CC7               	rrf	___lwmod@divisor+1,f
  2985  05D0  0CC6               	rrf	___lwmod@divisor,f
  2986  05D1  3EFF               	addlw	-1
  2987  05D2  1D03               	skipz
  2988  05D3  2DCE               	goto	u1105
  2989  05D4                     l1607:
  2990  05D4  3001               	movlw	1
  2991  05D5  02FB               	subwf	___lwmod@counter,f
  2992  05D6  1D03               	btfss	3,2
  2993  05D7  2DD9               	goto	u1111
  2994  05D8  2DDA               	goto	u1110
  2995  05D9                     u1111:
  2996  05D9  2DBD               	goto	l1601
  2997  05DA                     u1110:
  2998  05DA                     l1609:
  2999  05DA  0849               	movf	___lwmod@dividend+1,w
  3000  05DB  00C7               	movwf	?___lwmod+1
  3001  05DC  0848               	movf	___lwmod@dividend,w
  3002  05DD  00C6               	movwf	?___lwmod
  3003  05DE                     l693:
  3004  05DE  0008               	return
  3005  05DF                     __end_of___lwmod:
  3006                           
  3007                           	psect	text6
  3008  051C                     __ptext6:	
  3009 ;; *************** function ___lwdiv *****************
  3010 ;; Defined at:
  3011 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;  divisor         2    2[COMMON] unsigned int 
  3014 ;;  dividend        2    4[COMMON] unsigned int 
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;  quotient        2    7[COMMON] unsigned int 
  3017 ;;  counter         1    9[COMMON] unsigned char 
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  2    2[COMMON] unsigned int 
  3020 ;; Registers used:
  3021 ;;		wreg, status,2, status,0
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3027 ;;      Params:         4       0       0       0
  3028 ;;      Locals:         3       0       0       0
  3029 ;;      Temps:          1       0       0       0
  3030 ;;      Totals:         8       0       0       0
  3031 ;;Total ram usage:        8 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; Hardware stack levels required when called:    1
  3034 ;; This function calls:
  3035 ;;		Nothing
  3036 ;; This function is called by:
  3037 ;;		_sprintf
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           
  3042                           ;psect for function ___lwdiv
  3043  051C                     ___lwdiv:
  3044  051C                     l1565:	
  3045                           ;incstack = 0
  3046                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3047                           
  3048  051C  01F7               	clrf	___lwdiv@quotient
  3049  051D  01F8               	clrf	___lwdiv@quotient+1
  3050  051E                     l1567:
  3051  051E  0872               	movf	___lwdiv@divisor,w
  3052  051F  0473               	iorwf	___lwdiv@divisor+1,w
  3053  0520  1903               	btfsc	3,2
  3054  0521  2D23               	goto	u991
  3055  0522  2D24               	goto	u990
  3056  0523                     u991:
  3057  0523  2D5B               	goto	l1587
  3058  0524                     u990:
  3059  0524                     l1569:
  3060  0524  01F9               	clrf	___lwdiv@counter
  3061  0525  0AF9               	incf	___lwdiv@counter,f
  3062  0526  2D32               	goto	l1575
  3063  0527                     l1571:
  3064  0527  3001               	movlw	1
  3065  0528                     u1005:
  3066  0528  1003               	clrc
  3067  0529  0DF2               	rlf	___lwdiv@divisor,f
  3068  052A  0DF3               	rlf	___lwdiv@divisor+1,f
  3069  052B  3EFF               	addlw	-1
  3070  052C  1D03               	skipz
  3071  052D  2D28               	goto	u1005
  3072  052E                     l1573:
  3073  052E  3001               	movlw	1
  3074  052F  00F6               	movwf	??___lwdiv
  3075  0530  0876               	movf	??___lwdiv,w
  3076  0531  07F9               	addwf	___lwdiv@counter,f
  3077  0532                     l1575:
  3078  0532  1FF3               	btfss	___lwdiv@divisor+1,7
  3079  0533  2D35               	goto	u1011
  3080  0534  2D36               	goto	u1010
  3081  0535                     u1011:
  3082  0535  2D27               	goto	l1571
  3083  0536                     u1010:
  3084  0536                     l1577:
  3085  0536  3001               	movlw	1
  3086  0537                     u1025:
  3087  0537  1003               	clrc
  3088  0538  0DF7               	rlf	___lwdiv@quotient,f
  3089  0539  0DF8               	rlf	___lwdiv@quotient+1,f
  3090  053A  3EFF               	addlw	-1
  3091  053B  1D03               	skipz
  3092  053C  2D37               	goto	u1025
  3093  053D  0873               	movf	___lwdiv@divisor+1,w
  3094  053E  0275               	subwf	___lwdiv@dividend+1,w
  3095  053F  1D03               	skipz
  3096  0540  2D43               	goto	u1035
  3097  0541  0872               	movf	___lwdiv@divisor,w
  3098  0542  0274               	subwf	___lwdiv@dividend,w
  3099  0543                     u1035:
  3100  0543  1C03               	skipc
  3101  0544  2D46               	goto	u1031
  3102  0545  2D47               	goto	u1030
  3103  0546                     u1031:
  3104  0546  2D4E               	goto	l1583
  3105  0547                     u1030:
  3106  0547                     l1579:
  3107  0547  0872               	movf	___lwdiv@divisor,w
  3108  0548  02F4               	subwf	___lwdiv@dividend,f
  3109  0549  0873               	movf	___lwdiv@divisor+1,w
  3110  054A  1C03               	skipc
  3111  054B  03F5               	decf	___lwdiv@dividend+1,f
  3112  054C  02F5               	subwf	___lwdiv@dividend+1,f
  3113  054D                     l1581:
  3114  054D  1477               	bsf	___lwdiv@quotient,0
  3115  054E                     l1583:
  3116  054E  3001               	movlw	1
  3117  054F                     u1045:
  3118  054F  1003               	clrc
  3119  0550  0CF3               	rrf	___lwdiv@divisor+1,f
  3120  0551  0CF2               	rrf	___lwdiv@divisor,f
  3121  0552  3EFF               	addlw	-1
  3122  0553  1D03               	skipz
  3123  0554  2D4F               	goto	u1045
  3124  0555                     l1585:
  3125  0555  3001               	movlw	1
  3126  0556  02F9               	subwf	___lwdiv@counter,f
  3127  0557  1D03               	btfss	3,2
  3128  0558  2D5A               	goto	u1051
  3129  0559  2D5B               	goto	u1050
  3130  055A                     u1051:
  3131  055A  2D36               	goto	l1577
  3132  055B                     u1050:
  3133  055B                     l1587:
  3134  055B  0878               	movf	___lwdiv@quotient+1,w
  3135  055C  00F3               	movwf	?___lwdiv+1
  3136  055D  0877               	movf	___lwdiv@quotient,w
  3137  055E  00F2               	movwf	?___lwdiv
  3138  055F                     l683:
  3139  055F  0008               	return
  3140  0560                     __end_of___lwdiv:
  3141                           
  3142                           	psect	text7
  3143  0767                     __ptext7:	
  3144 ;; *************** function _set_date *****************
  3145 ;; Defined at:
  3146 ;;		line 470 in file "main.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;		None
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;		None
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  1    wreg      void 
  3153 ;; Registers used:
  3154 ;;		wreg, status,2, status,0
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3160 ;;      Params:         0       0       0       0
  3161 ;;      Locals:         0       0       0       0
  3162 ;;      Temps:          1       0       0       0
  3163 ;;      Totals:         1       0       0       0
  3164 ;;Total ram usage:        1 bytes
  3165 ;; Hardware stack levels used:    1
  3166 ;; Hardware stack levels required when called:    1
  3167 ;; This function calls:
  3168 ;;		Nothing
  3169 ;; This function is called by:
  3170 ;;		_main
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174                           
  3175                           ;psect for function _set_date
  3176  0767                     _set_date:
  3177  0767                     l1979:	
  3178                           ;incstack = 0
  3179                           ; Regs used in _set_date: [wreg+status,2+status,0]
  3180                           
  3181                           
  3182                           ;main.c: 472:     s_currentCLK = RC4;
  3183  0767  3000               	movlw	0
  3184  0768  1283               	bcf	3,5	;RP0=0, select bank0
  3185  0769  1303               	bcf	3,6	;RP1=0, select bank0
  3186  076A  1A07               	btfsc	7,4	;volatile
  3187  076B  3001               	movlw	1
  3188  076C  00EE               	movwf	_s_currentCLK
  3189  076D                     l1981:
  3190                           
  3191                           ;main.c: 473:     if(s_currentCLK != s_lastCLK && s_currentCLK == 1)
  3192  076D  086E               	movf	_s_currentCLK,w
  3193  076E  066D               	xorwf	_s_lastCLK,w
  3194  076F  1903               	skipnz
  3195  0770  2F72               	goto	u1611
  3196  0771  2F73               	goto	u1610
  3197  0772                     u1611:
  3198  0772  2F78               	goto	l1989
  3199  0773                     u1610:
  3200  0773                     l1983:
  3201  0773  036E               	decf	_s_currentCLK,w
  3202  0774  1D03               	btfss	3,2
  3203  0775  2F77               	goto	u1621
  3204  0776  2F78               	goto	u1620
  3205  0777                     u1621:
  3206  0777  2F78               	goto	l1989
  3207  0778                     u1620:
  3208  0778                     l1985:
  3209  0778                     l1989:	
  3210                           ;main.c: 474:     {;main.c: 475:         if(RC5 != s_currentCLK)
  3211                           
  3212                           
  3213                           ;main.c: 484:     s_lastCLK = s_currentCLK;
  3214  0778  086E               	movf	_s_currentCLK,w
  3215  0779  00F2               	movwf	??_set_date
  3216  077A  0872               	movf	??_set_date,w
  3217  077B  00ED               	movwf	_s_lastCLK
  3218  077C                     l241:
  3219  077C  0008               	return
  3220  077D                     __end_of_set_date:
  3221                           
  3222                           	psect	text8
  3223  06E7                     __ptext8:	
  3224 ;; *************** function _LCD_display_ctrl *****************
  3225 ;; Defined at:
  3226 ;;		line 99 in file "main.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;  display         1    wreg     unsigned char 
  3229 ;;  cursor          1    4[COMMON] unsigned char 
  3230 ;;  blink           1    5[COMMON] unsigned char 
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;  display         1    7[COMMON] unsigned char 
  3233 ;;  temp            1    8[COMMON] unsigned char 
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  1    wreg      void 
  3236 ;; Registers used:
  3237 ;;		wreg, status,2, status,0, pclath, cstack
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3243 ;;      Params:         2       0       0       0
  3244 ;;      Locals:         2       0       0       0
  3245 ;;      Temps:          1       0       0       0
  3246 ;;      Totals:         5       0       0       0
  3247 ;;Total ram usage:        5 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; Hardware stack levels required when called:    3
  3250 ;; This function calls:
  3251 ;;		___lcd_cmd
  3252 ;; This function is called by:
  3253 ;;		_main
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           
  3258                           ;psect for function _LCD_display_ctrl
  3259  06E7                     _LCD_display_ctrl:
  3260                           
  3261                           ;incstack = 0
  3262                           ; Regs used in _LCD_display_ctrl: [wreg+status,2+status,0+pclath+cstack]
  3263                           ;LCD_display_ctrl@display stored from wreg
  3264  06E7  00F7               	movwf	LCD_display_ctrl@display
  3265  06E8                     l1719:
  3266                           
  3267                           ;main.c: 99: void LCD_display_ctrl(uint8_t display, uint8_t cursor, uint8_t blink);main.
      +                          c: 100: {;main.c: 101:     __lcd_cmd(0x00);
  3268  06E8  3000               	movlw	0
  3269  06E9  118A  27B3  118A   	fcall	___lcd_cmd
  3270  06EC                     l1721:
  3271                           
  3272                           ;main.c: 103:     uint8_t temp = 0x0C;
  3273  06EC  300C               	movlw	12
  3274  06ED  00F6               	movwf	??_LCD_display_ctrl
  3275  06EE  0876               	movf	??_LCD_display_ctrl,w
  3276  06EF  00F8               	movwf	LCD_display_ctrl@temp
  3277  06F0                     l1723:
  3278                           
  3279                           ;main.c: 104:     if(display == 1)
  3280  06F0  0377               	decf	LCD_display_ctrl@display,w
  3281  06F1  1D03               	btfss	3,2
  3282  06F2  2EF4               	goto	u1231
  3283  06F3  2EF5               	goto	u1230
  3284  06F4                     u1231:
  3285  06F4  2F06               	goto	l1735
  3286  06F5                     u1230:
  3287  06F5                     l1725:
  3288                           
  3289                           ;main.c: 105:     {;main.c: 106:         if(cursor == 1)
  3290  06F5  0374               	decf	LCD_display_ctrl@cursor,w
  3291  06F6  1D03               	btfss	3,2
  3292  06F7  2EF9               	goto	u1241
  3293  06F8  2EFA               	goto	u1240
  3294  06F9                     u1241:
  3295  06F9  2EFB               	goto	l1729
  3296  06FA                     u1240:
  3297  06FA                     l1727:
  3298                           
  3299                           ;main.c: 107:         {;main.c: 108:             temp |= 1 << 1;
  3300  06FA  14F8               	bsf	LCD_display_ctrl@temp,1
  3301  06FB                     l1729:
  3302                           
  3303                           ;main.c: 110:         if(blink == 1)
  3304  06FB  0375               	decf	LCD_display_ctrl@blink,w
  3305  06FC  1D03               	btfss	3,2
  3306  06FD  2EFF               	goto	u1251
  3307  06FE  2F00               	goto	u1250
  3308  06FF                     u1251:
  3309  06FF  2F01               	goto	l1733
  3310  0700                     u1250:
  3311  0700                     l1731:
  3312                           
  3313                           ;main.c: 111:         {;main.c: 112:             temp |= 1 << 0;
  3314  0700  1478               	bsf	LCD_display_ctrl@temp,0
  3315  0701                     l1733:
  3316                           
  3317                           ;main.c: 114:         __lcd_cmd(temp);
  3318  0701  0878               	movf	LCD_display_ctrl@temp,w
  3319  0702  118A  27B3  118A   	fcall	___lcd_cmd
  3320                           
  3321                           ;main.c: 115:     }
  3322  0705  2F0A               	goto	l84
  3323  0706                     l1735:
  3324                           
  3325                           ;main.c: 117:     {;main.c: 118:         __lcd_cmd(0x08);
  3326  0706  3008               	movlw	8
  3327  0707  118A  27B3  118A   	fcall	___lcd_cmd
  3328  070A                     l84:
  3329  070A  0008               	return
  3330  070B                     __end_of_LCD_display_ctrl:
  3331                           
  3332                           	psect	text9
  3333  04D5                     __ptext9:	
  3334 ;; *************** function _LCD_Init *****************
  3335 ;; Defined at:
  3336 ;;		line 158 in file "main.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;		None
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;		None
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  1    wreg      void 
  3343 ;; Registers used:
  3344 ;;		wreg, status,2, status,0, pclath, cstack
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3350 ;;      Params:         0       0       0       0
  3351 ;;      Locals:         0       0       0       0
  3352 ;;      Temps:          2       0       0       0
  3353 ;;      Totals:         2       0       0       0
  3354 ;;Total ram usage:        2 bytes
  3355 ;; Hardware stack levels used:    1
  3356 ;; Hardware stack levels required when called:    3
  3357 ;; This function calls:
  3358 ;;		___lcd_cmd
  3359 ;; This function is called by:
  3360 ;;		_main
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           
  3365                           ;psect for function _LCD_Init
  3366  04D5                     _LCD_Init:
  3367  04D5                     l1737:	
  3368                           ;incstack = 0
  3369                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  3370                           
  3371                           
  3372                           ;main.c: 160:     _delay((unsigned long)((50)*(4000000UL/4000.0)));
  3373  04D5  3041               	movlw	65
  3374  04D6  00F5               	movwf	??_LCD_Init+1
  3375  04D7  30EE               	movlw	238
  3376  04D8  00F4               	movwf	??_LCD_Init
  3377  04D9                     u1837:
  3378  04D9  0BF4               	decfsz	??_LCD_Init,f
  3379  04DA  2CD9               	goto	u1837
  3380  04DB  0BF5               	decfsz	??_LCD_Init+1,f
  3381  04DC  2CD9               	goto	u1837
  3382  04DD  0000               	nop
  3383  04DE                     l1739:
  3384                           
  3385                           ;main.c: 162:     __lcd_cmd(0x03);
  3386  04DE  3003               	movlw	3
  3387  04DF  118A  27B3  118A   	fcall	___lcd_cmd
  3388  04E2                     l1741:
  3389                           
  3390                           ;main.c: 163:     _delay((unsigned long)((5)*(4000000UL/4000.0)));
  3391  04E2  3007               	movlw	7
  3392  04E3  00F5               	movwf	??_LCD_Init+1
  3393  04E4  307D               	movlw	125
  3394  04E5  00F4               	movwf	??_LCD_Init
  3395  04E6                     u1847:
  3396  04E6  0BF4               	decfsz	??_LCD_Init,f
  3397  04E7  2CE6               	goto	u1847
  3398  04E8  0BF5               	decfsz	??_LCD_Init+1,f
  3399  04E9  2CE6               	goto	u1847
  3400                           
  3401                           ;main.c: 166:     __lcd_cmd(0x03);
  3402  04EA  3003               	movlw	3
  3403  04EB  118A  27B3  118A   	fcall	___lcd_cmd
  3404  04EE                     l1743:
  3405                           
  3406                           ;main.c: 167:     _delay((unsigned long)((120)*(4000000UL/4000000.0)));
  3407  04EE  3027               	movlw	39
  3408  04EF  00F4               	movwf	??_LCD_Init
  3409  04F0                     u1857:
  3410  04F0  0BF4               	decfsz	??_LCD_Init,f
  3411  04F1  2CF0               	goto	u1857
  3412  04F2  2CF3               	nop2
  3413  04F3                     l1745:
  3414                           
  3415                           ;main.c: 170:     __lcd_cmd(0x03);
  3416  04F3  3003               	movlw	3
  3417  04F4  118A  27B3  118A   	fcall	___lcd_cmd
  3418  04F7                     l1747:
  3419                           
  3420                           ;main.c: 173:     __lcd_cmd(0x02);
  3421  04F7  3002               	movlw	2
  3422  04F8  118A  27B3  118A   	fcall	___lcd_cmd
  3423  04FB                     l1749:
  3424                           
  3425                           ;main.c: 177:     __lcd_cmd(0x02);
  3426  04FB  3002               	movlw	2
  3427  04FC  118A  27B3  118A   	fcall	___lcd_cmd
  3428  04FF                     l1751:
  3429                           
  3430                           ;main.c: 178:     __lcd_cmd(0x08);
  3431  04FF  3008               	movlw	8
  3432  0500  118A  27B3  118A   	fcall	___lcd_cmd
  3433  0503                     l1753:
  3434                           
  3435                           ;main.c: 181:     __lcd_cmd(0x00);
  3436  0503  3000               	movlw	0
  3437  0504  118A  27B3  118A   	fcall	___lcd_cmd
  3438  0507                     l1755:
  3439                           
  3440                           ;main.c: 182:     __lcd_cmd(0x08);
  3441  0507  3008               	movlw	8
  3442  0508  118A  27B3  118A   	fcall	___lcd_cmd
  3443  050B                     l1757:
  3444                           
  3445                           ;main.c: 185:     __lcd_cmd(0x00);
  3446  050B  3000               	movlw	0
  3447  050C  118A  27B3  118A   	fcall	___lcd_cmd
  3448  050F                     l1759:
  3449                           
  3450                           ;main.c: 186:     __lcd_cmd(0x01);
  3451  050F  3001               	movlw	1
  3452  0510  118A  27B3  118A   	fcall	___lcd_cmd
  3453  0513                     l1761:
  3454                           
  3455                           ;main.c: 189:     __lcd_cmd(0x00);
  3456  0513  3000               	movlw	0
  3457  0514  118A  27B3  118A   	fcall	___lcd_cmd
  3458  0517                     l1763:
  3459                           
  3460                           ;main.c: 190:     __lcd_cmd(0x06);
  3461  0517  3006               	movlw	6
  3462  0518  118A  27B3  118A   	fcall	___lcd_cmd
  3463  051B                     l103:
  3464  051B  0008               	return
  3465  051C                     __end_of_LCD_Init:
  3466                           
  3467                           	psect	text10
  3468  03DD                     __ptext10:	
  3469 ;; *************** function _Draw_settings_display *****************
  3470 ;; Defined at:
  3471 ;;		line 251 in file "main.c"
  3472 ;; Parameters:    Size  Location     Type
  3473 ;;  ctr             2    0[BANK0 ] int 
  3474 ;; Auto vars:     Size  Location     Type
  3475 ;;		None
  3476 ;; Return value:  Size  Location     Type
  3477 ;;                  1    wreg      void 
  3478 ;; Registers used:
  3479 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3480 ;; Tracked objects:
  3481 ;;		On entry : 0/0
  3482 ;;		On exit  : 0/0
  3483 ;;		Unchanged: 0/0
  3484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3485 ;;      Params:         0       2       0       0
  3486 ;;      Locals:         0       0       0       0
  3487 ;;      Temps:          0       0       0       0
  3488 ;;      Totals:         0       2       0       0
  3489 ;;Total ram usage:        2 bytes
  3490 ;; Hardware stack levels used:    1
  3491 ;; Hardware stack levels required when called:    5
  3492 ;; This function calls:
  3493 ;;		_LCD_display_clear
  3494 ;;		_LCD_send_string
  3495 ;;		_LCD_set_cursor
  3496 ;;		___lcd_send_char
  3497 ;; This function is called by:
  3498 ;;		_main
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502                           
  3503                           ;psect for function _Draw_settings_display
  3504  03DD                     _Draw_settings_display:
  3505  03DD                     l1793:	
  3506                           ;incstack = 0
  3507                           ; Regs used in _Draw_settings_display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3508                           
  3509                           
  3510                           ;main.c: 251: void Draw_settings_display(ctr);main.c: 252: {;main.c: 253:     if(ctr == 
      +                          0)
  3511  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  3512  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  3513  03DF  0846               	movf	Draw_settings_display@ctr,w
  3514  03E0  0447               	iorwf	Draw_settings_display@ctr+1,w
  3515  03E1  1D03               	btfss	3,2
  3516  03E2  2BE4               	goto	u1261
  3517  03E3  2BE5               	goto	u1260
  3518  03E4                     u1261:
  3519  03E4  2BFF               	goto	l1801
  3520  03E5                     u1260:
  3521  03E5                     l1795:
  3522                           
  3523                           ;main.c: 254:     {;main.c: 255:         LCD_display_clear();
  3524  03E5  118A  277D  118A   	fcall	_LCD_display_clear
  3525                           
  3526                           ;main.c: 256:         LCD_set_cursor(0,0);
  3527  03E8  01F4               	clrf	LCD_set_cursor@column
  3528  03E9  3000               	movlw	0
  3529  03EA  118A  272D  118A   	fcall	_LCD_set_cursor
  3530                           
  3531                           ;main.c: 257:         __lcd_send_char(0x7E);
  3532  03ED  307E               	movlw	126
  3533  03EE  118A  26C2  118A   	fcall	___lcd_send_char
  3534  03F1                     l1797:
  3535                           
  3536                           ;main.c: 258:         LCD_send_string(s_time);
  3537  03F1  3039               	movlw	(low (_s_time| 0))& (0+255)
  3538  03F2  118A  274A  118A   	fcall	_LCD_send_string
  3539  03F5                     l1799:
  3540                           
  3541                           ;main.c: 259:         LCD_set_cursor(1,0);
  3542  03F5  01F4               	clrf	LCD_set_cursor@column
  3543  03F6  3001               	movlw	1
  3544  03F7  118A  272D  118A   	fcall	_LCD_set_cursor
  3545                           
  3546                           ;main.c: 260:         LCD_send_string(s_date);
  3547  03FA  3034               	movlw	(low (_s_date| 0))& (0+255)
  3548  03FB  118A  274A  118A   	fcall	_LCD_send_string
  3549                           
  3550                           ;main.c: 261:     }
  3551  03FE  2C61               	goto	l165
  3552  03FF                     l1801:
  3553  03FF  0346               	decf	Draw_settings_display@ctr,w
  3554  0400  0447               	iorwf	Draw_settings_display@ctr+1,w
  3555  0401  1D03               	btfss	3,2
  3556  0402  2C04               	goto	u1271
  3557  0403  2C05               	goto	u1270
  3558  0404                     u1271:
  3559  0404  2C1F               	goto	l1809
  3560  0405                     u1270:
  3561  0405                     l1803:
  3562                           
  3563                           ;main.c: 263:     {;main.c: 264:         LCD_display_clear();
  3564  0405  118A  277D  118A   	fcall	_LCD_display_clear
  3565                           
  3566                           ;main.c: 265:         LCD_set_cursor(0,0);
  3567  0408  01F4               	clrf	LCD_set_cursor@column
  3568  0409  3000               	movlw	0
  3569  040A  118A  272D  118A   	fcall	_LCD_set_cursor
  3570                           
  3571                           ;main.c: 266:         __lcd_send_char(0x7E);
  3572  040D  307E               	movlw	126
  3573  040E  118A  26C2  118A   	fcall	___lcd_send_char
  3574  0411                     l1805:
  3575                           
  3576                           ;main.c: 267:         LCD_send_string(s_date);
  3577  0411  3034               	movlw	(low (_s_date| 0))& (0+255)
  3578  0412  118A  274A  118A   	fcall	_LCD_send_string
  3579  0415                     l1807:
  3580                           
  3581                           ;main.c: 268:         LCD_set_cursor(1,0);
  3582  0415  01F4               	clrf	LCD_set_cursor@column
  3583  0416  3001               	movlw	1
  3584  0417  118A  272D  118A   	fcall	_LCD_set_cursor
  3585                           
  3586                           ;main.c: 269:         LCD_send_string(s_temp);
  3587  041A  30B1               	movlw	(low (_s_temp| 0))& (0+255)
  3588  041B  118A  274A  118A   	fcall	_LCD_send_string
  3589                           
  3590                           ;main.c: 270:     }
  3591  041E  2C61               	goto	l165
  3592  041F                     l1809:
  3593  041F  3002               	movlw	2
  3594  0420  0646               	xorwf	Draw_settings_display@ctr,w
  3595  0421  0447               	iorwf	Draw_settings_display@ctr+1,w
  3596  0422  1D03               	btfss	3,2
  3597  0423  2C25               	goto	u1281
  3598  0424  2C26               	goto	u1280
  3599  0425                     u1281:
  3600  0425  2C40               	goto	l1817
  3601  0426                     u1280:
  3602  0426                     l1811:
  3603                           
  3604                           ;main.c: 272:     {;main.c: 273:         LCD_display_clear();
  3605  0426  118A  277D  118A   	fcall	_LCD_display_clear
  3606                           
  3607                           ;main.c: 274:         LCD_set_cursor(0,0);
  3608  0429  01F4               	clrf	LCD_set_cursor@column
  3609  042A  3000               	movlw	0
  3610  042B  118A  272D  118A   	fcall	_LCD_set_cursor
  3611                           
  3612                           ;main.c: 275:         __lcd_send_char(0x7E);
  3613  042E  307E               	movlw	126
  3614  042F  118A  26C2  118A   	fcall	___lcd_send_char
  3615  0432                     l1813:
  3616                           
  3617                           ;main.c: 276:         LCD_send_string(s_temp);
  3618  0432  30B1               	movlw	(low (_s_temp| 0))& (0+255)
  3619  0433  118A  274A  118A   	fcall	_LCD_send_string
  3620  0436                     l1815:
  3621                           
  3622                           ;main.c: 277:         LCD_set_cursor(1,0);
  3623  0436  01F4               	clrf	LCD_set_cursor@column
  3624  0437  3001               	movlw	1
  3625  0438  118A  272D  118A   	fcall	_LCD_set_cursor
  3626                           
  3627                           ;main.c: 278:         LCD_send_string(s_humi);
  3628  043B  30C6               	movlw	(low (_s_humi| 0))& (0+255)
  3629  043C  118A  274A  118A   	fcall	_LCD_send_string
  3630                           
  3631                           ;main.c: 279:     }
  3632  043F  2C61               	goto	l165
  3633  0440                     l1817:
  3634  0440  3003               	movlw	3
  3635  0441  0646               	xorwf	Draw_settings_display@ctr,w
  3636  0442  0447               	iorwf	Draw_settings_display@ctr+1,w
  3637  0443  1D03               	btfss	3,2
  3638  0444  2C46               	goto	u1291
  3639  0445  2C47               	goto	u1290
  3640  0446                     u1291:
  3641  0446  2C61               	goto	l161
  3642  0447                     u1290:
  3643  0447                     l1819:
  3644                           
  3645                           ;main.c: 281:     {;main.c: 282:         LCD_display_clear();
  3646  0447  118A  277D  118A   	fcall	_LCD_display_clear
  3647                           
  3648                           ;main.c: 283:         LCD_set_cursor(0,0);
  3649  044A  01F4               	clrf	LCD_set_cursor@column
  3650  044B  3000               	movlw	0
  3651  044C  118A  272D  118A   	fcall	_LCD_set_cursor
  3652                           
  3653                           ;main.c: 284:         __lcd_send_char(0x7E);
  3654  044F  307E               	movlw	126
  3655  0450  118A  26C2  118A   	fcall	___lcd_send_char
  3656  0453                     l1821:
  3657                           
  3658                           ;main.c: 285:         LCD_send_string(s_humi);
  3659  0453  30C6               	movlw	(low (_s_humi| 0))& (0+255)
  3660  0454  118A  274A  118A   	fcall	_LCD_send_string
  3661  0457                     l1823:
  3662                           
  3663                           ;main.c: 286:         LCD_set_cursor(1,0);
  3664  0457  01F4               	clrf	LCD_set_cursor@column
  3665  0458  3001               	movlw	1
  3666  0459  118A  272D  118A   	fcall	_LCD_set_cursor
  3667                           
  3668                           ;main.c: 287:         LCD_send_string(s_end);
  3669  045C  30A0               	movlw	(low (_s_end| 0))& (0+255)
  3670  045D  118A  274A  118A   	fcall	_LCD_send_string
  3671  0460  2C61               	goto	l165
  3672  0461                     l161:
  3673  0461                     l165:
  3674  0461  0008               	return
  3675  0462                     __end_of_Draw_settings_display:
  3676                           
  3677                           	psect	text11
  3678  066E                     __ptext11:	
  3679 ;; *************** function _Draw_main_display_p2 *****************
  3680 ;; Defined at:
  3681 ;;		line 239 in file "main.c"
  3682 ;; Parameters:    Size  Location     Type
  3683 ;;		None
  3684 ;; Auto vars:     Size  Location     Type
  3685 ;;		None
  3686 ;; Return value:  Size  Location     Type
  3687 ;;                  1    wreg      void 
  3688 ;; Registers used:
  3689 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3690 ;; Tracked objects:
  3691 ;;		On entry : 0/0
  3692 ;;		On exit  : 0/0
  3693 ;;		Unchanged: 0/0
  3694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3695 ;;      Params:         0       0       0       0
  3696 ;;      Locals:         0       0       0       0
  3697 ;;      Temps:          1       0       0       0
  3698 ;;      Totals:         1       0       0       0
  3699 ;;Total ram usage:        1 bytes
  3700 ;; Hardware stack levels used:    1
  3701 ;; Hardware stack levels required when called:    5
  3702 ;; This function calls:
  3703 ;;		_LCD_display_clear
  3704 ;;		_LCD_send_string
  3705 ;;		_LCD_set_cursor
  3706 ;; This function is called by:
  3707 ;;		_main
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711                           
  3712                           ;psect for function _Draw_main_display_p2
  3713  066E                     _Draw_main_display_p2:
  3714  066E                     l1781:	
  3715                           ;incstack = 0
  3716                           ; Regs used in _Draw_main_display_p2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3717                           
  3718                           
  3719                           ;main.c: 241:     LCD_display_clear();
  3720  066E  118A  277D  118A   	fcall	_LCD_display_clear
  3721                           
  3722                           ;main.c: 242:     LCD_set_cursor(0,0);
  3723  0671  01F4               	clrf	LCD_set_cursor@column
  3724  0672  3000               	movlw	0
  3725  0673  118A  272D  118A   	fcall	_LCD_set_cursor
  3726  0676                     l1783:
  3727                           
  3728                           ;main.c: 243:     LCD_send_string(l_time);
  3729  0676  302F               	movlw	(low (_l_time| 0))& (0+255)
  3730  0677  118A  274A  118A   	fcall	_LCD_send_string
  3731  067A                     l1785:
  3732                           
  3733                           ;main.c: 244:     LCD_set_cursor(0,11);
  3734  067A  300B               	movlw	11
  3735  067B  00FB               	movwf	??_Draw_main_display_p2
  3736  067C  087B               	movf	??_Draw_main_display_p2,w
  3737  067D  00F4               	movwf	LCD_set_cursor@column
  3738  067E  3000               	movlw	0
  3739  067F  118A  272D  118A   	fcall	_LCD_set_cursor
  3740                           
  3741                           ;main.c: 245:     LCD_send_string(time);
  3742  0682  3024               	movlw	(low (_time| 0))& (0+255)
  3743  0683  118A  274A  118A   	fcall	_LCD_send_string
  3744  0686                     l1787:
  3745                           
  3746                           ;main.c: 246:     LCD_set_cursor(1,0);
  3747  0686  01F4               	clrf	LCD_set_cursor@column
  3748  0687  3001               	movlw	1
  3749  0688  118A  272D  118A   	fcall	_LCD_set_cursor
  3750  068B                     l1789:
  3751                           
  3752                           ;main.c: 247:     LCD_send_string(l_date);
  3753  068B  30DE               	movlw	(low (_l_date| 0))& (0+255)
  3754  068C  118A  274A  118A   	fcall	_LCD_send_string
  3755                           
  3756                           ;main.c: 248:     LCD_set_cursor(1,8);
  3757  068F  3008               	movlw	8
  3758  0690  00FB               	movwf	??_Draw_main_display_p2
  3759  0691  087B               	movf	??_Draw_main_display_p2,w
  3760  0692  00F4               	movwf	LCD_set_cursor@column
  3761  0693  3001               	movlw	1
  3762  0694  118A  272D  118A   	fcall	_LCD_set_cursor
  3763  0697                     l1791:
  3764                           
  3765                           ;main.c: 249:     LCD_send_string(date);
  3766  0697  30BD               	movlw	(low (_date| 0))& (0+255)
  3767  0698  118A  274A  118A   	fcall	_LCD_send_string
  3768  069B                     l155:
  3769  069B  0008               	return
  3770  069C                     __end_of_Draw_main_display_p2:
  3771                           
  3772                           	psect	text12
  3773  077D                     __ptext12:	
  3774 ;; *************** function _LCD_display_clear *****************
  3775 ;; Defined at:
  3776 ;;		line 149 in file "main.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;		None
  3779 ;; Auto vars:     Size  Location     Type
  3780 ;;  i               1    9[COMMON] unsigned char 
  3781 ;; Return value:  Size  Location     Type
  3782 ;;                  1    wreg      void 
  3783 ;; Registers used:
  3784 ;;		wreg, status,2, status,0, pclath, cstack
  3785 ;; Tracked objects:
  3786 ;;		On entry : 0/0
  3787 ;;		On exit  : 0/0
  3788 ;;		Unchanged: 0/0
  3789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3790 ;;      Params:         0       0       0       0
  3791 ;;      Locals:         1       0       0       0
  3792 ;;      Temps:          1       0       0       0
  3793 ;;      Totals:         2       0       0       0
  3794 ;;Total ram usage:        2 bytes
  3795 ;; Hardware stack levels used:    1
  3796 ;; Hardware stack levels required when called:    4
  3797 ;; This function calls:
  3798 ;;		_LCD_set_cursor
  3799 ;;		___lcd_send_char
  3800 ;; This function is called by:
  3801 ;;		_Draw_main_display_p2
  3802 ;;		_Draw_settings_display
  3803 ;;		_set_temp
  3804 ;;		_set_humi
  3805 ;;		_set_time
  3806 ;;		_main
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810                           
  3811                           ;psect for function _LCD_display_clear
  3812  077D                     _LCD_display_clear:
  3813  077D                     l1621:	
  3814                           ;incstack = 0
  3815                           ; Regs used in _LCD_display_clear: [wreg+status,2+status,0+pclath+cstack]
  3816                           
  3817  077D                     l1623:
  3818                           
  3819                           ;main.c: 152:     LCD_set_cursor(0,0);
  3820  077D  01F4               	clrf	LCD_set_cursor@column
  3821  077E  3000               	movlw	0
  3822  077F  118A  272D  118A   	fcall	_LCD_set_cursor
  3823  0782                     l1625:
  3824                           
  3825                           ;main.c: 153:     for(i = 0;i < 80;i++)
  3826  0782  01F9               	clrf	LCD_display_clear@i
  3827  0783                     l1631:
  3828                           
  3829                           ;main.c: 154:     {;main.c: 155:         __lcd_send_char(0x20);
  3830  0783  3020               	movlw	32
  3831  0784  118A  26C2  118A   	fcall	___lcd_send_char
  3832  0787                     l1633:
  3833                           
  3834                           ;main.c: 156:     }
  3835  0787  3001               	movlw	1
  3836  0788  00F8               	movwf	??_LCD_display_clear
  3837  0789  0878               	movf	??_LCD_display_clear,w
  3838  078A  07F9               	addwf	LCD_display_clear@i,f
  3839  078B                     l1635:
  3840  078B  3050               	movlw	80
  3841  078C  0279               	subwf	LCD_display_clear@i,w
  3842  078D  1C03               	skipc
  3843  078E  2F90               	goto	u1131
  3844  078F  2F91               	goto	u1130
  3845  0790                     u1131:
  3846  0790  2F83               	goto	l1631
  3847  0791                     u1130:
  3848  0791                     l100:
  3849  0791  0008               	return
  3850  0792                     __end_of_LCD_display_clear:
  3851                           
  3852                           	psect	text13
  3853  0638                     __ptext13:	
  3854 ;; *************** function _Draw_main_display_p1 *****************
  3855 ;; Defined at:
  3856 ;;		line 224 in file "main.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;		None
  3859 ;; Auto vars:     Size  Location     Type
  3860 ;;		None
  3861 ;; Return value:  Size  Location     Type
  3862 ;;                  1    wreg      void 
  3863 ;; Registers used:
  3864 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3865 ;; Tracked objects:
  3866 ;;		On entry : 0/0
  3867 ;;		On exit  : 0/0
  3868 ;;		Unchanged: 0/0
  3869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3870 ;;      Params:         0       0       0       0
  3871 ;;      Locals:         0       0       0       0
  3872 ;;      Temps:          1       0       0       0
  3873 ;;      Totals:         1       0       0       0
  3874 ;;Total ram usage:        1 bytes
  3875 ;; Hardware stack levels used:    1
  3876 ;; Hardware stack levels required when called:    4
  3877 ;; This function calls:
  3878 ;;		_LCD_send_string
  3879 ;;		_LCD_set_cursor
  3880 ;;		___lcd_send_char
  3881 ;; This function is called by:
  3882 ;;		_main
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886                           
  3887                           ;psect for function _Draw_main_display_p1
  3888  0638                     _Draw_main_display_p1:
  3889  0638                     l1765:	
  3890                           ;incstack = 0
  3891                           ; Regs used in _Draw_main_display_p1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3892                           
  3893                           
  3894                           ;main.c: 226:     LCD_send_string(l_temp);
  3895  0638  30D9               	movlw	(low (_l_temp| 0))& (0+255)
  3896  0639  118A  274A  118A   	fcall	_LCD_send_string
  3897  063C                     l1767:
  3898                           
  3899                           ;main.c: 227:     LCD_set_cursor(0,7);
  3900  063C  3007               	movlw	7
  3901  063D  00FB               	movwf	??_Draw_main_display_p1
  3902  063E  087B               	movf	??_Draw_main_display_p1,w
  3903  063F  00F4               	movwf	LCD_set_cursor@column
  3904  0640  3000               	movlw	0
  3905  0641  118A  272D  118A   	fcall	_LCD_set_cursor
  3906  0644                     l1769:
  3907                           
  3908                           ;main.c: 228:     LCD_send_string(current_temp);
  3909  0644  30CF               	movlw	(low (_current_temp| 0))& (0+255)
  3910  0645  118A  274A  118A   	fcall	_LCD_send_string
  3911                           
  3912                           ;main.c: 229:     __lcd_send_char(0x7E);
  3913  0648  307E               	movlw	126
  3914  0649  118A  26C2  118A   	fcall	___lcd_send_char
  3915  064C                     l1771:
  3916                           
  3917                           ;main.c: 230:     LCD_send_string(update_temp);
  3918  064C  302A               	movlw	(low (_update_temp| 0))& (0+255)
  3919  064D  118A  274A  118A   	fcall	_LCD_send_string
  3920  0650                     l1773:
  3921                           
  3922                           ;main.c: 232:     LCD_set_cursor(1,0);
  3923  0650  01F4               	clrf	LCD_set_cursor@column
  3924  0651  3001               	movlw	1
  3925  0652  118A  272D  118A   	fcall	_LCD_set_cursor
  3926                           
  3927                           ;main.c: 233:     LCD_send_string(l_humi);
  3928  0655  30D4               	movlw	(low (_l_humi| 0))& (0+255)
  3929  0656  118A  274A  118A   	fcall	_LCD_send_string
  3930  0659                     l1775:
  3931                           
  3932                           ;main.c: 234:     LCD_set_cursor(1,9);
  3933  0659  3009               	movlw	9
  3934  065A  00FB               	movwf	??_Draw_main_display_p1
  3935  065B  087B               	movf	??_Draw_main_display_p1,w
  3936  065C  00F4               	movwf	LCD_set_cursor@column
  3937  065D  3001               	movlw	1
  3938  065E  118A  272D  118A   	fcall	_LCD_set_cursor
  3939  0661                     l1777:
  3940                           
  3941                           ;main.c: 235:     LCD_send_string(current_humi);
  3942  0661  3042               	movlw	(low (_current_humi| 0))& (0+255)
  3943  0662  118A  274A  118A   	fcall	_LCD_send_string
  3944                           
  3945                           ;main.c: 236:     __lcd_send_char(0x7E);
  3946  0665  307E               	movlw	126
  3947  0666  118A  26C2  118A   	fcall	___lcd_send_char
  3948  0669                     l1779:
  3949                           
  3950                           ;main.c: 237:     LCD_send_string(update_humi);
  3951  0669  303E               	movlw	(low (_update_humi| 0))& (0+255)
  3952  066A  118A  274A  118A   	fcall	_LCD_send_string
  3953  066D                     l152:
  3954  066D  0008               	return
  3955  066E                     __end_of_Draw_main_display_p1:
  3956                           
  3957                           	psect	text14
  3958  072D                     __ptext14:	
  3959 ;; *************** function _LCD_set_cursor *****************
  3960 ;; Defined at:
  3961 ;;		line 136 in file "main.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;  row             1    wreg     unsigned char 
  3964 ;;  column          1    4[COMMON] unsigned char 
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;  row             1    7[COMMON] unsigned char 
  3967 ;;  temp            1    6[COMMON] unsigned char 
  3968 ;; Return value:  Size  Location     Type
  3969 ;;                  1    wreg      void 
  3970 ;; Registers used:
  3971 ;;		wreg, status,2, status,0, pclath, cstack
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3977 ;;      Params:         1       0       0       0
  3978 ;;      Locals:         2       0       0       0
  3979 ;;      Temps:          1       0       0       0
  3980 ;;      Totals:         4       0       0       0
  3981 ;;Total ram usage:        4 bytes
  3982 ;; Hardware stack levels used:    1
  3983 ;; Hardware stack levels required when called:    3
  3984 ;; This function calls:
  3985 ;;		___lcd_cmd
  3986 ;; This function is called by:
  3987 ;;		_LCD_display_clear
  3988 ;;		_Draw_main_display_p1
  3989 ;;		_Draw_main_display_p2
  3990 ;;		_Draw_settings_display
  3991 ;;		_set_temp
  3992 ;;		_set_humi
  3993 ;;		_set_time
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           
  3998                           ;psect for function _LCD_set_cursor
  3999  072D                     _LCD_set_cursor:
  4000                           
  4001                           ;incstack = 0
  4002                           ; Regs used in _LCD_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  4003                           ;LCD_set_cursor@row stored from wreg
  4004  072D  00F7               	movwf	LCD_set_cursor@row
  4005  072E                     l1553:
  4006                           
  4007                           ;main.c: 136: void LCD_set_cursor(uint8_t row, uint8_t column);main.c: 137: {;main.c: 13
      +                          8:     if(row == 0)
  4008  072E  0877               	movf	LCD_set_cursor@row,w
  4009  072F  1D03               	btfss	3,2
  4010  0730  2F32               	goto	u971
  4011  0731  2F33               	goto	u970
  4012  0732                     u971:
  4013  0732  2F38               	goto	l1557
  4014  0733                     u970:
  4015  0733                     l1555:
  4016                           
  4017                           ;main.c: 139:     {;main.c: 140:         __lcd_cmd(0x08);
  4018  0733  3008               	movlw	8
  4019  0734  118A  27B3  118A   	fcall	___lcd_cmd
  4020                           
  4021                           ;main.c: 141:     }
  4022  0737  2F41               	goto	l1561
  4023  0738                     l1557:
  4024  0738  0377               	decf	LCD_set_cursor@row,w
  4025  0739  1D03               	btfss	3,2
  4026  073A  2F3C               	goto	u981
  4027  073B  2F3D               	goto	u980
  4028  073C                     u981:
  4029  073C  2F41               	goto	l1561
  4030  073D                     u980:
  4031  073D                     l1559:
  4032                           
  4033                           ;main.c: 143:     {;main.c: 144:         __lcd_cmd(0x0C);
  4034  073D  300C               	movlw	12
  4035  073E  118A  27B3  118A   	fcall	___lcd_cmd
  4036  0741                     l1561:
  4037                           
  4038                           ;main.c: 146:     uint8_t temp = column;
  4039  0741  0874               	movf	LCD_set_cursor@column,w
  4040  0742  00F5               	movwf	??_LCD_set_cursor
  4041  0743  0875               	movf	??_LCD_set_cursor,w
  4042  0744  00F6               	movwf	LCD_set_cursor@temp
  4043  0745                     l1563:
  4044                           
  4045                           ;main.c: 147:     __lcd_cmd(temp);
  4046  0745  0876               	movf	LCD_set_cursor@temp,w
  4047  0746  118A  27B3  118A   	fcall	___lcd_cmd
  4048  0749                     l95:
  4049  0749  0008               	return
  4050  074A                     __end_of_LCD_set_cursor:
  4051                           
  4052                           	psect	text15
  4053  07B3                     __ptext15:	
  4054 ;; *************** function ___lcd_cmd *****************
  4055 ;; Defined at:
  4056 ;;		line 70 in file "main.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;  cmd             1    wreg     unsigned char 
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;  cmd             1    3[COMMON] unsigned char 
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  1    wreg      void 
  4063 ;; Registers used:
  4064 ;;		wreg, status,2, status,0, pclath, cstack
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4070 ;;      Params:         0       0       0       0
  4071 ;;      Locals:         1       0       0       0
  4072 ;;      Temps:          0       0       0       0
  4073 ;;      Totals:         1       0       0       0
  4074 ;;Total ram usage:        1 bytes
  4075 ;; Hardware stack levels used:    1
  4076 ;; Hardware stack levels required when called:    2
  4077 ;; This function calls:
  4078 ;;		___lcd_en_pulse
  4079 ;;		___lcd_port_write
  4080 ;; This function is called by:
  4081 ;;		_LCD_display_ctrl
  4082 ;;		_LCD_set_cursor
  4083 ;;		_LCD_Init
  4084 ;;		___lcd_shift_display
  4085 ;; This function uses a non-reentrant model
  4086 ;;
  4087                           
  4088                           
  4089                           ;psect for function ___lcd_cmd
  4090  07B3                     ___lcd_cmd:
  4091                           
  4092                           ;incstack = 0
  4093                           ; Regs used in ___lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  4094                           ;___lcd_cmd@cmd stored from wreg
  4095  07B3  00F3               	movwf	___lcd_cmd@cmd
  4096  07B4                     l1533:
  4097                           
  4098                           ;main.c: 70: void __lcd_cmd(uint8_t cmd);main.c: 71: {;main.c: 72:     RA5 = 0;
  4099  07B4  1283               	bcf	3,5	;RP0=0, select bank0
  4100  07B5  1303               	bcf	3,6	;RP1=0, select bank0
  4101  07B6  1285               	bcf	5,5	;volatile
  4102  07B7                     l1535:
  4103                           
  4104                           ;main.c: 73:     __lcd_port_write(cmd);
  4105  07B7  0873               	movf	___lcd_cmd@cmd,w
  4106  07B8  118A  270B  118A   	fcall	___lcd_port_write
  4107                           
  4108                           ;main.c: 74:     __lcd_en_pulse();
  4109  07BB  118A  27A3  118A   	fcall	___lcd_en_pulse
  4110  07BE                     l68:
  4111  07BE  0008               	return
  4112  07BF                     __end_of___lcd_cmd:
  4113                           
  4114                           	psect	text16
  4115  074A                     __ptext16:	
  4116 ;; *************** function _LCD_send_string *****************
  4117 ;; Defined at:
  4118 ;;		line 91 in file "main.c"
  4119 ;; Parameters:    Size  Location     Type
  4120 ;;  string          1    wreg     PTR unsigned char 
  4121 ;;		 -> s_end(17), s_humi(9), s_temp(12), s_date(5), 
  4122 ;;		 -> s_time(5), date(9), l_date(5), time(6), 
  4123 ;;		 -> l_time(5), update_humi(4), current_humi(4), l_humi(5), 
  4124 ;;		 -> update_temp(5), current_temp(5), l_temp(5), 
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;  string          1   10[COMMON] PTR unsigned char 
  4127 ;;		 -> s_end(17), s_humi(9), s_temp(12), s_date(5), 
  4128 ;;		 -> s_time(5), date(9), l_date(5), time(6), 
  4129 ;;		 -> l_time(5), update_humi(4), current_humi(4), l_humi(5), 
  4130 ;;		 -> update_temp(5), current_temp(5), l_temp(5), 
  4131 ;;  i               1    9[COMMON] unsigned char 
  4132 ;; Return value:  Size  Location     Type
  4133 ;;                  1    wreg      void 
  4134 ;; Registers used:
  4135 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4136 ;; Tracked objects:
  4137 ;;		On entry : 0/0
  4138 ;;		On exit  : 0/0
  4139 ;;		Unchanged: 0/0
  4140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4141 ;;      Params:         0       0       0       0
  4142 ;;      Locals:         2       0       0       0
  4143 ;;      Temps:          1       0       0       0
  4144 ;;      Totals:         3       0       0       0
  4145 ;;Total ram usage:        3 bytes
  4146 ;; Hardware stack levels used:    1
  4147 ;; Hardware stack levels required when called:    3
  4148 ;; This function calls:
  4149 ;;		___lcd_send_char
  4150 ;; This function is called by:
  4151 ;;		_Draw_main_display_p1
  4152 ;;		_Draw_main_display_p2
  4153 ;;		_Draw_settings_display
  4154 ;;		_set_temp
  4155 ;;		_set_humi
  4156 ;;		_set_time
  4157 ;; This function uses a non-reentrant model
  4158 ;;
  4159                           
  4160                           
  4161                           ;psect for function _LCD_send_string
  4162  074A                     _LCD_send_string:
  4163                           
  4164                           ;incstack = 0
  4165                           ; Regs used in _LCD_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4166                           ;LCD_send_string@string stored from wreg
  4167  074A  00FA               	movwf	LCD_send_string@string
  4168  074B                     l1613:
  4169                           
  4170                           ;main.c: 91: void LCD_send_string(uint8_t string[]);main.c: 92: {;main.c: 93:     uint8_
      +                          t i = 0;
  4171  074B  01F9               	clrf	LCD_send_string@i
  4172                           
  4173                           ;main.c: 94:     for(i = 0;string[i]!='\0';i++)
  4174  074C  01F9               	clrf	LCD_send_string@i
  4175  074D  2F5B               	goto	l1619
  4176  074E                     l1615:
  4177                           
  4178                           ;main.c: 95:     {;main.c: 96:         __lcd_send_char(string[i]);
  4179  074E  0879               	movf	LCD_send_string@i,w
  4180  074F  077A               	addwf	LCD_send_string@string,w
  4181  0750  00F8               	movwf	??_LCD_send_string
  4182  0751  0878               	movf	??_LCD_send_string,w
  4183  0752  0084               	movwf	4
  4184  0753  0800               	movf	0,w
  4185  0754  118A  26C2  118A   	fcall	___lcd_send_char
  4186  0757                     l1617:
  4187                           
  4188                           ;main.c: 97:     }
  4189  0757  3001               	movlw	1
  4190  0758  00F8               	movwf	??_LCD_send_string
  4191  0759  0878               	movf	??_LCD_send_string,w
  4192  075A  07F9               	addwf	LCD_send_string@i,f
  4193  075B                     l1619:
  4194  075B  0879               	movf	LCD_send_string@i,w
  4195  075C  077A               	addwf	LCD_send_string@string,w
  4196  075D  00F8               	movwf	??_LCD_send_string
  4197  075E  0878               	movf	??_LCD_send_string,w
  4198  075F  0084               	movwf	4
  4199  0760  1383               	bcf	3,7	;select IRP bank0
  4200  0761  0800               	movf	0,w
  4201  0762  1D03               	btfss	3,2
  4202  0763  2F65               	goto	u1121
  4203  0764  2F66               	goto	u1120
  4204  0765                     u1121:
  4205  0765  2F4E               	goto	l1615
  4206  0766                     u1120:
  4207  0766                     l77:
  4208  0766  0008               	return
  4209  0767                     __end_of_LCD_send_string:
  4210                           
  4211                           	psect	text17
  4212  06C2                     __ptext17:	
  4213 ;; *************** function ___lcd_send_char *****************
  4214 ;; Defined at:
  4215 ;;		line 77 in file "main.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;  ascii           1    wreg     unsigned char 
  4218 ;; Auto vars:     Size  Location     Type
  4219 ;;  ascii           1    7[COMMON] unsigned char 
  4220 ;;  low             1    6[COMMON] unsigned char 
  4221 ;;  high            1    5[COMMON] unsigned char 
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  1    wreg      void 
  4224 ;; Registers used:
  4225 ;;		wreg, status,2, status,0, pclath, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4231 ;;      Params:         0       0       0       0
  4232 ;;      Locals:         3       0       0       0
  4233 ;;      Temps:          2       0       0       0
  4234 ;;      Totals:         5       0       0       0
  4235 ;;Total ram usage:        5 bytes
  4236 ;; Hardware stack levels used:    1
  4237 ;; Hardware stack levels required when called:    2
  4238 ;; This function calls:
  4239 ;;		___lcd_en_pulse
  4240 ;;		___lcd_port_write
  4241 ;; This function is called by:
  4242 ;;		_LCD_send_string
  4243 ;;		_LCD_display_clear
  4244 ;;		_Draw_main_display_p1
  4245 ;;		_Draw_settings_display
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248                           
  4249                           
  4250                           ;psect for function ___lcd_send_char
  4251  06C2                     ___lcd_send_char:
  4252                           
  4253                           ;incstack = 0
  4254                           ; Regs used in ___lcd_send_char: [wreg+status,2+status,0+pclath+cstack]
  4255                           ;___lcd_send_char@ascii stored from wreg
  4256  06C2  00F7               	movwf	___lcd_send_char@ascii
  4257  06C3                     l1537:
  4258                           
  4259                           ;main.c: 77: void __lcd_send_char(uint8_t ascii);main.c: 78: {;main.c: 79:     RA5 = 1;
  4260  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  4261  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  4262  06C5  1685               	bsf	5,5	;volatile
  4263  06C6                     l1539:
  4264                           
  4265                           ;main.c: 82:     uint8_t low = 0;
  4266  06C6  01F6               	clrf	___lcd_send_char@low
  4267  06C7                     l1541:
  4268                           
  4269                           ;main.c: 83:     high = ascii >> 4;
  4270  06C7  0877               	movf	___lcd_send_char@ascii,w
  4271  06C8  00F3               	movwf	??___lcd_send_char
  4272  06C9  3004               	movlw	4
  4273  06CA                     u965:
  4274  06CA  1003               	clrc
  4275  06CB  0CF3               	rrf	??___lcd_send_char,f
  4276  06CC  3EFF               	addlw	-1
  4277  06CD  1D03               	skipz
  4278  06CE  2ECA               	goto	u965
  4279  06CF  0873               	movf	??___lcd_send_char,w
  4280  06D0  00F4               	movwf	??___lcd_send_char+1
  4281  06D1  0874               	movf	??___lcd_send_char+1,w
  4282  06D2  00F5               	movwf	___lcd_send_char@high
  4283  06D3                     l1543:
  4284                           
  4285                           ;main.c: 84:     low = ascii & 0x0F;
  4286  06D3  0877               	movf	___lcd_send_char@ascii,w
  4287  06D4  390F               	andlw	15
  4288  06D5  00F3               	movwf	??___lcd_send_char
  4289  06D6  0873               	movf	??___lcd_send_char,w
  4290  06D7  00F6               	movwf	___lcd_send_char@low
  4291  06D8                     l1545:
  4292                           
  4293                           ;main.c: 86:     __lcd_port_write(high);
  4294  06D8  0875               	movf	___lcd_send_char@high,w
  4295  06D9  118A  270B  118A   	fcall	___lcd_port_write
  4296  06DC                     l1547:
  4297                           
  4298                           ;main.c: 87:     __lcd_en_pulse();
  4299  06DC  118A  27A3  118A   	fcall	___lcd_en_pulse
  4300  06DF                     l1549:
  4301                           
  4302                           ;main.c: 88:     __lcd_port_write(low);
  4303  06DF  0876               	movf	___lcd_send_char@low,w
  4304  06E0  118A  270B  118A   	fcall	___lcd_port_write
  4305  06E3                     l1551:
  4306                           
  4307                           ;main.c: 89:     __lcd_en_pulse();
  4308  06E3  118A  27A3  118A   	fcall	___lcd_en_pulse
  4309  06E6                     l71:
  4310  06E6  0008               	return
  4311  06E7                     __end_of___lcd_send_char:
  4312                           
  4313                           	psect	text18
  4314  070B                     __ptext18:	
  4315 ;; *************** function ___lcd_port_write *****************
  4316 ;; Defined at:
  4317 ;;		line 48 in file "main.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;  data            1    wreg     unsigned char 
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;  data            1    2[COMMON] unsigned char 
  4322 ;; Return value:  Size  Location     Type
  4323 ;;                  1    wreg      void 
  4324 ;; Registers used:
  4325 ;;		wreg
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4331 ;;      Params:         0       0       0       0
  4332 ;;      Locals:         1       0       0       0
  4333 ;;      Temps:          0       0       0       0
  4334 ;;      Totals:         1       0       0       0
  4335 ;;Total ram usage:        1 bytes
  4336 ;; Hardware stack levels used:    1
  4337 ;; Hardware stack levels required when called:    1
  4338 ;; This function calls:
  4339 ;;		Nothing
  4340 ;; This function is called by:
  4341 ;;		___lcd_cmd
  4342 ;;		___lcd_send_char
  4343 ;; This function uses a non-reentrant model
  4344 ;;
  4345                           
  4346                           
  4347                           ;psect for function ___lcd_port_write
  4348  070B                     ___lcd_port_write:
  4349                           
  4350                           ;incstack = 0
  4351                           ; Regs used in ___lcd_port_write: [wreg]
  4352                           ;___lcd_port_write@data stored from wreg
  4353  070B  00F2               	movwf	___lcd_port_write@data
  4354  070C                     l1523:
  4355                           
  4356                           ;main.c: 48: void __lcd_port_write(uint8_t data);main.c: 49: {;main.c: 50:     if(data &
      +                           0x01)
  4357  070C  1C72               	btfss	___lcd_port_write@data,0
  4358  070D  2F0F               	goto	u921
  4359  070E  2F10               	goto	u920
  4360  070F                     u921:
  4361  070F  2F14               	goto	l57
  4362  0710                     u920:
  4363  0710                     l1525:
  4364                           
  4365                           ;main.c: 51:   RC0 = 1;
  4366  0710  1283               	bcf	3,5	;RP0=0, select bank0
  4367  0711  1303               	bcf	3,6	;RP1=0, select bank0
  4368  0712  1407               	bsf	7,0	;volatile
  4369  0713  2F17               	goto	l58
  4370  0714                     l57:	
  4371                           ;main.c: 52:  else
  4372                           
  4373                           
  4374                           ;main.c: 53:   RC0 = 0;
  4375  0714  1283               	bcf	3,5	;RP0=0, select bank0
  4376  0715  1303               	bcf	3,6	;RP1=0, select bank0
  4377  0716  1007               	bcf	7,0	;volatile
  4378  0717                     l58:
  4379                           
  4380                           ;main.c: 55:  if(data & 0x02)
  4381  0717  1CF2               	btfss	___lcd_port_write@data,1
  4382  0718  2F1A               	goto	u931
  4383  0719  2F1B               	goto	u930
  4384  071A                     u931:
  4385  071A  2F1D               	goto	l59
  4386  071B                     u930:
  4387  071B                     l1527:
  4388                           
  4389                           ;main.c: 56:   RC1 = 1;
  4390  071B  1487               	bsf	7,1	;volatile
  4391  071C  2F1E               	goto	l60
  4392  071D                     l59:	
  4393                           ;main.c: 57:  else
  4394                           
  4395                           
  4396                           ;main.c: 58:   RC1 = 0;
  4397  071D  1087               	bcf	7,1	;volatile
  4398  071E                     l60:
  4399                           
  4400                           ;main.c: 60:  if(data & 0x04)
  4401  071E  1D72               	btfss	___lcd_port_write@data,2
  4402  071F  2F21               	goto	u941
  4403  0720  2F22               	goto	u940
  4404  0721                     u941:
  4405  0721  2F24               	goto	l61
  4406  0722                     u940:
  4407  0722                     l1529:
  4408                           
  4409                           ;main.c: 61:   RC2 = 1;
  4410  0722  1507               	bsf	7,2	;volatile
  4411  0723  2F25               	goto	l62
  4412  0724                     l61:	
  4413                           ;main.c: 62:  else
  4414                           
  4415                           
  4416                           ;main.c: 63:   RC2 = 0;
  4417  0724  1107               	bcf	7,2	;volatile
  4418  0725                     l62:
  4419                           
  4420                           ;main.c: 65:  if(data & 0x08)
  4421  0725  1DF2               	btfss	___lcd_port_write@data,3
  4422  0726  2F28               	goto	u951
  4423  0727  2F29               	goto	u950
  4424  0728                     u951:
  4425  0728  2F2B               	goto	l63
  4426  0729                     u950:
  4427  0729                     l1531:
  4428                           
  4429                           ;main.c: 66:   RC3 = 1;
  4430  0729  1587               	bsf	7,3	;volatile
  4431  072A  2F2C               	goto	l65
  4432  072B                     l63:	
  4433                           ;main.c: 67:  else
  4434                           
  4435                           
  4436                           ;main.c: 68:   RC3 = 0;
  4437  072B  1187               	bcf	7,3	;volatile
  4438  072C                     l65:
  4439  072C  0008               	return
  4440  072D                     __end_of___lcd_port_write:
  4441                           
  4442                           	psect	text19
  4443  07A3                     __ptext19:	
  4444 ;; *************** function ___lcd_en_pulse *****************
  4445 ;; Defined at:
  4446 ;;		line 41 in file "main.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;		None
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;		None
  4451 ;; Return value:  Size  Location     Type
  4452 ;;                  1    wreg      void 
  4453 ;; Registers used:
  4454 ;;		wreg
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4460 ;;      Params:         0       0       0       0
  4461 ;;      Locals:         0       0       0       0
  4462 ;;      Temps:          1       0       0       0
  4463 ;;      Totals:         1       0       0       0
  4464 ;;Total ram usage:        1 bytes
  4465 ;; Hardware stack levels used:    1
  4466 ;; Hardware stack levels required when called:    1
  4467 ;; This function calls:
  4468 ;;		Nothing
  4469 ;; This function is called by:
  4470 ;;		___lcd_cmd
  4471 ;;		___lcd_send_char
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475                           
  4476                           ;psect for function ___lcd_en_pulse
  4477  07A3                     ___lcd_en_pulse:
  4478  07A3                     l1517:	
  4479                           ;incstack = 0
  4480                           ; Regs used in ___lcd_en_pulse: [wreg]
  4481                           
  4482                           
  4483                           ;main.c: 43:     _delay((unsigned long)((10)*(4000000UL/4000000.0)));
  4484  07A3  3003               	movlw	3
  4485  07A4  00F2               	movwf	??___lcd_en_pulse
  4486  07A5                     u1867:
  4487  07A5  0BF2               	decfsz	??___lcd_en_pulse,f
  4488  07A6  2FA5               	goto	u1867
  4489  07A7                     l1519:
  4490                           
  4491                           ;main.c: 44:     PORTAbits.RA4 = 1;
  4492  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  4493  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  4494  07A9  1605               	bsf	5,4	;volatile
  4495                           
  4496                           ;main.c: 45:     _delay((unsigned long)((500)*(4000000UL/4000000.0)));
  4497  07AA  30A6               	movlw	166
  4498  07AB  00F2               	movwf	??___lcd_en_pulse
  4499  07AC                     u1877:
  4500  07AC  0BF2               	decfsz	??___lcd_en_pulse,f
  4501  07AD  2FAC               	goto	u1877
  4502  07AE  0000               	nop
  4503  07AF                     l1521:
  4504                           
  4505                           ;main.c: 46:     PORTAbits.RA4 = 0;
  4506  07AF  1283               	bcf	3,5	;RP0=0, select bank0
  4507  07B0  1303               	bcf	3,6	;RP1=0, select bank0
  4508  07B1  1205               	bcf	5,4	;volatile
  4509  07B2                     l54:
  4510  07B2  0008               	return
  4511  07B3                     __end_of___lcd_en_pulse:
  4512                           
  4513                           	psect	text20
  4514  07BF                     __ptext20:	
  4515 ;; *************** function _isr *****************
  4516 ;; Defined at:
  4517 ;;		line 23 in file "interrupts.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;		None
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;		None
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  1    wreg      void 
  4524 ;; Registers used:
  4525 ;;		None
  4526 ;; Tracked objects:
  4527 ;;		On entry : 0/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4531 ;;      Params:         0       0       0       0
  4532 ;;      Locals:         0       0       0       0
  4533 ;;      Temps:          2       0       0       0
  4534 ;;      Totals:         2       0       0       0
  4535 ;;Total ram usage:        2 bytes
  4536 ;; Hardware stack levels used:    1
  4537 ;; This function calls:
  4538 ;;		Nothing
  4539 ;; This function is called by:
  4540 ;;		Interrupt level 1
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           
  4545                           ;psect for function _isr
  4546  07BF                     _isr:
  4547  07BF                     i1l5:
  4548  07BF  0871               	movf	??_isr+1,w
  4549  07C0  008A               	movwf	10
  4550  07C1  0E70               	swapf	??_isr,w
  4551  07C2  0083               	movwf	3
  4552  07C3  0EFE               	swapf	btemp,f
  4553  07C4  0E7E               	swapf	btemp,w
  4554  07C5  0009               	retfie
  4555  07C6                     __end_of_isr:
  4556  007E                     btemp	set	126	;btemp
  4557  007E                     wtemp0	set	126
  4558                           
  4559                           	psect	intentry
  4560  0004                     __pintentry:	
  4561                           ;incstack = 0
  4562                           ; Regs used in _isr: []
  4563                           
  4564  0004                     interrupt_function:
  4565  007E                     saved_w	set	btemp
  4566  0004  00FE               	movwf	btemp
  4567  0005  0E03               	swapf	3,w
  4568  0006  00F0               	movwf	??_isr
  4569  0007  080A               	movf	10,w
  4570  0008  00F1               	movwf	??_isr+1
  4571  0009  118A  2FBF         	ljmp	_isr
  4572                           
  4573                           	psect	config
  4574                           
  4575                           ;Config register CONFIG @ 0x2007
  4576                           ;	Oscillator Selection bits
  4577                           ;	FOSC = INTOSCIO, INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O functio
      +                          n on RA5/OSC1/CLKIN
  4578                           ;	Watchdog Timer Enable bit
  4579                           ;	WDTE = OFF, WDT disabled
  4580                           ;	Power-up Timer Enable bit
  4581                           ;	PWRTE = OFF, PWRT disabled
  4582                           ;	MCLR Pin Function Select bit
  4583                           ;	MCLRE = ON, MCLR pin function is MCLR
  4584                           ;	Code Protection bit
  4585                           ;	CP = OFF, Program memory code protection is disabled
  4586                           ;	Data Code Protection bit
  4587                           ;	CPD = OFF, Data memory code protection is disabled
  4588                           ;	Brown Out Detect
  4589                           ;	BOREN = OFF, BOR disabled
  4590                           ;	Internal External Switchover bit
  4591                           ;	IESO = OFF, Internal External Switchover mode is disabled
  4592                           ;	Fail-Safe Clock Monitor Enabled bit
  4593                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4594  2007                     	org	8199
  4595  2007  30F4               	dw	12532

Data Sizes:
    Strings     30
    Constant    10
    Data        105
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     38      80
    BANK1            80      0      67
    BANK2            80      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_8(CODE[10]), STR_3(CODE[10]), STR_2(CODE[5]), STR_1(CODE[6]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_13(CODE[7]), ?_sprintf(BANK0[2]), STR_12(CODE[1]), STR_11(CODE[2]), 
		 -> STR_10(CODE[1]), STR_9(CODE[2]), STR_7(CODE[1]), STR_6(CODE[2]), 
		 -> STR_5(CODE[1]), STR_4(CODE[2]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 6
		 -> time(BANK0[6]), update_humi(BANK0[4]), update_temp(BANK0[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    set_time$192	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_10(CODE[1]), STR_9(CODE[2]), 

    set_time$191	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_12(CODE[1]), STR_11(CODE[2]), 

    set_time$183	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_5(CODE[1]), STR_4(CODE[2]), 

    set_time$182	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_7(CODE[1]), STR_6(CODE[2]), 

    LCD_send_string@string	PTR unsigned char  size(1) Largest target is 17
		 -> s_end(BANK1[17]), s_humi(BANK1[9]), s_temp(BANK1[12]), s_date(BANK0[5]), 
		 -> s_time(BANK0[5]), date(BANK1[9]), l_date(BANK1[5]), time(BANK0[6]), 
		 -> l_time(BANK0[5]), update_humi(BANK0[4]), current_humi(BANK0[4]), l_humi(BANK1[5]), 
		 -> update_temp(BANK0[5]), current_temp(BANK1[5]), l_temp(BANK1[5]), 


Critical Paths under _main in COMMON

    _main->_Draw_main_display_p1
    _main->_Draw_main_display_p2
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_display_ctrl->___lcd_cmd
    _LCD_Init->___lcd_cmd
    _Draw_settings_display->_LCD_send_string
    _Draw_main_display_p2->_LCD_send_string
    _LCD_display_clear->_LCD_set_cursor
    _LCD_display_clear->___lcd_send_char
    _Draw_main_display_p1->_LCD_send_string
    _LCD_set_cursor->___lcd_cmd
    ___lcd_cmd->___lcd_en_pulse
    ___lcd_cmd->___lcd_port_write
    _LCD_send_string->___lcd_send_char
    ___lcd_send_char->___lcd_en_pulse
    ___lcd_send_char->___lcd_port_write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_set_time
    _set_time->_sprintf
    _set_temp->_sprintf
    _set_humi->_sprintf
    _sprintf->___lwmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   40997
                                             34 BANK0      4     4      0
               _Draw_main_display_p1
               _Draw_main_display_p2
              _Draw_settings_display
                           _LCD_Init
                  _LCD_display_clear
                   _LCD_display_ctrl
                           _set_date
                           _set_humi
                           _set_temp
                           _set_time
 ---------------------------------------------------------------------------------
 (1) _set_time                                             9     9      0    7566
                                             25 BANK0      9     9      0
                  _LCD_display_clear
                    _LCD_send_string
                     _LCD_set_cursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _set_temp                                             5     5      0    7470
                                             25 BANK0      5     5      0
                  _LCD_display_clear
                    _LCD_send_string
                     _LCD_set_cursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _set_humi                                             3     3      0    7470
                                             25 BANK0      3     3      0
                  _LCD_display_clear
                    _LCD_send_string
                     _LCD_set_cursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    18      9    1698
                                              4 BANK0     21    12      9
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                             10 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _set_date                                             1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_display_ctrl                                     5     3      2     353
                                              4 COMMON     5     3      2
                          ___lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     110
                                              4 COMMON     2     2      0
                          ___lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _Draw_settings_display                                2     0      2    6192
                                              0 BANK0      2     0      2
                  _LCD_display_clear
                    _LCD_send_string
                     _LCD_set_cursor
                    ___lcd_send_char
 ---------------------------------------------------------------------------------
 (1) _Draw_main_display_p2                                 1     1      0    5772
                                             11 COMMON     1     1      0
                  _LCD_display_clear
                    _LCD_send_string
                     _LCD_set_cursor
 ---------------------------------------------------------------------------------
 (2) _LCD_display_clear                                    2     2      0    2402
                                              8 COMMON     2     2      0
                     _LCD_set_cursor
                    ___lcd_send_char
 ---------------------------------------------------------------------------------
 (1) _Draw_main_display_p1                                 1     1      0    3550
                                             11 COMMON     1     1      0
                    _LCD_send_string
                     _LCD_set_cursor
                    ___lcd_send_char
 ---------------------------------------------------------------------------------
 (2) _LCD_set_cursor                                       4     3      1    2175
                                              4 COMMON     4     3      1
                          ___lcd_cmd
 ---------------------------------------------------------------------------------
 (3) ___lcd_cmd                                            1     1      0     110
                                              3 COMMON     1     1      0
                     ___lcd_en_pulse
                   ___lcd_port_write
 ---------------------------------------------------------------------------------
 (2) _LCD_send_string                                      3     3      0    1195
                                              8 COMMON     3     3      0
                    ___lcd_send_char
 ---------------------------------------------------------------------------------
 (3) ___lcd_send_char                                      5     5      0     180
                                              3 COMMON     5     5      0
                     ___lcd_en_pulse
                   ___lcd_port_write
 ---------------------------------------------------------------------------------
 (4) ___lcd_port_write                                     1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) ___lcd_en_pulse                                       1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Draw_main_display_p1
     _LCD_send_string
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_set_cursor
       ___lcd_cmd
         ___lcd_en_pulse
         ___lcd_port_write
     ___lcd_send_char
       ___lcd_en_pulse
       ___lcd_port_write
   _Draw_main_display_p2
     _LCD_display_clear
       _LCD_set_cursor
         ___lcd_cmd
           ___lcd_en_pulse
           ___lcd_port_write
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_send_string
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_set_cursor
       ___lcd_cmd
         ___lcd_en_pulse
         ___lcd_port_write
   _Draw_settings_display
     _LCD_display_clear
       _LCD_set_cursor
         ___lcd_cmd
           ___lcd_en_pulse
           ___lcd_port_write
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_send_string
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_set_cursor
       ___lcd_cmd
         ___lcd_en_pulse
         ___lcd_port_write
     ___lcd_send_char
       ___lcd_en_pulse
       ___lcd_port_write
   _LCD_Init
     ___lcd_cmd
       ___lcd_en_pulse
       ___lcd_port_write
   _LCD_display_clear
     _LCD_set_cursor
       ___lcd_cmd
         ___lcd_en_pulse
         ___lcd_port_write
     ___lcd_send_char
       ___lcd_en_pulse
       ___lcd_port_write
   _LCD_display_ctrl
     ___lcd_cmd
       ___lcd_en_pulse
       ___lcd_port_write
   _set_date
   _set_humi
     _LCD_display_clear
       _LCD_set_cursor
         ___lcd_cmd
           ___lcd_en_pulse
           ___lcd_port_write
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_send_string
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_set_cursor
       ___lcd_cmd
         ___lcd_en_pulse
         ___lcd_port_write
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _set_temp
     _LCD_display_clear
       _LCD_set_cursor
         ___lcd_cmd
           ___lcd_en_pulse
           ___lcd_port_write
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_send_string
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_set_cursor
       ___lcd_cmd
         ___lcd_en_pulse
         ___lcd_port_write
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _set_time
     _LCD_display_clear
       _LCD_set_cursor
         ___lcd_cmd
           ___lcd_en_pulse
           ___lcd_port_write
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_send_string
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_set_cursor
       ___lcd_cmd
         ___lcd_en_pulse
         ___lcd_port_write
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      43       5       83.8%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     26      50       3      100.0%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      9F      10        0.0%
ABS                  0      0      9F       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat Oct 24 01:54:51 2020

                   _update_humi 003E                     _update_temp 002A                               pc 0002  
                            l60 071E                              l61 0724                              l54 07B2  
                            l62 0725                              l63 072B                              l71 06E6  
                            l65 072C                              l57 0714                              l58 0717  
                            l59 071D                              l68 07BE                              l84 070A  
                            l77 0766                              l95 0749                              fsr 0004  
                 ___lcd_cmd@cmd 0073                             l100 0791                             l103 051B  
                           l214 00CE                             l152 066D                             l208 0089  
                           l161 0461                             l241 077C                             l170 03AE  
                           l155 069B                             l235 015B                             l219 0103  
                           l251 02AE                             l180 03DC                             l165 0461  
                           l229 0116                             l253 02B2                             l407 0275  
                           l247 029A                             l193 04D4                             l185 04AD  
                           l281 0342                             l265 0300                             l257 02F5  
                           l249 02A0                             l274 0332                             l269 0308  
                           l198 0076                             l278 0332                             l683 055F  
                           l693 05DE                             _RA2 002A                             _RC0 0038  
                           _RC1 0039                             _RA5 002D                             _RC2 003A  
                           _RC3 003B                             _RC4 003C                             _RC5 003D  
                           i1l5 07BF                             u920 0710                             u921 070F  
                           u930 071B                             u931 071A                             u940 0722  
                           u941 0721                             u950 0729                             u951 0728  
                           u970 0733                             u971 0732                             u980 073D  
                           u965 06CA                             u981 073C                             u990 0524  
                           u991 0523                             _isr 07BF                             fsr0 0004  
                           indf 0000   __size_of_Draw_main_display_p1 0036   __size_of_Draw_main_display_p2 002E  
                          l2011 0288                            l2003 0276                            l2021 0291  
                          l2013 028B                            l2005 0279                            l2031 02A7  
                          l2023 0294                            l2015 028C                            l2007 027D  
                          l2041 02BB                            l2033 02AD                            l2025 02A1  
                          l2017 028D                            l2009 0284                            l2051 02D7  
                          l2043 02BF                            l2035 02B6                            l2027 02A3  
                          l2019 0290                            l2117 01C4                            l2053 02D9  
                          l2045 02C5                            l2037 02B7                            l2029 02A4  
                          l2071 030C                            l2063 02F1                            l2055 02E4  
                          l2047 02CA                            l2039 02B9                            l1521 07AF  
                          l1601 05BD                            l2081 0324                            l2073 0311  
                          l2065 02FB                            l2049 02D2                            l2057 02E6  
                          l1531 0729                            l1523 070C                            l1603 05C7  
                          l2091 033B                            l2083 0328                            l2075 0315  
                          l2067 02FF                            l2059 02EC                            l1517 07A3  
                          l1525 0710                            l1541 06C7                            l1613 074B  
                          l1533 07B4                            l1621 077D                            l1605 05CD  
                          l1701 0225                            l2085 032E                            l2077 031A  
                          l2069 0304                            l2093 033F                            l1519 07A7  
                          l1527 071B                            l1551 06E3                            l1543 06D3  
                          l1615 074E                            l1535 07B7                            l1631 0783  
                          l1623 077D                            l1607 05D4                            l1703 024D  
                          l1711 0271                            l2087 0335                            l2079 031E  
                          l1529 0722                            l1545 06D8                            l1537 06C3  
                          l1617 0757                            l1561 0741                            l1553 072E  
                          l1633 0787                            l1625 0782                            l1801 03FF  
                          l1721 06EC                            l1609 05DA                            l1705 0254  
                          l1641 016A                            l2089 0337                            l1547 06DC  
                          l1539 06C6                            l1619 075B                            l1563 0745  
                          l1555 0733                            l1635 078B                            l1811 0426  
                          l1803 0405                            l1731 0700                            l1723 06F0  
                          l1571 0527                            l1707 0258                            l1651 0185  
                          l1643 0171                            l1549 06DF                            l1557 0738  
                          l1821 0453                            l1813 0432                            l1805 0411  
                          l1741 04E2                            l1733 0701                            l1725 06F5  
                          l1581 054D                            l1573 052E                            l1565 051C  
                          l1653 018B                            l1661 01A7                            l1645 0176  
                          l1709 0261                            l1637 015F                            l1901 002B  
                          l1559 073D                            l1823 0457                            l1815 0436  
                          l1807 0415                            l1751 04FF                            l1743 04EE  
                          l1727 06FA                            l1735 0706                            l1719 06E8  
                          l1583 054E                            l1575 0532                            l1567 051E  
                          l1591 05A3                            l1671 01D2                            l1655 0190  
                          l1647 0178                            l1639 0164                            l1831 0366  
                          l1911 0050                            l1903 0033                            l1817 0440  
                          l1809 041F                            l1761 0513                            l1753 0503  
                          l1745 04F3                            l1737 04D5                            l1729 06FB  
                          l1585 0555                            l1577 0536                            l1569 0524  
                          l1593 05AB                            l1681 01EB                            l1673 01DA  
                          l1657 019D                            l1649 0181                            l1841 0388  
                          l1833 036A                            l1825 034B                            l1921 0067  
                          l1913 0055                            l1905 0037                            l1771 064C  
                          l1819 0447                            l1763 0517                            l1755 0507  
                          l1747 04F7                            l1739 04DE                            l1579 0547  
                          l1587 055B                            l1595 05AE                            l1691 0205  
                          l1675 01DE                            l1659 01A3                            l1851 039E  
                          l1843 0389                            l1835 0370                            l1827 0353  
                          l1931 008F                            l1923 006D                            l1915 005D  
                          l1907 0046                     main@lastCLK 006A                            l1773 0650  
                          l1765 0638                            l1781 066E                            l1757 050B  
                          l1749 04FB                            l1597 05B5                            l1693 020F  
                          l1677 01E2                            l1669 01B4                            l1861 03C8  
                          l1853 039F                            l1845 038E                            l1837 0375  
                          l1829 0357                            l1933 0094                            l1925 0072  
                          l1917 0062                            l1909 004A                            l1941 00C8  
                          l1775 0659                            l1767 063C                            l1791 0697  
                          l1783 0676                            l1759 050F                            l1599 05B9  
                          l1695 0215                            l1687 01ED                            l1679 01E6  
                          l1871 046E                            l1863 03D2                            l1855 03A5  
                          l1847 0391                            l1839 037D                            l1951 00EA  
                          l1943 00D3                            l1935 0098                            l1927 0080  
                          l1919 0065                            l1777 0661                            l1769 0644  
                          l1785 067A                            l1793 03DD                            l1697 021C  
                          l1881 0494                            l1873 047D                            l1857 03AA  
                          l1849 0393                            l1865 03D6                            l1961 00FF  
                          l1953 00EF                            l1945 00D7                            l1937 00BA  
                          l1929 0085                            l1779 0669                            l1787 0686  
                          l1795 03E5                            l1699 0220                            l1891 04A9  
                          l1883 0499                            l1875 0481                            l1867 0462  
                          l1859 03B2                            l1971 0125                            l1963 010D  
                          l1955 00F2                            l1947 00DD                            l1939 00C4  
                          l1789 068B                            l1797 03F1                            l1981 076D  
                          l1893 04B1                            l1885 049C                            l1877 0487  
                          l1869 046A                            l1973 0147                            l1965 0112  
                          l1957 00F4                            l1949 00E2                            l1799 03F5  
                          l1983 0773                            l1895 04C0                            l1887 049E  
                          l1879 048C                            l1975 0151                            l1967 011C  
                          l1959 00FA                            l1985 0778                            l1897 04CA  
                          l1889 04A4                            l1969 0121                            l1977 0155  
                          l1979 0767                            l1899 04CE                            l1989 0778  
                          ?_isr 0070                            STR_1 062B                            STR_2 0631  
                          STR_3 061A                            STR_4 0636                            STR_5 0635  
                          STR_6 0636                            STR_7 0635                            STR_8 061A  
                          STR_9 0636                            u1010 0536                            u1011 0535  
                          u1005 0528                            u1030 0547                            u1110 05DA  
                          u1031 0546                            u1111 05D9                            u1120 0766  
                          u1200 0215                            u1121 0765                            u1025 0537  
                          u1105 05CE                            u1201 0214                            u1130 0791  
                          u1050 055B                            u1210 0261                            u1131 0790  
                          u1051 055A                            u1035 0543                            u1211 0260  
                          u1060 05AB                            u1220 0271                            u1140 016A  
                          u1300 0370                            u1045 054F                            u1061 05AA  
                          u1221 0270                            u1141 0169                            u1301 036F  
                          u1230 06F5                            u1150 018B                            u1310 0375  
                          u1231 06F4                            u1151 018A                            u1311 0374  
                          u1240 06FA                            u1080 05BD                            u1160 01B3  
                          u1400 0494                            u1320 037D                            u1241 06F9  
                          u1081 05BC                            u1161 01B2                            u1401 0493  
                          u1321 037C                            u1250 0700                            u1090 05C7  
                          u1170 01E2                            u1410 0499                            u1330 0388  
                          u1251 06FF                            u1091 05C6                            u1075 05AF  
                          u1171 01E1                            u1411 0498                            u1331 0387  
                          u1260 03E5                            u1180 0204                            u1420 04A4  
                          u1340 038E                            u1500 008F                            u1261 03E4  
                          u1181 0203                            u1421 04A3                            u1341 038D  
                          u1501 008E                            u1270 0405                            u1190 020F  
                          u1430 04D4                            u1350 039E                            u1510 00CE  
                          u1271 0404                            u1095 05C3                            u1191 020E  
                          u1431 04D3                            u1351 039D                            u1511 00CD  
                          u1280 0426                            u1360 03A5                            u1600 015B  
                          u1520 00D2                            u1440 0050                            u1281 0425  
                          u1185 0200                            u1361 03A4                            u1601 015A  
                          u1521 00D1                            u1441 004F                            u1290 0447  
                          u1610 0773                            u1370 03DC                            u1530 00DD  
                          u1450 0055                            u1291 0446                            u1611 0772  
                          u1371 03DB                            u1531 00DC                            u1451 0054  
                          u1620 0778                            u1380 0487                            u1540 00E2  
                          u1460 005D                            u1700 02D2                            u1621 0777  
                          u1381 0486                            u1541 00E1                            u1461 005C  
                          u1701 02D1                            u1390 048C                            u1550 00EA  
                          u1470 0062                            u1710 02D7                            u1391 048B  
                          u1551 00E9                            u1471 0061                            u1711 02D6  
                          u1560 00EF                            u1480 006D                            u1800 032E  
                          u1720 02EC                            u1640 02A0                            u1561 00EE  
                          u1481 006C                            u1801 032D                            u1721 02EB  
                          u1641 029F                            u1570 00FA                            u1490 0080  
                          u1810 033B                            u1730 02FF                            u1650 02AD  
                          u1571 00F9                            u1491 007F                            u1811 033A  
                          u1731 02FE                            u1651 02AC                            u1580 010D  
                          u1820 0348                            u1740 0304                            u1660 02B2  
                          u1581 010C                            u1821 0347                            u1741 0303  
                          u1661 02B1                            u1590 011C                            u1750 0308  
                          u1670 02B6                            u1591 011B                            u1751 0307  
                          u1671 02B5                            u1760 030C                            u1680 02C5  
                          u1761 030B                            u1681 02C4                            u1770 0311  
                          u1690 02CA                            u1771 0310                            u1691 02C9  
                          u1780 031A                            u1837 04D9                            u1781 0319  
                          u1790 0324                            u1847 04E6                            u1791 0323  
                          u1857 04F0                            u1867 07A5                            u1877 07AC  
                ___lcd_en_pulse 07A3                            _date 00BD                            _main 0276  
                          _time 0024                            btemp 007E      __size_of_LCD_display_clear 0015  
       ??_Draw_settings_display 007B                            start 000B                           ??_isr 0070  
              __end_of_LCD_Init 051C                           ?_main 0070                           STR_10 0635  
                         STR_11 0636                           STR_12 0635                           STR_13 0624  
                         _ANSEL 0091                           _T1CON 0010                 __end_of___lwdiv 0560  
               __end_of___lwmod 05DF                           _TMR1H 000F                           _TMR1L 000E  
                         _PORTA 0005                           _PORTC 0007                           _TRISA 0085  
                         _TRISC 0087              LCD_display_clear@i 0079                 __end_of_dpowers 061A  
        __end_of___lcd_en_pulse 07B3                           _s_end 00A0                           pclath 000A  
                         status 0003                           wtemp0 007E                 __end_of_sprintf 0276  
     __size_of___lcd_port_write 0022         __size_of_LCD_set_cursor 001D                 __initialization 000D  
               ___lcd_send_char 06C2                    __end_of_main 034B                          ??_main 0068  
            LCD_set_cursor@temp 0076        __end_of_LCD_display_ctrl 070B                 ?___lcd_en_pulse 0070  
                        _CMCON0 0019                          _TMR1IF 0060                          _TMR1ON 0080  
           ___lcd_send_char@low 0076                          _l_date 00DE                       ??___lwdiv 0076  
                     ??___lwmod 007A                          _l_humi 00D4                          _l_temp 00D9  
                        _l_time 002F                          _s_date 0034                          _s_humi 00C6  
                        _s_temp 00B1                          _s_time 0039                __end_of_set_date 077D  
              __end_of_set_humi 04D5                __end_of_set_temp 03DD                __end_of_set_time 015C  
                        saved_w 007E                       ??_sprintf 0053        __size_of_LCD_send_string 001D  
            __size_of___lcd_cmd 000C         __end_of__initialization 0028                       ?_LCD_Init 0070  
       __end_of___lcd_send_char 06E7                  __pcstackCOMMON 0070                    __pidataBANK0 069C  
                  __pidataBANK1 0560                      __pbssBANK0 006C                      ??_LCD_Init 0074  
              ___lcd_port_write 070B    __end_of_Draw_main_display_p1 066E    __end_of_Draw_main_display_p2 069C  
                _LCD_set_cursor 072D  __size_of_Draw_settings_display 0085   __end_of_Draw_settings_display 0462  
                    __pmaintext 0276                      __pintentry 0004               __end_of___lcd_cmd 07BF  
         ___lcd_port_write@data 0072                  main@currentCLK 006B                      __stringtab 0600  
        __end_of_LCD_set_cursor 074A            ___lcd_send_char@high 0075                ?___lcd_send_char 0070  
             ??_LCD_send_string 0078                       ?_set_date 0070                       ?_set_humi 0070  
                     ?_set_temp 0070                       ?_set_time 0070                         ___lwdiv 051C  
                       ___lwmod 05A3                         __ptext1 002B                         __ptext2 034B  
                       __ptext3 0462                         __ptext4 015C                         __ptext5 05A3  
                       __ptext6 051C                         __ptext7 0767                         __ptext8 06E7  
                       __ptext9 04D5                       _T1CONbits 0010                         _counter 006C  
                       _dpowers 0610                ??___lcd_en_pulse 0072                    __size_of_isr 0007  
          LCD_display_ctrl@temp 0078               ?_LCD_display_ctrl 0074                         _sprintf 015C  
          end_of_initialization 0028              ??_LCD_display_ctrl 0076                 ?_LCD_set_cursor 0074  
       LCD_display_ctrl@display 0077                      ??_set_date 0072                      ??_set_humi 005F  
                    ??_set_temp 005F                      ??_set_time 005F                      _time_hours 0020  
                     _PORTAbits 0005            _Draw_main_display_p1 0638            _Draw_main_display_p2 066E  
             __size_of_LCD_Init 0047        __end_of___lcd_port_write 072D           ?_Draw_main_display_p1 0070  
         ?_Draw_main_display_p2 0070             start_initialization 000D                     __end_of_isr 07C6  
             LCD_set_cursor@row 0077            LCD_set_cursor@column 0074                      init_fetch0 0792  
                   __pdataBANK0 0020                     __pdataBANK1 00A0                       ___lcd_cmd 07B3  
                     ___latbits 0001                   __pcstackBANK0 0046                 _LCD_send_string 074A  
                   sprintf@flag 0056                     sprintf@prec 0057                    _current_humi 0042  
                  _current_temp 00CF                ___lwdiv@dividend 0074           LCD_send_string@string 007A  
         _Draw_settings_display 03DD               __size_of_set_date 0016                        ?___lwdiv 0072  
             __size_of_set_humi 0073                        ?___lwmod 0046               __size_of_set_temp 0092  
             __size_of_set_time 0131                       __pstrings 0600          ??_Draw_main_display_p1 007B  
        ??_Draw_main_display_p2 007B                      ?___lcd_cmd 0070                ___lwdiv@quotient 0077  
              ??_LCD_set_cursor 0075                        ?_sprintf 004A                LCD_send_string@i 0079  
                     _s_lastCLK 006D               interrupt_function 0004                        _LCD_Init 04D5  
                  _humi_integer 0021          LCD_display_ctrl@cursor 0074       __size_of_LCD_display_ctrl 0024  
                  _s_currentCLK 006E        __size_of___lcd_send_char 0025                     __stringbase 060F  
       __end_of_LCD_send_string 0767           ___lcd_send_char@ascii 0077          ?_Draw_settings_display 0046  
              __size_of___lwdiv 0044                __size_of___lwmod 003C              __end_of__stringtab 0610  
                   ??___lcd_cmd 0073                      sprintf@val 005B               ?___lcd_port_write 0070  
               ___lwdiv@divisor 0072                 ___lwdiv@counter 0079              ??___lcd_port_write 0072  
                      __ptext10 03DD                        __ptext11 066E                        __ptext20 07BF  
                      __ptext12 077D                        __ptext13 0638                        __ptext14 072D  
                      __ptext15 07B3                        __ptext16 074A                        __ptext17 06C2  
                      __ptext18 070B                        __ptext19 07A3                __size_of_sprintf 011A  
       __size_of___lcd_en_pulse 0010                   __size_of_main 00D5           LCD_display_ctrl@blink 0075  
             _LCD_display_clear 077D                        _set_date 0767                        _set_humi 0462  
                      _set_temp 034B                        _set_time 002B                    _set_time$182 0064  
                  _set_time$191 0066                    _set_time$183 0065                    _set_time$192 0067  
            ?_LCD_display_clear 0070                    _temp_decimal 0022             ??_LCD_display_clear 0078  
              ?_LCD_send_string 0070               ??___lcd_send_char 0073                    _temp_integer 0023  
                      init_ram0 0796        Draw_settings_display@ctr 0046                        intlevel1 0000  
                     sprintf@ap 0058                       sprintf@cp 0059                       sprintf@sp 005D  
                  _time_minutes 006F                ___lwmod@dividend 0048       __end_of_LCD_display_clear 0792  
                     stringcode 060A                _LCD_display_ctrl 06E7                        sprintf@c 005E  
                      sprintf@f 004A                 ___lwmod@divisor 0046                 ___lwmod@counter 007B  
                      stringdir 060A                        stringtab 0600  
