

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat Oct 24 00:35:15 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F688
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.30
    42                           ; Generated 26/08/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F688 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0007                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0087                     	;# 
   105  008C                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0095                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0007                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000E                     	;# 
   135  000E                     	;# 
   136  000F                     	;# 
   137  0010                     	;# 
   138  0011                     	;# 
   139  0012                     	;# 
   140  0013                     	;# 
   141  0014                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001E                     	;# 
   149  001F                     	;# 
   150  0081                     	;# 
   151  0085                     	;# 
   152  0087                     	;# 
   153  008C                     	;# 
   154  008E                     	;# 
   155  008F                     	;# 
   156  0090                     	;# 
   157  0091                     	;# 
   158  0095                     	;# 
   159  0095                     	;# 
   160  0096                     	;# 
   161  0096                     	;# 
   162  0097                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009A                     	;# 
   166  009A                     	;# 
   167  009B                     	;# 
   168  009C                     	;# 
   169  009D                     	;# 
   170  009E                     	;# 
   171  009F                     	;# 
   172  0000                     	;# 
   173  0001                     	;# 
   174  0002                     	;# 
   175  0003                     	;# 
   176  0004                     	;# 
   177  0005                     	;# 
   178  0007                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000E                     	;# 
   183  000E                     	;# 
   184  000F                     	;# 
   185  0010                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0013                     	;# 
   189  0014                     	;# 
   190  0015                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001E                     	;# 
   197  001F                     	;# 
   198  0081                     	;# 
   199  0085                     	;# 
   200  0087                     	;# 
   201  008C                     	;# 
   202  008E                     	;# 
   203  008F                     	;# 
   204  0090                     	;# 
   205  0091                     	;# 
   206  0095                     	;# 
   207  0095                     	;# 
   208  0096                     	;# 
   209  0096                     	;# 
   210  0097                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009A                     	;# 
   214  009A                     	;# 
   215  009B                     	;# 
   216  009C                     	;# 
   217  009D                     	;# 
   218  009E                     	;# 
   219  009F                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0007                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0087                     	;# 
   249  008C                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0095                     	;# 
   255  0095                     	;# 
   256  0096                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0000                     	;# 
   269  0001                     	;# 
   270  0002                     	;# 
   271  0003                     	;# 
   272  0004                     	;# 
   273  0005                     	;# 
   274  0007                     	;# 
   275  000A                     	;# 
   276  000B                     	;# 
   277  000C                     	;# 
   278  000E                     	;# 
   279  000E                     	;# 
   280  000F                     	;# 
   281  0010                     	;# 
   282  0011                     	;# 
   283  0012                     	;# 
   284  0013                     	;# 
   285  0014                     	;# 
   286  0015                     	;# 
   287  0016                     	;# 
   288  0017                     	;# 
   289  0018                     	;# 
   290  0019                     	;# 
   291  001A                     	;# 
   292  001E                     	;# 
   293  001F                     	;# 
   294  0081                     	;# 
   295  0085                     	;# 
   296  0087                     	;# 
   297  008C                     	;# 
   298  008E                     	;# 
   299  008F                     	;# 
   300  0090                     	;# 
   301  0091                     	;# 
   302  0095                     	;# 
   303  0095                     	;# 
   304  0096                     	;# 
   305  0096                     	;# 
   306  0097                     	;# 
   307  0098                     	;# 
   308  0099                     	;# 
   309  009A                     	;# 
   310  009A                     	;# 
   311  009B                     	;# 
   312  009C                     	;# 
   313  009D                     	;# 
   314  009E                     	;# 
   315  009F                     	;# 
   316  0000                     	;# 
   317  0001                     	;# 
   318  0002                     	;# 
   319  0003                     	;# 
   320  0004                     	;# 
   321  0005                     	;# 
   322  0007                     	;# 
   323  000A                     	;# 
   324  000B                     	;# 
   325  000C                     	;# 
   326  000E                     	;# 
   327  000E                     	;# 
   328  000F                     	;# 
   329  0010                     	;# 
   330  0011                     	;# 
   331  0012                     	;# 
   332  0013                     	;# 
   333  0014                     	;# 
   334  0015                     	;# 
   335  0016                     	;# 
   336  0017                     	;# 
   337  0018                     	;# 
   338  0019                     	;# 
   339  001A                     	;# 
   340  001E                     	;# 
   341  001F                     	;# 
   342  0081                     	;# 
   343  0085                     	;# 
   344  0087                     	;# 
   345  008C                     	;# 
   346  008E                     	;# 
   347  008F                     	;# 
   348  0090                     	;# 
   349  0091                     	;# 
   350  0095                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364                           
   365                           	psect	idataCOMMON
   366  05DE                     __pidataCOMMON:
   367                           
   368                           ;initializer for _temp_decimal
   369  05DE  3405               	retlw	5
   370                           
   371                           ;initializer for _temp_integer
   372  05DF  3417               	retlw	23
   373                           
   374                           	psect	idataBANK0
   375  0469                     __pidataBANK0:
   376                           
   377                           ;initializer for _update_temp
   378  0469  3432               	retlw	50
   379  046A  3433               	retlw	51
   380  046B  342E               	retlw	46
   381  046C  3435               	retlw	53
   382  046D  3400               	retlw	0
   383                           
   384                           ;initializer for _l_humi
   385  046E  3448               	retlw	72
   386  046F  3475               	retlw	117
   387  0470  346D               	retlw	109
   388  0471  3469               	retlw	105
   389  0472  3400               	retlw	0
   390                           
   391                           ;initializer for _l_temp
   392  0473  3454               	retlw	84
   393  0474  3465               	retlw	101
   394  0475  346D               	retlw	109
   395  0476  3470               	retlw	112
   396  0477  3400               	retlw	0
   397                           
   398                           ;initializer for _l_date
   399  0478  3444               	retlw	68
   400  0479  3461               	retlw	97
   401  047A  3474               	retlw	116
   402  047B  3465               	retlw	101
   403  047C  3400               	retlw	0
   404                           
   405                           ;initializer for _l_time
   406  047D  3454               	retlw	84
   407  047E  3469               	retlw	105
   408  047F  346D               	retlw	109
   409  0480  3465               	retlw	101
   410  0481  3400               	retlw	0
   411                           
   412                           ;initializer for _s_date
   413  0482  3444               	retlw	68
   414  0483  3461               	retlw	97
   415  0484  3474               	retlw	116
   416  0485  3465               	retlw	101
   417  0486  3400               	retlw	0
   418                           
   419                           ;initializer for _s_time
   420  0487  3454               	retlw	84
   421  0488  3469               	retlw	105
   422  0489  346D               	retlw	109
   423  048A  3465               	retlw	101
   424  048B  3400               	retlw	0
   425                           
   426                           ;initializer for _update_humi
   427  048C  3434               	retlw	52
   428  048D  3435               	retlw	53
   429  048E  3425               	retlw	37
   430  048F  3400               	retlw	0
   431                           
   432                           ;initializer for _current_humi
   433  0490  3433               	retlw	51
   434  0491  3438               	retlw	56
   435  0492  3425               	retlw	37
   436  0493  3400               	retlw	0
   437                           
   438                           	psect	idataBANK1
   439  0389                     __pidataBANK1:
   440                           
   441                           ;initializer for _s_end
   442  0389  342D               	retlw	45
   443  038A  342D               	retlw	45
   444  038B  342D               	retlw	45
   445  038C  342D               	retlw	45
   446  038D  342D               	retlw	45
   447  038E  342D               	retlw	45
   448  038F  342D               	retlw	45
   449  0390  342D               	retlw	45
   450  0391  342D               	retlw	45
   451  0392  342D               	retlw	45
   452  0393  342D               	retlw	45
   453  0394  342D               	retlw	45
   454  0395  342D               	retlw	45
   455  0396  342D               	retlw	45
   456  0397  342D               	retlw	45
   457  0398  342D               	retlw	45
   458  0399  3400               	retlw	0
   459                           
   460                           ;initializer for _s_temp
   461  039A  3454               	retlw	84
   462  039B  3465               	retlw	101
   463  039C  346D               	retlw	109
   464  039D  3470               	retlw	112
   465  039E  3465               	retlw	101
   466  039F  3472               	retlw	114
   467  03A0  3461               	retlw	97
   468  03A1  3474               	retlw	116
   469  03A2  3475               	retlw	117
   470  03A3  3472               	retlw	114
   471  03A4  3465               	retlw	101
   472  03A5  3400               	retlw	0
   473                           
   474                           ;initializer for _date
   475  03A6  3433               	retlw	51
   476  03A7  3430               	retlw	48
   477  03A8  342F               	retlw	47
   478  03A9  3430               	retlw	48
   479  03AA  3437               	retlw	55
   480  03AB  342F               	retlw	47
   481  03AC  3439               	retlw	57
   482  03AD  3432               	retlw	50
   483  03AE  3400               	retlw	0
   484                           
   485                           ;initializer for _s_humi
   486  03AF  3448               	retlw	72
   487  03B0  3475               	retlw	117
   488  03B1  346D               	retlw	109
   489  03B2  3469               	retlw	105
   490  03B3  3464               	retlw	100
   491  03B4  3469               	retlw	105
   492  03B5  3474               	retlw	116
   493  03B6  3479               	retlw	121
   494  03B7  3400               	retlw	0
   495                           
   496                           ;initializer for _time
   497  03B8  3431               	retlw	49
   498  03B9  3432               	retlw	50
   499  03BA  343A               	retlw	58
   500  03BB  3430               	retlw	48
   501  03BC  3430               	retlw	48
   502  03BD  3450               	retlw	80
   503  03BE  344D               	retlw	77
   504  03BF  3400               	retlw	0
   505                           
   506                           ;initializer for _current_temp
   507  03C0  3432               	retlw	50
   508  03C1  3431               	retlw	49
   509  03C2  342E               	retlw	46
   510  03C3  3435               	retlw	53
   511  03C4  3400               	retlw	0
   512                           
   513                           	psect	strings
   514  053D                     __pstrings:
   515  053D                     stringtab:
   516  053D                     __stringtab:
   517  053D                     stringcode:	
   518                           ;	String table - string pointers are 1 byte each
   519                           
   520  053D                     stringdir:
   521  053D  3005               	movlw	high stringdir
   522  053E  008A               	movwf	10
   523  053F  0804               	movf	4,w
   524  0540  0A84               	incf	4,f
   525  0541  0782               	addwf	2,f
   526  0542                     __stringbase:
   527  0542  3400               	retlw	0
   528  0543                     __end_of__stringtab:
   529  0543                     _dpowers:
   530  0543  3401               	retlw	1
   531  0544  3400               	retlw	0
   532  0545  340A               	retlw	10
   533  0546  3400               	retlw	0
   534  0547  3464               	retlw	100
   535  0548  3400               	retlw	0
   536  0549  34E8               	retlw	232
   537  054A  3403               	retlw	3
   538  054B  3410               	retlw	16
   539  054C  3427               	retlw	39
   540  054D                     __end_of_dpowers:
   541  0010                     _T1CON	set	16
   542  000F                     _TMR1H	set	15
   543  000E                     _TMR1L	set	14
   544  0010                     _T1CONbits	set	16
   545  0007                     _PORTC	set	7
   546  0005                     _PORTA	set	5
   547  0019                     _CMCON0	set	25
   548  0005                     _PORTAbits	set	5
   549  0080                     _TMR1ON	set	128
   550  0060                     _TMR1IF	set	96
   551  002A                     _RA2	set	42
   552  003D                     _RC5	set	61
   553  003C                     _RC4	set	60
   554  002D                     _RA5	set	45
   555  003B                     _RC3	set	59
   556  003A                     _RC2	set	58
   557  0039                     _RC1	set	57
   558  0038                     _RC0	set	56
   559  0087                     _TRISC	set	135
   560  0085                     _TRISA	set	133
   561  0091                     _ANSEL	set	145
   562  054D                     STR_1:
   563  054D  3425               	retlw	37	;'%'
   564  054E  3464               	retlw	100	;'d'
   565  054F  342E               	retlw	46	;'.'
   566  0550  3425               	retlw	37	;'%'
   567  0551  3464               	retlw	100	;'d'
   568  0552  3400               	retlw	0
   569                           
   570                           	psect	cinit
   571  000D                     start_initialization:	
   572                           ; #config settings
   573                           
   574  000D                     __initialization:
   575                           
   576                           ; Initialize objects allocated to BANK1
   577  000D  1383               	bcf	3,7	;select IRP bank0
   578  000E  30DC               	movlw	low (__pdataBANK1+60)
   579  000F  00FD               	movwf	btemp+-1
   580  0010  3003               	movlw	high __pidataBANK1
   581  0011  00FE               	movwf	btemp
   582  0012  3089               	movlw	low __pidataBANK1
   583  0013  00FF               	movwf	btemp+1
   584  0014  30A0               	movlw	low __pdataBANK1
   585  0015  0084               	movwf	4
   586  0016  118A  25AE  118A   	fcall	init_ram0
   587                           
   588                           ; Initialize objects allocated to BANK0
   589  0019  304B               	movlw	low (__pdataBANK0+43)
   590  001A  00FD               	movwf	btemp+-1
   591  001B  3004               	movlw	high __pidataBANK0
   592  001C  00FE               	movwf	btemp
   593  001D  3069               	movlw	low __pidataBANK0
   594  001E  00FF               	movwf	btemp+1
   595  001F  3020               	movlw	low __pdataBANK0
   596  0020  0084               	movwf	4
   597  0021  118A  25AE  118A   	fcall	init_ram0
   598                           
   599                           ; Initialize objects allocated to COMMON
   600  0024  118A  25DE  118A   	fcall	__pidataCOMMON	;fetch initializer
   601  0027  00FA               	movwf	__pdataCOMMON& (0+127)
   602  0028  118A  25DF  118A   	fcall	__pidataCOMMON+1	;fetch initializer
   603  002B  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
   604                           
   605                           ; Clear objects allocated to BANK0
   606  002C  01EB               	clrf	__pbssBANK0& (0+127)
   607  002D  01EC               	clrf	(__pbssBANK0+1)& (0+127)
   608  002E  01ED               	clrf	(__pbssBANK0+2)& (0+127)
   609  002F                     end_of_initialization:	
   610                           ;End of C runtime variable initialization code
   611                           
   612  002F                     __end_of__initialization:
   613  002F  0183               	clrf	3
   614  0030  118A  290C         	ljmp	_main	;jump to C main() function
   615                           
   616                           	psect	dataCOMMON
   617  007A                     __pdataCOMMON:
   618  007A                     _temp_decimal:
   619  007A                     	ds	1
   620  007B                     _temp_integer:
   621  007B                     	ds	1
   622                           
   623                           	psect	bssBANK0
   624  006B                     __pbssBANK0:
   625  006B                     _counter:
   626  006B                     	ds	1
   627  006C                     _s_lastCLK:
   628  006C                     	ds	1
   629  006D                     _s_currentCLK:
   630  006D                     	ds	1
   631                           
   632                           	psect	dataBANK0
   633  0020                     __pdataBANK0:
   634  0020                     _update_temp:
   635  0020                     	ds	5
   636  0025                     _l_humi:
   637  0025                     	ds	5
   638  002A                     _l_temp:
   639  002A                     	ds	5
   640  002F                     _l_date:
   641  002F                     	ds	5
   642  0034                     _l_time:
   643  0034                     	ds	5
   644  0039                     _s_date:
   645  0039                     	ds	5
   646  003E                     _s_time:
   647  003E                     	ds	5
   648  0043                     _update_humi:
   649  0043                     	ds	4
   650  0047                     _current_humi:
   651  0047                     	ds	4
   652                           
   653                           	psect	dataBANK1
   654  00A0                     __pdataBANK1:
   655  00A0                     _s_end:
   656  00A0                     	ds	17
   657  00B1                     _s_temp:
   658  00B1                     	ds	12
   659  00BD                     _date:
   660  00BD                     	ds	9
   661  00C6                     _s_humi:
   662  00C6                     	ds	9
   663  00CF                     _time:
   664  00CF                     	ds	8
   665  00D7                     _current_temp:
   666  00D7                     	ds	5
   667                           
   668                           	psect	inittext
   669  05AA                     init_fetch0:	
   670                           ;	Called with low address in FSR and high address in W
   671                           
   672  05AA  087E               	movf	btemp,w
   673  05AB  008A               	movwf	10
   674  05AC  087F               	movf	btemp+1,w
   675  05AD  0082               	movwf	2
   676  05AE                     init_ram0:	
   677                           ;Called with:
   678                           ;	high address of idata address in btemp 
   679                           ;	low address of idata address in btemp+1 
   680                           ;	low address of data in FSR
   681                           ;	high address + 1 of data in btemp-1
   682                           
   683  05AE  118A  25AA  118A   	fcall	init_fetch0
   684  05B1  0080               	movwf	0
   685  05B2  0A84               	incf	4,f
   686  05B3  0804               	movf	4,w
   687  05B4  067D               	xorwf	btemp+-1,w
   688  05B5  1903               	btfsc	3,2
   689  05B6  3400               	retlw	0
   690  05B7  0AFF               	incf	btemp+1,f
   691  05B8  1903               	btfsc	3,2
   692  05B9  0AFE               	incf	btemp,f
   693  05BA  2DAE               	goto	init_ram0
   694                           
   695                           	psect	cstackCOMMON
   696  0070                     __pcstackCOMMON:
   697  0070                     ?_isr:
   698  0070                     ??_isr:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?___lcd_en_pulse:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?___lcd_port_write:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?___lcd_cmd:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?___lcd_send_char:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_LCD_send_string:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_LCD_display_clear:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?_LCD_Init:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ?_Draw_main_display_p1:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ?_Draw_main_display_p2:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ?_set_temp:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ?_set_humi:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ?_set_time:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ?_set_date:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ?_main:	
   741                           ; 1 bytes @ 0x0
   742                           
   743                           
   744                           ; 1 bytes @ 0x0
   745  0070                     	ds	2
   746  0072                     ??___lcd_en_pulse:
   747  0072                     ??___lcd_port_write:	
   748                           ; 1 bytes @ 0x2
   749                           
   750  0072                     ??_set_humi:	
   751                           ; 1 bytes @ 0x2
   752                           
   753  0072                     ??_set_time:	
   754                           ; 1 bytes @ 0x2
   755                           
   756  0072                     ??_set_date:	
   757                           ; 1 bytes @ 0x2
   758                           
   759  0072                     ?___lwdiv:	
   760                           ; 1 bytes @ 0x2
   761                           
   762  0072                     ___lcd_port_write@data:	
   763                           ; 2 bytes @ 0x2
   764                           
   765  0072                     ___lwdiv@divisor:	
   766                           ; 1 bytes @ 0x2
   767                           
   768                           
   769                           ; 2 bytes @ 0x2
   770  0072                     	ds	1
   771  0073                     ??___lcd_cmd:
   772  0073                     ??___lcd_send_char:	
   773                           ; 1 bytes @ 0x3
   774                           
   775  0073                     ___lcd_cmd@cmd:	
   776                           ; 1 bytes @ 0x3
   777                           
   778                           
   779                           ; 1 bytes @ 0x3
   780  0073                     	ds	1
   781  0074                     ?_LCD_display_ctrl:
   782  0074                     ?_LCD_set_cursor:	
   783                           ; 1 bytes @ 0x4
   784                           
   785  0074                     ??_LCD_Init:	
   786                           ; 1 bytes @ 0x4
   787                           
   788  0074                     LCD_display_ctrl@cursor:	
   789                           ; 1 bytes @ 0x4
   790                           
   791  0074                     LCD_set_cursor@column:	
   792                           ; 1 bytes @ 0x4
   793                           
   794  0074                     ___lwdiv@dividend:	
   795                           ; 1 bytes @ 0x4
   796                           
   797                           
   798                           ; 2 bytes @ 0x4
   799  0074                     	ds	1
   800  0075                     ??_LCD_set_cursor:
   801  0075                     ___lcd_send_char@high:	
   802                           ; 1 bytes @ 0x5
   803                           
   804  0075                     LCD_display_ctrl@blink:	
   805                           ; 1 bytes @ 0x5
   806                           
   807                           
   808                           ; 1 bytes @ 0x5
   809  0075                     	ds	1
   810  0076                     ??_LCD_display_ctrl:
   811  0076                     ??___lwdiv:	
   812                           ; 1 bytes @ 0x6
   813                           
   814  0076                     ___lcd_send_char@low:	
   815                           ; 1 bytes @ 0x6
   816                           
   817  0076                     LCD_set_cursor@temp:	
   818                           ; 1 bytes @ 0x6
   819                           
   820                           
   821                           ; 1 bytes @ 0x6
   822  0076                     	ds	1
   823  0077                     ___lcd_send_char@ascii:
   824  0077                     LCD_display_ctrl@display:	
   825                           ; 1 bytes @ 0x7
   826                           
   827  0077                     LCD_set_cursor@row:	
   828                           ; 1 bytes @ 0x7
   829                           
   830  0077                     ___lwdiv@quotient:	
   831                           ; 1 bytes @ 0x7
   832                           
   833                           
   834                           ; 2 bytes @ 0x7
   835  0077                     	ds	1
   836  0078                     ??_LCD_send_string:
   837  0078                     ??_LCD_display_clear:	
   838                           ; 1 bytes @ 0x8
   839                           
   840  0078                     LCD_display_ctrl@temp:	
   841                           ; 1 bytes @ 0x8
   842                           
   843                           
   844                           ; 1 bytes @ 0x8
   845  0078                     	ds	1
   846  0079                     ??_Draw_main_display_p1:
   847  0079                     LCD_display_clear@i:	
   848                           ; 1 bytes @ 0x9
   849                           
   850  0079                     ___lwdiv@counter:	
   851                           ; 1 bytes @ 0x9
   852                           
   853                           
   854                           ; 1 bytes @ 0x9
   855  0079                     	ds	1
   856  007A                     ??_Draw_settings_display:
   857                           
   858                           	psect	cstackBANK0
   859  004B                     __pcstackBANK0:	
   860                           ; 1 bytes @ 0xA
   861                           
   862  004B                     ?___lwmod:
   863  004B                     LCD_send_string@i:	
   864                           ; 2 bytes @ 0x0
   865                           
   866  004B                     ___lwmod@divisor:	
   867                           ; 1 bytes @ 0x0
   868                           
   869                           
   870                           ; 2 bytes @ 0x0
   871  004B                     	ds	1
   872  004C                     LCD_send_string@string:
   873                           
   874                           ; 1 bytes @ 0x1
   875  004C                     	ds	1
   876  004D                     ??_Draw_main_display_p2:
   877  004D                     ?_Draw_settings_display:	
   878                           ; 1 bytes @ 0x2
   879                           
   880  004D                     Draw_settings_display@ctr:	
   881                           ; 1 bytes @ 0x2
   882                           
   883  004D                     ___lwmod@dividend:	
   884                           ; 2 bytes @ 0x2
   885                           
   886                           
   887                           ; 2 bytes @ 0x2
   888  004D                     	ds	2
   889  004F                     ??___lwmod:
   890                           
   891                           ; 1 bytes @ 0x4
   892  004F                     	ds	1
   893  0050                     ___lwmod@counter:
   894                           
   895                           ; 1 bytes @ 0x5
   896  0050                     	ds	1
   897  0051                     ?_sprintf:
   898  0051                     sprintf@f:	
   899                           ; 2 bytes @ 0x6
   900                           
   901                           
   902                           ; 1 bytes @ 0x6
   903  0051                     	ds	5
   904  0056                     ??_sprintf:
   905                           
   906                           ; 1 bytes @ 0xB
   907  0056                     	ds	3
   908  0059                     sprintf@ap:
   909                           
   910                           ; 1 bytes @ 0xE
   911  0059                     	ds	1
   912  005A                     sprintf@flag:
   913                           
   914                           ; 1 bytes @ 0xF
   915  005A                     	ds	1
   916  005B                     sprintf@prec:
   917                           
   918                           ; 1 bytes @ 0x10
   919  005B                     	ds	1
   920  005C                     sprintf@val:
   921                           
   922                           ; 2 bytes @ 0x11
   923  005C                     	ds	2
   924  005E                     sprintf@sp:
   925                           
   926                           ; 1 bytes @ 0x13
   927  005E                     	ds	1
   928  005F                     sprintf@c:
   929                           
   930                           ; 1 bytes @ 0x14
   931  005F                     	ds	1
   932  0060                     ??_set_temp:
   933                           
   934                           ; 1 bytes @ 0x15
   935  0060                     	ds	5
   936  0065                     set_temp@temp_integer:
   937                           
   938                           ; 1 bytes @ 0x1A
   939  0065                     	ds	1
   940  0066                     set_temp@temp_decimal:
   941                           
   942                           ; 1 bytes @ 0x1B
   943  0066                     	ds	1
   944  0067                     ??_main:
   945                           
   946                           ; 1 bytes @ 0x1C
   947  0067                     	ds	2
   948  0069                     main@lastCLK:
   949                           
   950                           ; 1 bytes @ 0x1E
   951  0069                     	ds	1
   952  006A                     main@currentCLK:
   953                           
   954                           ; 1 bytes @ 0x1F
   955  006A                     	ds	1
   956                           
   957                           	psect	maintext
   958  010C                     __pmaintext:	
   959 ;;
   960 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   961 ;;
   962 ;; *************** function _main *****************
   963 ;; Defined at:
   964 ;;		line 395 in file "main.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;		None
   967 ;; Auto vars:     Size  Location     Type
   968 ;;  currentCLK      1   31[BANK0 ] unsigned char 
   969 ;;  lastCLK         1   30[BANK0 ] unsigned char 
   970 ;; Return value:  Size  Location     Type
   971 ;;                  1    wreg      void 
   972 ;; Registers used:
   973 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   974 ;; Tracked objects:
   975 ;;		On entry : B00/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   979 ;;      Params:         0       0       0       0
   980 ;;      Locals:         0       2       0       0
   981 ;;      Temps:          0       2       0       0
   982 ;;      Totals:         0       4       0       0
   983 ;;Total ram usage:        4 bytes
   984 ;; Hardware stack levels required when called:    6
   985 ;; This function calls:
   986 ;;		_Draw_main_display_p1
   987 ;;		_Draw_main_display_p2
   988 ;;		_Draw_settings_display
   989 ;;		_LCD_Init
   990 ;;		_LCD_display_clear
   991 ;;		_LCD_display_ctrl
   992 ;;		_set_date
   993 ;;		_set_humi
   994 ;;		_set_temp
   995 ;;		_set_time
   996 ;; This function is called by:
   997 ;;		Startup code after reset
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           
  1002                           ;psect for function _main
  1003  010C                     _main:
  1004  010C                     l2185:	
  1005                           ;incstack = 0
  1006                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1007                           
  1008                           
  1009                           ;main.c: 397:     ANSEL = 0x00;
  1010  010C  1683               	bsf	3,5	;RP0=1, select bank1
  1011  010D  1303               	bcf	3,6	;RP1=0, select bank1
  1012  010E  0191               	clrf	17	;volatile
  1013  010F                     l2187:
  1014                           
  1015                           ;main.c: 398:     CMCON0 = 0x07;
  1016  010F  3007               	movlw	7
  1017  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1018  0111  1303               	bcf	3,6	;RP1=0, select bank0
  1019  0112  0099               	movwf	25	;volatile
  1020  0113                     l2189:
  1021                           
  1022                           ;main.c: 400:     TRISA = 0x04;
  1023  0113  3004               	movlw	4
  1024  0114  1683               	bsf	3,5	;RP0=1, select bank1
  1025  0115  1303               	bcf	3,6	;RP1=0, select bank1
  1026  0116  0085               	movwf	5	;volatile
  1027                           
  1028                           ;main.c: 401:     PORTA = 0x00;
  1029  0117  1283               	bcf	3,5	;RP0=0, select bank0
  1030  0118  1303               	bcf	3,6	;RP1=0, select bank0
  1031  0119  0185               	clrf	5	;volatile
  1032  011A                     l2191:
  1033                           
  1034                           ;main.c: 403:     TRISC = 0x30;
  1035  011A  3030               	movlw	48
  1036  011B  1683               	bsf	3,5	;RP0=1, select bank1
  1037  011C  1303               	bcf	3,6	;RP1=0, select bank1
  1038  011D  0087               	movwf	7	;volatile
  1039  011E                     l2193:
  1040                           
  1041                           ;main.c: 404:     PORTC = 0x00;
  1042  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1043  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1044  0120  0187               	clrf	7	;volatile
  1045  0121                     l2195:
  1046                           
  1047                           ;main.c: 406:     T1CONbits.TMR1ON = 0;
  1048  0121  1010               	bcf	16,0	;volatile
  1049  0122                     l2197:
  1050                           
  1051                           ;main.c: 407:     TMR1L = 0x00;
  1052  0122  018E               	clrf	14	;volatile
  1053  0123                     l2199:
  1054                           
  1055                           ;main.c: 408:     TMR1H = 0x00;
  1056  0123  018F               	clrf	15	;volatile
  1057                           
  1058                           ;main.c: 409:     T1CON = 0x30;
  1059  0124  3030               	movlw	48
  1060  0125  0090               	movwf	16	;volatile
  1061  0126                     l2201:
  1062                           
  1063                           ;main.c: 410:     TMR1IF = 0;
  1064  0126  100C               	bcf	12,0	;volatile
  1065  0127                     l2203:
  1066                           
  1067                           ;main.c: 412:     LCD_Init();
  1068  0127  118A  22FE  118A   	fcall	_LCD_Init
  1069  012A                     l2205:
  1070                           
  1071                           ;main.c: 414:     LCD_display_ctrl(1,0,0);
  1072  012A  01F4               	clrf	LCD_display_ctrl@cursor
  1073  012B  01F5               	clrf	LCD_display_ctrl@blink
  1074  012C  3001               	movlw	1
  1075  012D  118A  24B9  118A   	fcall	_LCD_display_ctrl
  1076  0130                     l198:
  1077  0130  1283               	bcf	3,5	;RP0=0, select bank0
  1078  0131  1303               	bcf	3,6	;RP1=0, select bank0
  1079  0132  1905               	btfsc	5,2	;volatile
  1080  0133  2935               	goto	u1771
  1081  0134  2936               	goto	u1770
  1082  0135                     u1771:
  1083  0135  2930               	goto	l198
  1084  0136                     u1770:
  1085  0136                     l200:
  1086                           
  1087                           ;main.c: 421:         TMR1ON = 0;
  1088  0136  1010               	bcf	16,0	;volatile
  1089  0137                     l2207:
  1090                           
  1091                           ;main.c: 422:         TMR1L = 0x00;
  1092  0137  018E               	clrf	14	;volatile
  1093                           
  1094                           ;main.c: 423:         TMR1H = 0x00;
  1095  0138  018F               	clrf	15	;volatile
  1096  0139                     l2209:
  1097                           
  1098                           ;main.c: 424:         TMR1IF = 0;
  1099  0139  100C               	bcf	12,0	;volatile
  1100  013A                     l2211:
  1101                           
  1102                           ;main.c: 425:         Draw_main_display_p1();
  1103  013A  118A  2401  118A   	fcall	_Draw_main_display_p1
  1104  013D                     l2213:
  1105                           
  1106                           ;main.c: 426:         if(RA2)
  1107  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1108  013E  1303               	bcf	3,6	;RP1=0, select bank0
  1109  013F  1D05               	btfss	5,2	;volatile
  1110  0140  2942               	goto	u1781
  1111  0141  2943               	goto	u1780
  1112  0142                     u1781:
  1113  0142  2930               	goto	l198
  1114  0143                     u1780:
  1115  0143                     l2215:
  1116                           
  1117                           ;main.c: 427:         {;main.c: 428:             T1CONbits.TMR1ON = 1;
  1118  0143  1410               	bsf	16,0	;volatile
  1119  0144                     l202:	
  1120                           ;main.c: 429:             while(RA2);
  1121                           
  1122  0144  1905               	btfsc	5,2	;volatile
  1123  0145  2947               	goto	u1791
  1124  0146  2948               	goto	u1790
  1125  0147                     u1791:
  1126  0147  2944               	goto	l202
  1127  0148                     u1790:
  1128  0148                     l204:
  1129                           
  1130                           ;main.c: 430:             if(TMR1IF)
  1131  0148  1C0C               	btfss	12,0	;volatile
  1132  0149  294B               	goto	u1801
  1133  014A  294C               	goto	u1800
  1134  014B                     u1801:
  1135  014B  29D1               	goto	l2275
  1136  014C                     u1800:
  1137  014C                     l2217:
  1138                           
  1139                           ;main.c: 431:             {;main.c: 432:                 TMR1ON = 0;
  1140  014C  1010               	bcf	16,0	;volatile
  1141  014D                     l2219:
  1142                           
  1143                           ;main.c: 433:                 TMR1L = 0x00;
  1144  014D  018E               	clrf	14	;volatile
  1145                           
  1146                           ;main.c: 434:                 TMR1H = 0x00;
  1147  014E  018F               	clrf	15	;volatile
  1148  014F                     l2221:
  1149                           
  1150                           ;main.c: 435:                 TMR1IF = 0;
  1151  014F  100C               	bcf	12,0	;volatile
  1152                           
  1153                           ;main.c: 436:                 while(!TMR1IF)
  1154  0150  29C9               	goto	l2271
  1155  0151                     l2223:
  1156                           
  1157                           ;main.c: 437:                 {;main.c: 438:                     currentCLK = RC4;
  1158  0151  3000               	movlw	0
  1159  0152  1A07               	btfsc	7,4	;volatile
  1160  0153  3001               	movlw	1
  1161  0154  00EA               	movwf	main@currentCLK
  1162  0155                     l2225:
  1163                           
  1164                           ;main.c: 439:                     if(currentCLK != lastCLK && currentCLK == 1)
  1165  0155  086A               	movf	main@currentCLK,w
  1166  0156  0669               	xorwf	main@lastCLK,w
  1167  0157  1903               	skipnz
  1168  0158  295A               	goto	u1811
  1169  0159  295B               	goto	u1810
  1170  015A                     u1811:
  1171  015A  298B               	goto	l2247
  1172  015B                     u1810:
  1173  015B                     l2227:
  1174  015B  036A               	decf	main@currentCLK,w
  1175  015C  1D03               	btfss	3,2
  1176  015D  295F               	goto	u1821
  1177  015E  2960               	goto	u1820
  1178  015F                     u1821:
  1179  015F  298B               	goto	l2247
  1180  0160                     u1820:
  1181  0160                     l2229:
  1182                           
  1183                           ;main.c: 440:                     {;main.c: 441:                         if (RC5 != curr
      +                          entCLK)
  1184  0160  3000               	movlw	0
  1185  0161  1A87               	btfsc	7,5	;volatile
  1186  0162  3001               	movlw	1
  1187  0163  066A               	xorwf	main@currentCLK,w
  1188  0164  1903               	skipnz
  1189  0165  2967               	goto	u1831
  1190  0166  2968               	goto	u1830
  1191  0167                     u1831:
  1192  0167  2982               	goto	l2239
  1193  0168                     u1830:
  1194  0168                     l2231:
  1195                           
  1196                           ;main.c: 442:                         {;main.c: 443:                             if(coun
      +                          ter < 3)
  1197  0168  3003               	movlw	3
  1198  0169  026B               	subwf	_counter,w	;volatile
  1199  016A  1803               	skipnc
  1200  016B  296D               	goto	u1841
  1201  016C  296E               	goto	u1840
  1202  016D                     u1841:
  1203  016D  297D               	goto	l2237
  1204  016E                     u1840:
  1205  016E                     l2233:
  1206                           
  1207                           ;main.c: 444:                             {;main.c: 445:                                
      +                           counter++;
  1208  016E  3001               	movlw	1
  1209  016F  00E7               	movwf	??_main
  1210  0170  0867               	movf	??_main,w
  1211  0171  07EB               	addwf	_counter,f	;volatile
  1212  0172                     l2235:
  1213                           
  1214                           ;main.c: 446:                                 Draw_settings_display(counter);
  1215  0172  086B               	movf	_counter,w	;volatile
  1216  0173  00E7               	movwf	??_main
  1217  0174  01E8               	clrf	??_main+1
  1218  0175  0867               	movf	??_main,w
  1219  0176  00CD               	movwf	Draw_settings_display@ctr
  1220  0177  0868               	movf	??_main+1,w
  1221  0178  00CE               	movwf	Draw_settings_display@ctr+1
  1222  0179  118A  2279  118A   	fcall	_Draw_settings_display
  1223                           
  1224                           ;main.c: 447:                             }
  1225  017C  298B               	goto	l2247
  1226  017D                     l2237:
  1227                           
  1228                           ;main.c: 449:                             {;main.c: 450:                                
      +                           counter = 3;
  1229  017D  3003               	movlw	3
  1230  017E  00E7               	movwf	??_main
  1231  017F  0867               	movf	??_main,w
  1232  0180  00EB               	movwf	_counter	;volatile
  1233  0181  298B               	goto	l2247
  1234  0182                     l2239:
  1235                           
  1236                           ;main.c: 454:                         {;main.c: 455:                             if(coun
      +                          ter > 0)
  1237  0182  086B               	movf	_counter,w	;volatile
  1238  0183  1903               	btfsc	3,2
  1239  0184  2986               	goto	u1851
  1240  0185  2987               	goto	u1850
  1241  0186                     u1851:
  1242  0186  298A               	goto	l2245
  1243  0187                     u1850:
  1244  0187                     l2241:
  1245                           
  1246                           ;main.c: 456:                             {;main.c: 457:                                
      +                           counter--;
  1247  0187  3001               	movlw	1
  1248  0188  02EB               	subwf	_counter,f	;volatile
  1249  0189  2972               	goto	l2235
  1250  018A                     l2245:
  1251                           
  1252                           ;main.c: 461:                             {;main.c: 462:                                
      +                           counter = 0;
  1253  018A  01EB               	clrf	_counter	;volatile
  1254  018B                     l2247:
  1255                           
  1256                           ;main.c: 466:                     lastCLK = currentCLK;
  1257  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1258  018C  1303               	bcf	3,6	;RP1=0, select bank0
  1259  018D  086A               	movf	main@currentCLK,w
  1260  018E  00E7               	movwf	??_main
  1261  018F  0867               	movf	??_main,w
  1262  0190  00E9               	movwf	main@lastCLK
  1263  0191                     l2249:
  1264                           
  1265                           ;main.c: 467:                     if(RA2)
  1266  0191  1D05               	btfss	5,2	;volatile
  1267  0192  2994               	goto	u1861
  1268  0193  2995               	goto	u1860
  1269  0194                     u1861:
  1270  0194  29C9               	goto	l2271
  1271  0195                     u1860:
  1272  0195                     l2251:
  1273                           
  1274                           ;main.c: 468:                     {;main.c: 469:                         TMR1ON = 1;
  1275  0195  1410               	bsf	16,0	;volatile
  1276  0196                     l216:	
  1277                           ;main.c: 470:                         while(RA2);
  1278                           
  1279  0196  1905               	btfsc	5,2	;volatile
  1280  0197  2999               	goto	u1871
  1281  0198  299A               	goto	u1870
  1282  0199                     u1871:
  1283  0199  2996               	goto	l216
  1284  019A                     u1870:
  1285  019A                     l218:
  1286                           
  1287                           ;main.c: 471:                         if(TMR1IF == 0)
  1288  019A  180C               	btfsc	12,0	;volatile
  1289  019B  299D               	goto	u1881
  1290  019C  299E               	goto	u1880
  1291  019D                     u1881:
  1292  019D  29C4               	goto	l227
  1293  019E                     u1880:
  1294  019E                     l2253:
  1295                           
  1296                           ;main.c: 472:                         {;main.c: 473:                             if(coun
      +                          ter == 0)
  1297  019E  086B               	movf	_counter,w	;volatile
  1298  019F  1D03               	btfss	3,2
  1299  01A0  29A2               	goto	u1891
  1300  01A1  29A3               	goto	u1890
  1301  01A2                     u1891:
  1302  01A2  29A7               	goto	l2257
  1303  01A3                     u1890:
  1304  01A3                     l2255:
  1305                           
  1306                           ;main.c: 474:                             {;main.c: 475:                                
      +                           set_time();
  1307  01A3  118A  2553  118A   	fcall	_set_time
  1308                           
  1309                           ;main.c: 476:                             }
  1310  01A6  29C4               	goto	l227
  1311  01A7                     l2257:
  1312  01A7  036B               	decf	_counter,w	;volatile
  1313  01A8  1D03               	btfss	3,2
  1314  01A9  29AB               	goto	u1901
  1315  01AA  29AC               	goto	u1900
  1316  01AB                     u1901:
  1317  01AB  29B0               	goto	l2261
  1318  01AC                     u1900:
  1319  01AC                     l2259:
  1320                           
  1321                           ;main.c: 478:                             {;main.c: 479:                                
      +                           set_date();
  1322  01AC  118A  257F  118A   	fcall	_set_date
  1323                           
  1324                           ;main.c: 480:                             }
  1325  01AF  29C4               	goto	l227
  1326  01B0                     l2261:
  1327  01B0  3002               	movlw	2
  1328  01B1  066B               	xorwf	_counter,w	;volatile
  1329  01B2  1D03               	btfss	3,2
  1330  01B3  29B5               	goto	u1911
  1331  01B4  29B6               	goto	u1910
  1332  01B5                     u1911:
  1333  01B5  29BA               	goto	l2265
  1334  01B6                     u1910:
  1335  01B6                     l2263:
  1336                           
  1337                           ;main.c: 482:                             {;main.c: 483:                                
      +                           set_temp();
  1338  01B6  118A  21DD  118A   	fcall	_set_temp
  1339                           
  1340                           ;main.c: 484:                             }
  1341  01B9  29C4               	goto	l227
  1342  01BA                     l2265:
  1343  01BA  3003               	movlw	3
  1344  01BB  066B               	xorwf	_counter,w	;volatile
  1345  01BC  1D03               	btfss	3,2
  1346  01BD  29BF               	goto	u1921
  1347  01BE  29C0               	goto	u1920
  1348  01BF                     u1921:
  1349  01BF  29C4               	goto	l223
  1350  01C0                     u1920:
  1351  01C0                     l2267:
  1352                           
  1353                           ;main.c: 486:                             {;main.c: 487:                                
      +                           set_humi();
  1354  01C0  118A  2569  118A   	fcall	_set_humi
  1355  01C3  29C4               	goto	l227
  1356  01C4                     l223:
  1357  01C4                     l227:	
  1358                           ;main.c: 491:                         {;main.c: 493:                         }
  1359                           
  1360                           
  1361                           ;main.c: 494:                         TMR1ON = 0;
  1362  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  1363  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  1364  01C6  1010               	bcf	16,0	;volatile
  1365  01C7                     l2269:
  1366                           
  1367                           ;main.c: 495:                         TMR1L = 0x00;
  1368  01C7  018E               	clrf	14	;volatile
  1369                           
  1370                           ;main.c: 496:                         TMR1H = 0x00;
  1371  01C8  018F               	clrf	15	;volatile
  1372  01C9                     l2271:
  1373                           
  1374                           ;main.c: 436:                 while(!TMR1IF)
  1375  01C9  1C0C               	btfss	12,0	;volatile
  1376  01CA  29CC               	goto	u1931
  1377  01CB  29CD               	goto	u1930
  1378  01CC                     u1931:
  1379  01CC  2951               	goto	l2223
  1380  01CD                     u1930:
  1381  01CD                     l2273:
  1382                           
  1383                           ;main.c: 499:                 LCD_display_clear();
  1384  01CD  118A  2595  118A   	fcall	_LCD_display_clear
  1385                           
  1386                           ;main.c: 500:             }
  1387  01D0  2930               	goto	l198
  1388  01D1                     l2275:
  1389                           
  1390                           ;main.c: 502:             {;main.c: 503:                 Draw_main_display_p2();
  1391  01D1  118A  2437  118A   	fcall	_Draw_main_display_p2
  1392  01D4                     l230:	
  1393                           ;main.c: 504:                 while(!RA2);
  1394                           
  1395  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  1396  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  1397  01D6  1D05               	btfss	5,2	;volatile
  1398  01D7  29D9               	goto	u1941
  1399  01D8  29DA               	goto	u1940
  1400  01D9                     u1941:
  1401  01D9  29D4               	goto	l230
  1402  01DA                     u1940:
  1403  01DA  29CD               	goto	l2273
  1404  01DB  118A  280B         	ljmp	start
  1405  01DD                     __end_of_main:
  1406                           
  1407                           	psect	text1
  1408  0553                     __ptext1:	
  1409 ;; *************** function _set_time *****************
  1410 ;; Defined at:
  1411 ;;		line 360 in file "main.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;		None
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;		None
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      void 
  1418 ;; Registers used:
  1419 ;;		wreg, status,2, status,0
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1425 ;;      Params:         0       0       0       0
  1426 ;;      Locals:         0       0       0       0
  1427 ;;      Temps:          1       0       0       0
  1428 ;;      Totals:         1       0       0       0
  1429 ;;Total ram usage:        1 bytes
  1430 ;; Hardware stack levels used:    1
  1431 ;; Hardware stack levels required when called:    1
  1432 ;; This function calls:
  1433 ;;		Nothing
  1434 ;; This function is called by:
  1435 ;;		_main
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           
  1440                           ;psect for function _set_time
  1441  0553                     _set_time:
  1442  0553                     l1711:	
  1443                           ;incstack = 0
  1444                           ; Regs used in _set_time: [wreg+status,2+status,0]
  1445                           
  1446                           
  1447                           ;main.c: 362:     s_currentCLK = RC4;
  1448  0553  3000               	movlw	0
  1449  0554  1283               	bcf	3,5	;RP0=0, select bank0
  1450  0555  1303               	bcf	3,6	;RP1=0, select bank0
  1451  0556  1A07               	btfsc	7,4	;volatile
  1452  0557  3001               	movlw	1
  1453  0558  00ED               	movwf	_s_currentCLK
  1454  0559                     l1713:
  1455                           
  1456                           ;main.c: 363:     if(s_currentCLK != s_lastCLK && s_currentCLK == 1)
  1457  0559  086D               	movf	_s_currentCLK,w
  1458  055A  066C               	xorwf	_s_lastCLK,w
  1459  055B  1903               	skipnz
  1460  055C  2D5E               	goto	u1161
  1461  055D  2D5F               	goto	u1160
  1462  055E                     u1161:
  1463  055E  2D64               	goto	l1721
  1464  055F                     u1160:
  1465  055F                     l1715:
  1466  055F  036D               	decf	_s_currentCLK,w
  1467  0560  1D03               	btfss	3,2
  1468  0561  2D63               	goto	u1171
  1469  0562  2D64               	goto	u1170
  1470  0563                     u1171:
  1471  0563  2D64               	goto	l1721
  1472  0564                     u1170:
  1473  0564                     l1717:
  1474  0564                     l1721:	
  1475                           ;main.c: 364:     {;main.c: 365:         if(RC5 != s_currentCLK)
  1476                           
  1477                           
  1478                           ;main.c: 374:     s_lastCLK = s_currentCLK;
  1479  0564  086D               	movf	_s_currentCLK,w
  1480  0565  00F2               	movwf	??_set_time
  1481  0566  0872               	movf	??_set_time,w
  1482  0567  00EC               	movwf	_s_lastCLK
  1483  0568                     l186:
  1484  0568  0008               	return
  1485  0569                     __end_of_set_time:
  1486                           
  1487                           	psect	text2
  1488  01DD                     __ptext2:	
  1489 ;; *************** function _set_temp *****************
  1490 ;; Defined at:
  1491 ;;		line 285 in file "main.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;		None
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;  temp_decimal    1   27[BANK0 ] unsigned char 
  1496 ;;  temp_integer    1   26[BANK0 ] unsigned char 
  1497 ;; Return value:  Size  Location     Type
  1498 ;;                  1    wreg      void 
  1499 ;; Registers used:
  1500 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1501 ;; Tracked objects:
  1502 ;;		On entry : 0/0
  1503 ;;		On exit  : 0/0
  1504 ;;		Unchanged: 0/0
  1505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1506 ;;      Params:         0       0       0       0
  1507 ;;      Locals:         0       2       0       0
  1508 ;;      Temps:          0       5       0       0
  1509 ;;      Totals:         0       7       0       0
  1510 ;;Total ram usage:        7 bytes
  1511 ;; Hardware stack levels used:    1
  1512 ;; Hardware stack levels required when called:    5
  1513 ;; This function calls:
  1514 ;;		_LCD_display_clear
  1515 ;;		_LCD_send_string
  1516 ;;		_LCD_set_cursor
  1517 ;;		_sprintf
  1518 ;; This function is called by:
  1519 ;;		_main
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523                           
  1524                           ;psect for function _set_temp
  1525  01DD                     _set_temp:
  1526  01DD                     l2123:	
  1527                           ;incstack = 0
  1528                           ; Regs used in _set_temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1529                           
  1530                           
  1531                           ;main.c: 287:     uint8_t temp_integer = 23;
  1532  01DD  3017               	movlw	23
  1533  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  1534  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  1535  01E0  00E0               	movwf	??_set_temp
  1536  01E1  0860               	movf	??_set_temp,w
  1537  01E2  00E5               	movwf	set_temp@temp_integer
  1538                           
  1539                           ;main.c: 288:     uint8_t temp_decimal = 5;
  1540  01E3  3005               	movlw	5
  1541  01E4  00E0               	movwf	??_set_temp
  1542  01E5  0860               	movf	??_set_temp,w
  1543  01E6  00E6               	movwf	set_temp@temp_decimal
  1544  01E7                     l2125:
  1545                           
  1546                           ;main.c: 290:     LCD_display_clear();
  1547  01E7  118A  2595  118A   	fcall	_LCD_display_clear
  1548  01EA                     l2127:
  1549                           
  1550                           ;main.c: 292:     LCD_set_cursor(0,0);
  1551  01EA  01F4               	clrf	LCD_set_cursor@column
  1552  01EB  3000               	movlw	0
  1553  01EC  118A  2520  118A   	fcall	_LCD_set_cursor
  1554  01EF                     l2129:
  1555                           
  1556                           ;main.c: 293:     LCD_send_string(s_temp);
  1557  01EF  30B1               	movlw	(low (_s_temp| 0))& (0+255)
  1558  01F0  118A  24FF  118A   	fcall	_LCD_send_string
  1559  01F3                     l2131:
  1560                           
  1561                           ;main.c: 295:     LCD_set_cursor(0,12);
  1562  01F3  300C               	movlw	12
  1563  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1564  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  1565  01F6  00E0               	movwf	??_set_temp
  1566  01F7  0860               	movf	??_set_temp,w
  1567  01F8  00F4               	movwf	LCD_set_cursor@column
  1568  01F9  3000               	movlw	0
  1569  01FA  118A  2520  118A   	fcall	_LCD_set_cursor
  1570  01FD                     l2133:
  1571                           
  1572                           ;main.c: 296:     LCD_send_string(update_temp);
  1573  01FD  3020               	movlw	(low (_update_temp| 0))& (0+255)
  1574  01FE  118A  24FF  118A   	fcall	_LCD_send_string
  1575                           
  1576                           ;main.c: 298:     while(!RA2)
  1577  0201  2A72               	goto	l2171
  1578  0202                     l2135:
  1579                           
  1580                           ;main.c: 299:     {;main.c: 300:         s_currentCLK = RC4;
  1581  0202  3000               	movlw	0
  1582  0203  1A07               	btfsc	7,4	;volatile
  1583  0204  3001               	movlw	1
  1584  0205  00ED               	movwf	_s_currentCLK
  1585  0206                     l2137:
  1586                           
  1587                           ;main.c: 301:         if(s_currentCLK != s_lastCLK && s_currentCLK == 1)
  1588  0206  086D               	movf	_s_currentCLK,w
  1589  0207  066C               	xorwf	_s_lastCLK,w
  1590  0208  1903               	skipnz
  1591  0209  2A0B               	goto	u1681
  1592  020A  2A0C               	goto	u1680
  1593  020B                     u1681:
  1594  020B  2A4A               	goto	l2163
  1595  020C                     u1680:
  1596  020C                     l2139:
  1597  020C  036D               	decf	_s_currentCLK,w
  1598  020D  1D03               	btfss	3,2
  1599  020E  2A10               	goto	u1691
  1600  020F  2A11               	goto	u1690
  1601  0210                     u1691:
  1602  0210  2A4A               	goto	l2163
  1603  0211                     u1690:
  1604  0211                     l2141:
  1605                           
  1606                           ;main.c: 302:         {;main.c: 303:             if(RC5 != s_currentCLK)
  1607  0211  3000               	movlw	0
  1608  0212  1A87               	btfsc	7,5	;volatile
  1609  0213  3001               	movlw	1
  1610  0214  066D               	xorwf	_s_currentCLK,w
  1611  0215  1903               	skipnz
  1612  0216  2A18               	goto	u1701
  1613  0217  2A19               	goto	u1700
  1614  0218                     u1701:
  1615  0218  2A35               	goto	l2153
  1616  0219                     u1700:
  1617  0219                     l2143:
  1618                           
  1619                           ;main.c: 304:             {;main.c: 305:                 temp_decimal = temp_decimal + 5
      +                          ;
  1620  0219  0866               	movf	set_temp@temp_decimal,w
  1621  021A  3E05               	addlw	5
  1622  021B  00E0               	movwf	??_set_temp
  1623  021C  0860               	movf	??_set_temp,w
  1624  021D  00E6               	movwf	set_temp@temp_decimal
  1625                           
  1626                           ;main.c: 306:                 if(temp_decimal == 10)
  1627  021E  300A               	movlw	10
  1628  021F  0666               	xorwf	set_temp@temp_decimal,w
  1629  0220  1D03               	btfss	3,2
  1630  0221  2A23               	goto	u1711
  1631  0222  2A24               	goto	u1710
  1632  0223                     u1711:
  1633  0223  2A4A               	goto	l2163
  1634  0224                     u1710:
  1635  0224                     l2145:
  1636                           
  1637                           ;main.c: 307:                 {;main.c: 308:                     temp_decimal = 0;
  1638  0224  01E6               	clrf	set_temp@temp_decimal
  1639  0225                     l2147:
  1640                           
  1641                           ;main.c: 309:                     if(temp_integer < 100)
  1642  0225  3064               	movlw	100
  1643  0226  0265               	subwf	set_temp@temp_integer,w
  1644  0227  1803               	skipnc
  1645  0228  2A2A               	goto	u1721
  1646  0229  2A2B               	goto	u1720
  1647  022A                     u1721:
  1648  022A  2A30               	goto	l2151
  1649  022B                     u1720:
  1650  022B                     l2149:
  1651                           
  1652                           ;main.c: 310:                     {;main.c: 311:                         temp_integer +=
      +                           1;
  1653  022B  3001               	movlw	1
  1654  022C  00E0               	movwf	??_set_temp
  1655  022D  0860               	movf	??_set_temp,w
  1656  022E  07E5               	addwf	set_temp@temp_integer,f
  1657                           
  1658                           ;main.c: 312:                     }
  1659  022F  2A4A               	goto	l2163
  1660  0230                     l2151:
  1661                           
  1662                           ;main.c: 314:                     {;main.c: 315:                         temp_integer = 
      +                          99;
  1663  0230  3063               	movlw	99
  1664  0231  00E0               	movwf	??_set_temp
  1665  0232  0860               	movf	??_set_temp,w
  1666  0233  00E5               	movwf	set_temp@temp_integer
  1667  0234  2A4A               	goto	l2163
  1668  0235                     l2153:
  1669                           
  1670                           ;main.c: 320:             {;main.c: 321:                 temp_decimal = temp_decimal + 5
      +                          ;
  1671  0235  0866               	movf	set_temp@temp_decimal,w
  1672  0236  3E05               	addlw	5
  1673  0237  00E0               	movwf	??_set_temp
  1674  0238  0860               	movf	??_set_temp,w
  1675  0239  00E6               	movwf	set_temp@temp_decimal
  1676                           
  1677                           ;main.c: 322:                 if(temp_decimal == 10)
  1678  023A  300A               	movlw	10
  1679  023B  0666               	xorwf	set_temp@temp_decimal,w
  1680  023C  1D03               	btfss	3,2
  1681  023D  2A3F               	goto	u1731
  1682  023E  2A40               	goto	u1730
  1683  023F                     u1731:
  1684  023F  2A4A               	goto	l2163
  1685  0240                     u1730:
  1686  0240                     l2155:
  1687                           
  1688                           ;main.c: 323:                 {;main.c: 324:                     temp_decimal = 0;
  1689  0240  01E6               	clrf	set_temp@temp_decimal
  1690  0241                     l2157:
  1691                           
  1692                           ;main.c: 325:                     if(temp_integer > 0)
  1693  0241  0865               	movf	set_temp@temp_integer,w
  1694  0242  1903               	btfsc	3,2
  1695  0243  2A45               	goto	u1741
  1696  0244  2A46               	goto	u1740
  1697  0245                     u1741:
  1698  0245  2A49               	goto	l2161
  1699  0246                     u1740:
  1700  0246                     l2159:
  1701                           
  1702                           ;main.c: 326:                     {;main.c: 327:                         temp_integer -=
      +                           1;
  1703  0246  3001               	movlw	1
  1704  0247  02E5               	subwf	set_temp@temp_integer,f
  1705                           
  1706                           ;main.c: 328:                     }
  1707  0248  2A4A               	goto	l2163
  1708  0249                     l2161:
  1709                           
  1710                           ;main.c: 330:                     {;main.c: 331:                         temp_integer = 
      +                          0;
  1711  0249  01E5               	clrf	set_temp@temp_integer
  1712  024A                     l2163:
  1713                           
  1714                           ;main.c: 336:         s_lastCLK = s_currentCLK;
  1715  024A  086D               	movf	_s_currentCLK,w
  1716  024B  00E0               	movwf	??_set_temp
  1717  024C  0860               	movf	??_set_temp,w
  1718  024D  00EC               	movwf	_s_lastCLK
  1719  024E                     l2165:
  1720                           
  1721                           ;main.c: 337:         sprintf(update_temp,"%d.%d",temp_integer,temp_decimal);
  1722  024E  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1723  024F  00E0               	movwf	??_set_temp
  1724  0250  0860               	movf	??_set_temp,w
  1725  0251  00D1               	movwf	sprintf@f
  1726  0252  0865               	movf	set_temp@temp_integer,w
  1727  0253  00E1               	movwf	??_set_temp+1
  1728  0254  01E2               	clrf	??_set_temp+2
  1729  0255  0861               	movf	??_set_temp+1,w
  1730  0256  00D2               	movwf	?_sprintf+1
  1731  0257  0862               	movf	??_set_temp+2,w
  1732  0258  00D3               	movwf	?_sprintf+2
  1733  0259  0866               	movf	set_temp@temp_decimal,w
  1734  025A  00E3               	movwf	??_set_temp+3
  1735  025B  01E4               	clrf	??_set_temp+4
  1736  025C  0863               	movf	??_set_temp+3,w
  1737  025D  00D4               	movwf	?_sprintf+3
  1738  025E  0864               	movf	??_set_temp+4,w
  1739  025F  00D5               	movwf	?_sprintf+4
  1740  0260  3020               	movlw	(low (_update_temp| 0))& (0+255)
  1741  0261  118A  2032  118A   	fcall	_sprintf
  1742  0264                     l2167:
  1743                           
  1744                           ;main.c: 338:         LCD_set_cursor(0,12);
  1745  0264  300C               	movlw	12
  1746  0265  1283               	bcf	3,5	;RP0=0, select bank0
  1747  0266  1303               	bcf	3,6	;RP1=0, select bank0
  1748  0267  00E0               	movwf	??_set_temp
  1749  0268  0860               	movf	??_set_temp,w
  1750  0269  00F4               	movwf	LCD_set_cursor@column
  1751  026A  3000               	movlw	0
  1752  026B  118A  2520  118A   	fcall	_LCD_set_cursor
  1753  026E                     l2169:
  1754                           
  1755                           ;main.c: 339:         LCD_send_string(update_temp);
  1756  026E  3020               	movlw	(low (_update_temp| 0))& (0+255)
  1757  026F  118A  24FF  118A   	fcall	_LCD_send_string
  1758  0272                     l2171:
  1759                           
  1760                           ;main.c: 298:     while(!RA2)
  1761  0272  1283               	bcf	3,5	;RP0=0, select bank0
  1762  0273  1303               	bcf	3,6	;RP1=0, select bank0
  1763  0274  1D05               	btfss	5,2	;volatile
  1764  0275  2A77               	goto	u1751
  1765  0276  2A78               	goto	u1750
  1766  0277                     u1751:
  1767  0277  2A02               	goto	l2135
  1768  0278                     u1750:
  1769  0278                     l174:
  1770  0278  0008               	return
  1771  0279                     __end_of_set_temp:
  1772                           
  1773                           	psect	text3
  1774  0032                     __ptext3:	
  1775 ;; *************** function _sprintf *****************
  1776 ;; Defined at:
  1777 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;  sp              1    wreg     PTR unsigned char 
  1780 ;;		 -> update_temp(5), 
  1781 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  1782 ;;		 -> STR_1(6), 
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;  sp              1   19[BANK0 ] PTR unsigned char 
  1785 ;;		 -> update_temp(5), 
  1786 ;;  tmpval          4    0        struct .
  1787 ;;  val             2   17[BANK0 ] unsigned int 
  1788 ;;  cp              2    0        PTR const unsigned char 
  1789 ;;  len             2    0        unsigned int 
  1790 ;;  c               1   20[BANK0 ] unsigned char 
  1791 ;;  prec            1   16[BANK0 ] char 
  1792 ;;  flag            1   15[BANK0 ] unsigned char 
  1793 ;;  ap              1   14[BANK0 ] PTR void [1]
  1794 ;;		 -> ?_sprintf(2), 
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  2    6[BANK0 ] int 
  1797 ;; Registers used:
  1798 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1804 ;;      Params:         0       5       0       0
  1805 ;;      Locals:         0       7       0       0
  1806 ;;      Temps:          0       3       0       0
  1807 ;;      Totals:         0      15       0       0
  1808 ;;Total ram usage:       15 bytes
  1809 ;; Hardware stack levels used:    1
  1810 ;; Hardware stack levels required when called:    2
  1811 ;; This function calls:
  1812 ;;		___lwdiv
  1813 ;;		___lwmod
  1814 ;; This function is called by:
  1815 ;;		_set_temp
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           
  1820                           ;psect for function _sprintf
  1821  0032                     _sprintf:
  1822                           
  1823                           ;incstack = 0
  1824                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1825                           ;sprintf@sp stored from wreg
  1826  0032  1283               	bcf	3,5	;RP0=0, select bank0
  1827  0033  1303               	bcf	3,6	;RP1=0, select bank0
  1828  0034  00DE               	movwf	sprintf@sp
  1829  0035                     l1955:
  1830                           
  1831                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1832  0035  3052               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1833  0036  00D6               	movwf	??_sprintf
  1834  0037  0856               	movf	??_sprintf,w
  1835  0038  00D9               	movwf	sprintf@ap
  1836                           
  1837                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1838  0039  28F7               	goto	l2007
  1839  003A                     l1957:
  1840                           
  1841                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1842  003A  3025               	movlw	37
  1843  003B  065F               	xorwf	sprintf@c,w
  1844  003C  1903               	btfsc	3,2
  1845  003D  283F               	goto	u1541
  1846  003E  2840               	goto	u1540
  1847  003F                     u1541:
  1848  003F  284C               	goto	l1963
  1849  0040                     u1540:
  1850  0040                     l1959:
  1851                           
  1852                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1853  0040  085F               	movf	sprintf@c,w
  1854  0041  00D6               	movwf	??_sprintf
  1855  0042  085E               	movf	sprintf@sp,w
  1856  0043  0084               	movwf	4
  1857  0044  0856               	movf	??_sprintf,w
  1858  0045  1383               	bcf	3,7	;select IRP bank0
  1859  0046  0080               	movwf	0
  1860  0047                     l1961:
  1861  0047  3001               	movlw	1
  1862  0048  00D6               	movwf	??_sprintf
  1863  0049  0856               	movf	??_sprintf,w
  1864  004A  07DE               	addwf	sprintf@sp,f
  1865                           
  1866                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 559:    continue;
  1867  004B  28F7               	goto	l2007
  1868  004C                     l1963:
  1869                           
  1870                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1871  004C  01DA               	clrf	sprintf@flag
  1872  004D                     l1967:	
  1873                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1874                           
  1875  004D  3001               	movlw	1
  1876  004E  07D1               	addwf	sprintf@f,f
  1877  004F  30FF               	movlw	-1
  1878  0050  0751               	addwf	sprintf@f,w
  1879  0051  0084               	movwf	4
  1880  0052  118A  253D  118A   	fcall	stringdir
  1881  0055  00DF               	movwf	sprintf@c
  1882  0056  00D6               	movwf	??_sprintf
  1883  0057  01D7               	clrf	??_sprintf+1
  1884                           
  1885                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1886                           ; Switch size 1, requested type "simple"
  1887                           ; Number of cases is 1, Range of values is 0 to 0
  1888                           ; switch strategies available:
  1889                           ; Name         Instructions Cycles
  1890                           ; simple_byte            4     3 (average)
  1891                           ; direct_byte            9     7 (fixed)
  1892                           ; jumptable            260     6 (fixed)
  1893                           ;	Chosen strategy is simple_byte
  1894  0058  0857               	movf	??_sprintf+1,w
  1895  0059  3A00               	xorlw	0	; case 0
  1896  005A  1903               	skipnz
  1897  005B  285D               	goto	l2299
  1898  005C  28F7               	goto	l2007
  1899  005D                     l2299:
  1900                           
  1901                           ; Switch size 1, requested type "simple"
  1902                           ; Number of cases is 3, Range of values is 0 to 105
  1903                           ; switch strategies available:
  1904                           ; Name         Instructions Cycles
  1905                           ; simple_byte           10     6 (average)
  1906                           ; direct_byte          219     7 (fixed)
  1907                           ; jumptable            260     6 (fixed)
  1908                           ;	Chosen strategy is simple_byte
  1909  005D  0856               	movf	??_sprintf,w
  1910  005E  3A00               	xorlw	0	; case 0
  1911  005F  1903               	skipnz
  1912  0060  2907               	goto	l2009
  1913  0061  3A64               	xorlw	100	; case 100
  1914  0062  1903               	skipnz
  1915  0063  2868               	goto	l1969
  1916  0064  3A0D               	xorlw	13	; case 105
  1917  0065  1903               	skipnz
  1918  0066  2868               	goto	l1969
  1919  0067  28F7               	goto	l2007
  1920  0068                     l1969:
  1921                           
  1922                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1923  0068  0859               	movf	sprintf@ap,w
  1924  0069  0084               	movwf	4
  1925  006A  1383               	bcf	3,7	;select IRP bank0
  1926  006B  0800               	movf	0,w
  1927  006C  00DC               	movwf	sprintf@val
  1928  006D  0A84               	incf	4,f
  1929  006E  0800               	movf	0,w
  1930  006F  00DD               	movwf	sprintf@val+1
  1931  0070                     l1971:
  1932  0070  3002               	movlw	2
  1933  0071  00D6               	movwf	??_sprintf
  1934  0072  0856               	movf	??_sprintf,w
  1935  0073  07D9               	addwf	sprintf@ap,f
  1936  0074                     l1973:
  1937                           
  1938                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1939  0074  1FDD               	btfss	sprintf@val+1,7
  1940  0075  2877               	goto	u1551
  1941  0076  2878               	goto	u1550
  1942  0077                     u1551:
  1943  0077  2881               	goto	l1979
  1944  0078                     u1550:
  1945  0078                     l1975:
  1946                           
  1947                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1948  0078  3003               	movlw	3
  1949  0079  00D6               	movwf	??_sprintf
  1950  007A  0856               	movf	??_sprintf,w
  1951  007B  04DA               	iorwf	sprintf@flag,f
  1952  007C                     l1977:
  1953                           
  1954                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1955  007C  09DC               	comf	sprintf@val,f
  1956  007D  09DD               	comf	sprintf@val+1,f
  1957  007E  0ADC               	incf	sprintf@val,f
  1958  007F  1903               	skipnz
  1959  0080  0ADD               	incf	sprintf@val+1,f
  1960  0081                     l1979:
  1961                           
  1962                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1963  0081  01DF               	clrf	sprintf@c
  1964  0082  0ADF               	incf	sprintf@c,f
  1965  0083                     l1985:
  1966                           
  1967                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1968  0083  085F               	movf	sprintf@c,w
  1969  0084  00D6               	movwf	??_sprintf
  1970  0085  0756               	addwf	??_sprintf,w
  1971  0086  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1972  0087  0084               	movwf	4
  1973  0088  118A  253D  118A   	fcall	stringdir
  1974  008B  00D7               	movwf	??_sprintf+1
  1975  008C  118A  253D  118A   	fcall	stringdir
  1976  008F  00D8               	movwf	??_sprintf+2
  1977  0090  0858               	movf	??_sprintf+2,w
  1978  0091  025D               	subwf	sprintf@val+1,w
  1979  0092  1D03               	skipz
  1980  0093  2896               	goto	u1565
  1981  0094  0857               	movf	??_sprintf+1,w
  1982  0095  025C               	subwf	sprintf@val,w
  1983  0096                     u1565:
  1984  0096  1803               	skipnc
  1985  0097  2899               	goto	u1561
  1986  0098  289A               	goto	u1560
  1987  0099                     u1561:
  1988  0099  289B               	goto	l1989
  1989  009A                     u1560:
  1990  009A  28A5               	goto	l1991
  1991  009B                     l1989:
  1992  009B  3001               	movlw	1
  1993  009C  00D6               	movwf	??_sprintf
  1994  009D  0856               	movf	??_sprintf,w
  1995  009E  07DF               	addwf	sprintf@c,f
  1996  009F  3005               	movlw	5
  1997  00A0  065F               	xorwf	sprintf@c,w
  1998  00A1  1D03               	btfss	3,2
  1999  00A2  28A4               	goto	u1571
  2000  00A3  28A5               	goto	u1570
  2001  00A4                     u1571:
  2002  00A4  2883               	goto	l1985
  2003  00A5                     u1570:
  2004  00A5                     l1991:
  2005                           
  2006                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2007  00A5  085A               	movf	sprintf@flag,w
  2008  00A6  3903               	andlw	3
  2009  00A7  1903               	btfsc	3,2
  2010  00A8  28AA               	goto	u1581
  2011  00A9  28AB               	goto	u1580
  2012  00AA                     u1581:
  2013  00AA  28B6               	goto	l1997
  2014  00AB                     u1580:
  2015  00AB                     l1993:
  2016                           
  2017                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2018  00AB  302D               	movlw	45
  2019  00AC  00D6               	movwf	??_sprintf
  2020  00AD  085E               	movf	sprintf@sp,w
  2021  00AE  0084               	movwf	4
  2022  00AF  0856               	movf	??_sprintf,w
  2023  00B0  1383               	bcf	3,7	;select IRP bank0
  2024  00B1  0080               	movwf	0
  2025  00B2                     l1995:
  2026  00B2  3001               	movlw	1
  2027  00B3  00D6               	movwf	??_sprintf
  2028  00B4  0856               	movf	??_sprintf,w
  2029  00B5  07DE               	addwf	sprintf@sp,f
  2030  00B6                     l1997:
  2031                           
  2032                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2033  00B6  085F               	movf	sprintf@c,w
  2034  00B7  00D6               	movwf	??_sprintf
  2035  00B8  0856               	movf	??_sprintf,w
  2036  00B9  00DB               	movwf	sprintf@prec
  2037                           
  2038                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2039  00BA  28EE               	goto	l2005
  2040  00BB                     l1999:
  2041                           
  2042                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2043  00BB  300A               	movlw	10
  2044  00BC  00CB               	movwf	___lwmod@divisor
  2045  00BD  3000               	movlw	0
  2046  00BE  00CC               	movwf	___lwmod@divisor+1
  2047  00BF  085B               	movf	sprintf@prec,w
  2048  00C0  00D6               	movwf	??_sprintf
  2049  00C1  0756               	addwf	??_sprintf,w
  2050  00C2  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2051  00C3  0084               	movwf	4
  2052  00C4  118A  253D  118A   	fcall	stringdir
  2053  00C7  00F2               	movwf	___lwdiv@divisor
  2054  00C8  118A  253D  118A   	fcall	stringdir
  2055  00CB  00F3               	movwf	___lwdiv@divisor+1
  2056  00CC  085D               	movf	sprintf@val+1,w
  2057  00CD  00F5               	movwf	___lwdiv@dividend+1
  2058  00CE  085C               	movf	sprintf@val,w
  2059  00CF  00F4               	movwf	___lwdiv@dividend
  2060  00D0  118A  2345  118A   	fcall	___lwdiv
  2061  00D3  0873               	movf	?___lwdiv+1,w
  2062  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  2063  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  2064  00D6  00CE               	movwf	___lwmod@dividend+1
  2065  00D7  0872               	movf	?___lwdiv,w
  2066  00D8  00CD               	movwf	___lwmod@dividend
  2067  00D9  118A  23C5  118A   	fcall	___lwmod
  2068  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  2069  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  2070  00DE  084B               	movf	?___lwmod,w
  2071  00DF  3E30               	addlw	48
  2072  00E0  00D7               	movwf	??_sprintf+1
  2073  00E1  0857               	movf	??_sprintf+1,w
  2074  00E2  00DF               	movwf	sprintf@c
  2075  00E3                     l2001:
  2076                           
  2077                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2078  00E3  085F               	movf	sprintf@c,w
  2079  00E4  00D6               	movwf	??_sprintf
  2080  00E5  085E               	movf	sprintf@sp,w
  2081  00E6  0084               	movwf	4
  2082  00E7  0856               	movf	??_sprintf,w
  2083  00E8  1383               	bcf	3,7	;select IRP bank0
  2084  00E9  0080               	movwf	0
  2085  00EA                     l2003:
  2086  00EA  3001               	movlw	1
  2087  00EB  00D6               	movwf	??_sprintf
  2088  00EC  0856               	movf	??_sprintf,w
  2089  00ED  07DE               	addwf	sprintf@sp,f
  2090  00EE                     l2005:
  2091                           
  2092                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2093  00EE  30FF               	movlw	255
  2094  00EF  00D6               	movwf	??_sprintf
  2095  00F0  0856               	movf	??_sprintf,w
  2096  00F1  07DB               	addwf	sprintf@prec,f
  2097  00F2  0A5B               	incf	sprintf@prec,w
  2098  00F3  1D03               	btfss	3,2
  2099  00F4  28F6               	goto	u1591
  2100  00F5  28F7               	goto	u1590
  2101  00F6                     u1591:
  2102  00F6  28BB               	goto	l1999
  2103  00F7                     u1590:
  2104  00F7                     l2007:
  2105                           
  2106                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2107  00F7  3001               	movlw	1
  2108  00F8  07D1               	addwf	sprintf@f,f
  2109  00F9  30FF               	movlw	-1
  2110  00FA  0751               	addwf	sprintf@f,w
  2111  00FB  0084               	movwf	4
  2112  00FC  118A  253D  118A   	fcall	stringdir
  2113  00FF  00D6               	movwf	??_sprintf
  2114  0100  0856               	movf	??_sprintf,w
  2115  0101  00DF               	movwf	sprintf@c
  2116  0102  085F               	movf	sprintf@c,w
  2117  0103  1D03               	btfss	3,2
  2118  0104  2906               	goto	u1601
  2119  0105  2907               	goto	u1600
  2120  0106                     u1601:
  2121  0106  283A               	goto	l1957
  2122  0107                     u1600:
  2123  0107                     l2009:
  2124                           
  2125                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2126  0107  085E               	movf	sprintf@sp,w
  2127  0108  0084               	movwf	4
  2128  0109  1383               	bcf	3,7	;select IRP bank0
  2129  010A  0180               	clrf	0
  2130  010B                     l351:
  2131  010B  0008               	return
  2132  010C                     __end_of_sprintf:
  2133                           
  2134                           	psect	text4
  2135  03C5                     __ptext4:	
  2136 ;; *************** function ___lwmod *****************
  2137 ;; Defined at:
  2138 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;  divisor         2    0[BANK0 ] unsigned int 
  2141 ;;  dividend        2    2[BANK0 ] unsigned int 
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;  counter         1    5[BANK0 ] unsigned char 
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  2    0[BANK0 ] unsigned int 
  2146 ;; Registers used:
  2147 ;;		wreg, status,2, status,0
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2153 ;;      Params:         0       4       0       0
  2154 ;;      Locals:         0       1       0       0
  2155 ;;      Temps:          0       1       0       0
  2156 ;;      Totals:         0       6       0       0
  2157 ;;Total ram usage:        6 bytes
  2158 ;; Hardware stack levels used:    1
  2159 ;; Hardware stack levels required when called:    1
  2160 ;; This function calls:
  2161 ;;		Nothing
  2162 ;; This function is called by:
  2163 ;;		_sprintf
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           
  2168                           ;psect for function ___lwmod
  2169  03C5                     ___lwmod:
  2170  03C5                     l1909:	
  2171                           ;incstack = 0
  2172                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2173                           
  2174  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  2175  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  2176  03C7  084B               	movf	___lwmod@divisor,w
  2177  03C8  044C               	iorwf	___lwmod@divisor+1,w
  2178  03C9  1903               	btfsc	3,2
  2179  03CA  2BCC               	goto	u1461
  2180  03CB  2BCD               	goto	u1460
  2181  03CC                     u1461:
  2182  03CC  2BFC               	goto	l1927
  2183  03CD                     u1460:
  2184  03CD                     l1911:
  2185  03CD  01D0               	clrf	___lwmod@counter
  2186  03CE  0AD0               	incf	___lwmod@counter,f
  2187  03CF  2BDB               	goto	l1917
  2188  03D0                     l1913:
  2189  03D0  3001               	movlw	1
  2190  03D1                     u1475:
  2191  03D1  1003               	clrc
  2192  03D2  0DCB               	rlf	___lwmod@divisor,f
  2193  03D3  0DCC               	rlf	___lwmod@divisor+1,f
  2194  03D4  3EFF               	addlw	-1
  2195  03D5  1D03               	skipz
  2196  03D6  2BD1               	goto	u1475
  2197  03D7                     l1915:
  2198  03D7  3001               	movlw	1
  2199  03D8  00CF               	movwf	??___lwmod
  2200  03D9  084F               	movf	??___lwmod,w
  2201  03DA  07D0               	addwf	___lwmod@counter,f
  2202  03DB                     l1917:
  2203  03DB  1FCC               	btfss	___lwmod@divisor+1,7
  2204  03DC  2BDE               	goto	u1481
  2205  03DD  2BDF               	goto	u1480
  2206  03DE                     u1481:
  2207  03DE  2BD0               	goto	l1913
  2208  03DF                     u1480:
  2209  03DF                     l1919:
  2210  03DF  084C               	movf	___lwmod@divisor+1,w
  2211  03E0  024E               	subwf	___lwmod@dividend+1,w
  2212  03E1  1D03               	skipz
  2213  03E2  2BE5               	goto	u1495
  2214  03E3  084B               	movf	___lwmod@divisor,w
  2215  03E4  024D               	subwf	___lwmod@dividend,w
  2216  03E5                     u1495:
  2217  03E5  1C03               	skipc
  2218  03E6  2BE8               	goto	u1491
  2219  03E7  2BE9               	goto	u1490
  2220  03E8                     u1491:
  2221  03E8  2BEF               	goto	l1923
  2222  03E9                     u1490:
  2223  03E9                     l1921:
  2224  03E9  084B               	movf	___lwmod@divisor,w
  2225  03EA  02CD               	subwf	___lwmod@dividend,f
  2226  03EB  084C               	movf	___lwmod@divisor+1,w
  2227  03EC  1C03               	skipc
  2228  03ED  03CE               	decf	___lwmod@dividend+1,f
  2229  03EE  02CE               	subwf	___lwmod@dividend+1,f
  2230  03EF                     l1923:
  2231  03EF  3001               	movlw	1
  2232  03F0                     u1505:
  2233  03F0  1003               	clrc
  2234  03F1  0CCC               	rrf	___lwmod@divisor+1,f
  2235  03F2  0CCB               	rrf	___lwmod@divisor,f
  2236  03F3  3EFF               	addlw	-1
  2237  03F4  1D03               	skipz
  2238  03F5  2BF0               	goto	u1505
  2239  03F6                     l1925:
  2240  03F6  3001               	movlw	1
  2241  03F7  02D0               	subwf	___lwmod@counter,f
  2242  03F8  1D03               	btfss	3,2
  2243  03F9  2BFB               	goto	u1511
  2244  03FA  2BFC               	goto	u1510
  2245  03FB                     u1511:
  2246  03FB  2BDF               	goto	l1919
  2247  03FC                     u1510:
  2248  03FC                     l1927:
  2249  03FC  084E               	movf	___lwmod@dividend+1,w
  2250  03FD  00CC               	movwf	?___lwmod+1
  2251  03FE  084D               	movf	___lwmod@dividend,w
  2252  03FF  00CB               	movwf	?___lwmod
  2253  0400                     l637:
  2254  0400  0008               	return
  2255  0401                     __end_of___lwmod:
  2256                           
  2257                           	psect	text5
  2258  0345                     __ptext5:	
  2259 ;; *************** function ___lwdiv *****************
  2260 ;; Defined at:
  2261 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;  divisor         2    2[COMMON] unsigned int 
  2264 ;;  dividend        2    4[COMMON] unsigned int 
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;  quotient        2    7[COMMON] unsigned int 
  2267 ;;  counter         1    9[COMMON] unsigned char 
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  2    2[COMMON] unsigned int 
  2270 ;; Registers used:
  2271 ;;		wreg, status,2, status,0
  2272 ;; Tracked objects:
  2273 ;;		On entry : 0/0
  2274 ;;		On exit  : 0/0
  2275 ;;		Unchanged: 0/0
  2276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2277 ;;      Params:         4       0       0       0
  2278 ;;      Locals:         3       0       0       0
  2279 ;;      Temps:          1       0       0       0
  2280 ;;      Totals:         8       0       0       0
  2281 ;;Total ram usage:        8 bytes
  2282 ;; Hardware stack levels used:    1
  2283 ;; Hardware stack levels required when called:    1
  2284 ;; This function calls:
  2285 ;;		Nothing
  2286 ;; This function is called by:
  2287 ;;		_sprintf
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           
  2292                           ;psect for function ___lwdiv
  2293  0345                     ___lwdiv:
  2294  0345                     l1409:	
  2295                           ;incstack = 0
  2296                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2297                           
  2298  0345  01F7               	clrf	___lwdiv@quotient
  2299  0346  01F8               	clrf	___lwdiv@quotient+1
  2300  0347                     l1411:
  2301  0347  0872               	movf	___lwdiv@divisor,w
  2302  0348  0473               	iorwf	___lwdiv@divisor+1,w
  2303  0349  1903               	btfsc	3,2
  2304  034A  2B4C               	goto	u771
  2305  034B  2B4D               	goto	u770
  2306  034C                     u771:
  2307  034C  2B84               	goto	l1431
  2308  034D                     u770:
  2309  034D                     l1413:
  2310  034D  01F9               	clrf	___lwdiv@counter
  2311  034E  0AF9               	incf	___lwdiv@counter,f
  2312  034F  2B5B               	goto	l1419
  2313  0350                     l1415:
  2314  0350  3001               	movlw	1
  2315  0351                     u785:
  2316  0351  1003               	clrc
  2317  0352  0DF2               	rlf	___lwdiv@divisor,f
  2318  0353  0DF3               	rlf	___lwdiv@divisor+1,f
  2319  0354  3EFF               	addlw	-1
  2320  0355  1D03               	skipz
  2321  0356  2B51               	goto	u785
  2322  0357                     l1417:
  2323  0357  3001               	movlw	1
  2324  0358  00F6               	movwf	??___lwdiv
  2325  0359  0876               	movf	??___lwdiv,w
  2326  035A  07F9               	addwf	___lwdiv@counter,f
  2327  035B                     l1419:
  2328  035B  1FF3               	btfss	___lwdiv@divisor+1,7
  2329  035C  2B5E               	goto	u791
  2330  035D  2B5F               	goto	u790
  2331  035E                     u791:
  2332  035E  2B50               	goto	l1415
  2333  035F                     u790:
  2334  035F                     l1421:
  2335  035F  3001               	movlw	1
  2336  0360                     u805:
  2337  0360  1003               	clrc
  2338  0361  0DF7               	rlf	___lwdiv@quotient,f
  2339  0362  0DF8               	rlf	___lwdiv@quotient+1,f
  2340  0363  3EFF               	addlw	-1
  2341  0364  1D03               	skipz
  2342  0365  2B60               	goto	u805
  2343  0366  0873               	movf	___lwdiv@divisor+1,w
  2344  0367  0275               	subwf	___lwdiv@dividend+1,w
  2345  0368  1D03               	skipz
  2346  0369  2B6C               	goto	u815
  2347  036A  0872               	movf	___lwdiv@divisor,w
  2348  036B  0274               	subwf	___lwdiv@dividend,w
  2349  036C                     u815:
  2350  036C  1C03               	skipc
  2351  036D  2B6F               	goto	u811
  2352  036E  2B70               	goto	u810
  2353  036F                     u811:
  2354  036F  2B77               	goto	l1427
  2355  0370                     u810:
  2356  0370                     l1423:
  2357  0370  0872               	movf	___lwdiv@divisor,w
  2358  0371  02F4               	subwf	___lwdiv@dividend,f
  2359  0372  0873               	movf	___lwdiv@divisor+1,w
  2360  0373  1C03               	skipc
  2361  0374  03F5               	decf	___lwdiv@dividend+1,f
  2362  0375  02F5               	subwf	___lwdiv@dividend+1,f
  2363  0376                     l1425:
  2364  0376  1477               	bsf	___lwdiv@quotient,0
  2365  0377                     l1427:
  2366  0377  3001               	movlw	1
  2367  0378                     u825:
  2368  0378  1003               	clrc
  2369  0379  0CF3               	rrf	___lwdiv@divisor+1,f
  2370  037A  0CF2               	rrf	___lwdiv@divisor,f
  2371  037B  3EFF               	addlw	-1
  2372  037C  1D03               	skipz
  2373  037D  2B78               	goto	u825
  2374  037E                     l1429:
  2375  037E  3001               	movlw	1
  2376  037F  02F9               	subwf	___lwdiv@counter,f
  2377  0380  1D03               	btfss	3,2
  2378  0381  2B83               	goto	u831
  2379  0382  2B84               	goto	u830
  2380  0383                     u831:
  2381  0383  2B5F               	goto	l1421
  2382  0384                     u830:
  2383  0384                     l1431:
  2384  0384  0878               	movf	___lwdiv@quotient+1,w
  2385  0385  00F3               	movwf	?___lwdiv+1
  2386  0386  0877               	movf	___lwdiv@quotient,w
  2387  0387  00F2               	movwf	?___lwdiv
  2388  0388                     l627:
  2389  0388  0008               	return
  2390  0389                     __end_of___lwdiv:
  2391                           
  2392                           	psect	text6
  2393  0569                     __ptext6:	
  2394 ;; *************** function _set_humi *****************
  2395 ;; Defined at:
  2396 ;;		line 343 in file "main.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;		None
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;		None
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  1    wreg      void 
  2403 ;; Registers used:
  2404 ;;		wreg, status,2, status,0
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2410 ;;      Params:         0       0       0       0
  2411 ;;      Locals:         0       0       0       0
  2412 ;;      Temps:          1       0       0       0
  2413 ;;      Totals:         1       0       0       0
  2414 ;;Total ram usage:        1 bytes
  2415 ;; Hardware stack levels used:    1
  2416 ;; Hardware stack levels required when called:    1
  2417 ;; This function calls:
  2418 ;;		Nothing
  2419 ;; This function is called by:
  2420 ;;		_main
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           
  2425                           ;psect for function _set_humi
  2426  0569                     _set_humi:
  2427  0569                     l1699:	
  2428                           ;incstack = 0
  2429                           ; Regs used in _set_humi: [wreg+status,2+status,0]
  2430                           
  2431                           
  2432                           ;main.c: 345:     s_currentCLK = RC4;
  2433  0569  3000               	movlw	0
  2434  056A  1283               	bcf	3,5	;RP0=0, select bank0
  2435  056B  1303               	bcf	3,6	;RP1=0, select bank0
  2436  056C  1A07               	btfsc	7,4	;volatile
  2437  056D  3001               	movlw	1
  2438  056E  00ED               	movwf	_s_currentCLK
  2439  056F                     l1701:
  2440                           
  2441                           ;main.c: 346:     if(s_currentCLK != s_lastCLK && s_currentCLK == 1)
  2442  056F  086D               	movf	_s_currentCLK,w
  2443  0570  066C               	xorwf	_s_lastCLK,w
  2444  0571  1903               	skipnz
  2445  0572  2D74               	goto	u1141
  2446  0573  2D75               	goto	u1140
  2447  0574                     u1141:
  2448  0574  2D7A               	goto	l1709
  2449  0575                     u1140:
  2450  0575                     l1703:
  2451  0575  036D               	decf	_s_currentCLK,w
  2452  0576  1D03               	btfss	3,2
  2453  0577  2D79               	goto	u1151
  2454  0578  2D7A               	goto	u1150
  2455  0579                     u1151:
  2456  0579  2D7A               	goto	l1709
  2457  057A                     u1150:
  2458  057A                     l1705:
  2459  057A                     l1709:	
  2460                           ;main.c: 347:     {;main.c: 348:         if(RC5 != s_currentCLK)
  2461                           
  2462                           
  2463                           ;main.c: 357:     s_lastCLK = s_currentCLK;
  2464  057A  086D               	movf	_s_currentCLK,w
  2465  057B  00F2               	movwf	??_set_humi
  2466  057C  0872               	movf	??_set_humi,w
  2467  057D  00EC               	movwf	_s_lastCLK
  2468  057E                     l180:
  2469  057E  0008               	return
  2470  057F                     __end_of_set_humi:
  2471                           
  2472                           	psect	text7
  2473  057F                     __ptext7:	
  2474 ;; *************** function _set_date *****************
  2475 ;; Defined at:
  2476 ;;		line 377 in file "main.c"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;		None
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;		None
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  1    wreg      void 
  2483 ;; Registers used:
  2484 ;;		wreg, status,2, status,0
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2490 ;;      Params:         0       0       0       0
  2491 ;;      Locals:         0       0       0       0
  2492 ;;      Temps:          1       0       0       0
  2493 ;;      Totals:         1       0       0       0
  2494 ;;Total ram usage:        1 bytes
  2495 ;; Hardware stack levels used:    1
  2496 ;; Hardware stack levels required when called:    1
  2497 ;; This function calls:
  2498 ;;		Nothing
  2499 ;; This function is called by:
  2500 ;;		_main
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           
  2505                           ;psect for function _set_date
  2506  057F                     _set_date:
  2507  057F                     l1723:	
  2508                           ;incstack = 0
  2509                           ; Regs used in _set_date: [wreg+status,2+status,0]
  2510                           
  2511                           
  2512                           ;main.c: 379:     s_currentCLK = RC4;
  2513  057F  3000               	movlw	0
  2514  0580  1283               	bcf	3,5	;RP0=0, select bank0
  2515  0581  1303               	bcf	3,6	;RP1=0, select bank0
  2516  0582  1A07               	btfsc	7,4	;volatile
  2517  0583  3001               	movlw	1
  2518  0584  00ED               	movwf	_s_currentCLK
  2519  0585                     l1725:
  2520                           
  2521                           ;main.c: 380:     if(s_currentCLK != s_lastCLK && s_currentCLK == 1)
  2522  0585  086D               	movf	_s_currentCLK,w
  2523  0586  066C               	xorwf	_s_lastCLK,w
  2524  0587  1903               	skipnz
  2525  0588  2D8A               	goto	u1181
  2526  0589  2D8B               	goto	u1180
  2527  058A                     u1181:
  2528  058A  2D90               	goto	l1733
  2529  058B                     u1180:
  2530  058B                     l1727:
  2531  058B  036D               	decf	_s_currentCLK,w
  2532  058C  1D03               	btfss	3,2
  2533  058D  2D8F               	goto	u1191
  2534  058E  2D90               	goto	u1190
  2535  058F                     u1191:
  2536  058F  2D90               	goto	l1733
  2537  0590                     u1190:
  2538  0590                     l1729:
  2539  0590                     l1733:	
  2540                           ;main.c: 381:     {;main.c: 382:         if(RC5 != s_currentCLK)
  2541                           
  2542                           
  2543                           ;main.c: 391:     s_lastCLK = s_currentCLK;
  2544  0590  086D               	movf	_s_currentCLK,w
  2545  0591  00F2               	movwf	??_set_date
  2546  0592  0872               	movf	??_set_date,w
  2547  0593  00EC               	movwf	_s_lastCLK
  2548  0594                     l192:
  2549  0594  0008               	return
  2550  0595                     __end_of_set_date:
  2551                           
  2552                           	psect	text8
  2553  04B9                     __ptext8:	
  2554 ;; *************** function _LCD_display_ctrl *****************
  2555 ;; Defined at:
  2556 ;;		line 99 in file "main.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;  display         1    wreg     unsigned char 
  2559 ;;  cursor          1    4[COMMON] unsigned char 
  2560 ;;  blink           1    5[COMMON] unsigned char 
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;  display         1    7[COMMON] unsigned char 
  2563 ;;  temp            1    8[COMMON] unsigned char 
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  1    wreg      void 
  2566 ;; Registers used:
  2567 ;;		wreg, status,2, status,0, pclath, cstack
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2573 ;;      Params:         2       0       0       0
  2574 ;;      Locals:         2       0       0       0
  2575 ;;      Temps:          1       0       0       0
  2576 ;;      Totals:         5       0       0       0
  2577 ;;Total ram usage:        5 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; Hardware stack levels required when called:    3
  2580 ;; This function calls:
  2581 ;;		___lcd_cmd
  2582 ;; This function is called by:
  2583 ;;		_main
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           
  2588                           ;psect for function _LCD_display_ctrl
  2589  04B9                     _LCD_display_ctrl:
  2590                           
  2591                           ;incstack = 0
  2592                           ; Regs used in _LCD_display_ctrl: [wreg+status,2+status,0+pclath+cstack]
  2593                           ;LCD_display_ctrl@display stored from wreg
  2594  04B9  00F7               	movwf	LCD_display_ctrl@display
  2595  04BA                     l2017:
  2596                           
  2597                           ;main.c: 99: void LCD_display_ctrl(uint8_t display, uint8_t cursor, uint8_t blink);main.
      +                          c: 100: {;main.c: 101:     __lcd_cmd(0x00);
  2598  04BA  3000               	movlw	0
  2599  04BB  118A  25CB  118A   	fcall	___lcd_cmd
  2600  04BE                     l2019:
  2601                           
  2602                           ;main.c: 103:     uint8_t temp = 0x0C;
  2603  04BE  300C               	movlw	12
  2604  04BF  00F6               	movwf	??_LCD_display_ctrl
  2605  04C0  0876               	movf	??_LCD_display_ctrl,w
  2606  04C1  00F8               	movwf	LCD_display_ctrl@temp
  2607  04C2                     l2021:
  2608                           
  2609                           ;main.c: 104:     if(display == 1)
  2610  04C2  0377               	decf	LCD_display_ctrl@display,w
  2611  04C3  1D03               	btfss	3,2
  2612  04C4  2CC6               	goto	u1611
  2613  04C5  2CC7               	goto	u1610
  2614  04C6                     u1611:
  2615  04C6  2CD8               	goto	l2033
  2616  04C7                     u1610:
  2617  04C7                     l2023:
  2618                           
  2619                           ;main.c: 105:     {;main.c: 106:         if(cursor == 1)
  2620  04C7  0374               	decf	LCD_display_ctrl@cursor,w
  2621  04C8  1D03               	btfss	3,2
  2622  04C9  2CCB               	goto	u1621
  2623  04CA  2CCC               	goto	u1620
  2624  04CB                     u1621:
  2625  04CB  2CCD               	goto	l2027
  2626  04CC                     u1620:
  2627  04CC                     l2025:
  2628                           
  2629                           ;main.c: 107:         {;main.c: 108:             temp |= 1 << 1;
  2630  04CC  14F8               	bsf	LCD_display_ctrl@temp,1
  2631  04CD                     l2027:
  2632                           
  2633                           ;main.c: 110:         if(blink == 1)
  2634  04CD  0375               	decf	LCD_display_ctrl@blink,w
  2635  04CE  1D03               	btfss	3,2
  2636  04CF  2CD1               	goto	u1631
  2637  04D0  2CD2               	goto	u1630
  2638  04D1                     u1631:
  2639  04D1  2CD3               	goto	l2031
  2640  04D2                     u1630:
  2641  04D2                     l2029:
  2642                           
  2643                           ;main.c: 111:         {;main.c: 112:             temp |= 1 << 0;
  2644  04D2  1478               	bsf	LCD_display_ctrl@temp,0
  2645  04D3                     l2031:
  2646                           
  2647                           ;main.c: 114:         __lcd_cmd(temp);
  2648  04D3  0878               	movf	LCD_display_ctrl@temp,w
  2649  04D4  118A  25CB  118A   	fcall	___lcd_cmd
  2650                           
  2651                           ;main.c: 115:     }
  2652  04D7  2CDC               	goto	l84
  2653  04D8                     l2033:
  2654                           
  2655                           ;main.c: 117:     {;main.c: 118:         __lcd_cmd(0x08);
  2656  04D8  3008               	movlw	8
  2657  04D9  118A  25CB  118A   	fcall	___lcd_cmd
  2658  04DC                     l84:
  2659  04DC  0008               	return
  2660  04DD                     __end_of_LCD_display_ctrl:
  2661                           
  2662                           	psect	text9
  2663  02FE                     __ptext9:	
  2664 ;; *************** function _LCD_Init *****************
  2665 ;; Defined at:
  2666 ;;		line 158 in file "main.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;		None
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;		None
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  1    wreg      void 
  2673 ;; Registers used:
  2674 ;;		wreg, status,2, status,0, pclath, cstack
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2680 ;;      Params:         0       0       0       0
  2681 ;;      Locals:         0       0       0       0
  2682 ;;      Temps:          2       0       0       0
  2683 ;;      Totals:         2       0       0       0
  2684 ;;Total ram usage:        2 bytes
  2685 ;; Hardware stack levels used:    1
  2686 ;; Hardware stack levels required when called:    3
  2687 ;; This function calls:
  2688 ;;		___lcd_cmd
  2689 ;; This function is called by:
  2690 ;;		_main
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           
  2695                           ;psect for function _LCD_Init
  2696  02FE                     _LCD_Init:
  2697  02FE                     l2035:	
  2698                           ;incstack = 0
  2699                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2700                           
  2701                           
  2702                           ;main.c: 160:     _delay((unsigned long)((50)*(4000000UL/4000.0)));
  2703  02FE  3041               	movlw	65
  2704  02FF  00F5               	movwf	??_LCD_Init+1
  2705  0300  30EE               	movlw	238
  2706  0301  00F4               	movwf	??_LCD_Init
  2707  0302                     u1957:
  2708  0302  0BF4               	decfsz	??_LCD_Init,f
  2709  0303  2B02               	goto	u1957
  2710  0304  0BF5               	decfsz	??_LCD_Init+1,f
  2711  0305  2B02               	goto	u1957
  2712  0306  0000               	nop
  2713  0307                     l2037:
  2714                           
  2715                           ;main.c: 162:     __lcd_cmd(0x03);
  2716  0307  3003               	movlw	3
  2717  0308  118A  25CB  118A   	fcall	___lcd_cmd
  2718  030B                     l2039:
  2719                           
  2720                           ;main.c: 163:     _delay((unsigned long)((5)*(4000000UL/4000.0)));
  2721  030B  3007               	movlw	7
  2722  030C  00F5               	movwf	??_LCD_Init+1
  2723  030D  307D               	movlw	125
  2724  030E  00F4               	movwf	??_LCD_Init
  2725  030F                     u1967:
  2726  030F  0BF4               	decfsz	??_LCD_Init,f
  2727  0310  2B0F               	goto	u1967
  2728  0311  0BF5               	decfsz	??_LCD_Init+1,f
  2729  0312  2B0F               	goto	u1967
  2730                           
  2731                           ;main.c: 166:     __lcd_cmd(0x03);
  2732  0313  3003               	movlw	3
  2733  0314  118A  25CB  118A   	fcall	___lcd_cmd
  2734  0317                     l2041:
  2735                           
  2736                           ;main.c: 167:     _delay((unsigned long)((120)*(4000000UL/4000000.0)));
  2737  0317  3027               	movlw	39
  2738  0318  00F4               	movwf	??_LCD_Init
  2739  0319                     u1977:
  2740  0319  0BF4               	decfsz	??_LCD_Init,f
  2741  031A  2B19               	goto	u1977
  2742  031B  2B1C               	nop2
  2743  031C                     l2043:
  2744                           
  2745                           ;main.c: 170:     __lcd_cmd(0x03);
  2746  031C  3003               	movlw	3
  2747  031D  118A  25CB  118A   	fcall	___lcd_cmd
  2748  0320                     l2045:
  2749                           
  2750                           ;main.c: 173:     __lcd_cmd(0x02);
  2751  0320  3002               	movlw	2
  2752  0321  118A  25CB  118A   	fcall	___lcd_cmd
  2753  0324                     l2047:
  2754                           
  2755                           ;main.c: 177:     __lcd_cmd(0x02);
  2756  0324  3002               	movlw	2
  2757  0325  118A  25CB  118A   	fcall	___lcd_cmd
  2758  0328                     l2049:
  2759                           
  2760                           ;main.c: 178:     __lcd_cmd(0x08);
  2761  0328  3008               	movlw	8
  2762  0329  118A  25CB  118A   	fcall	___lcd_cmd
  2763  032C                     l2051:
  2764                           
  2765                           ;main.c: 181:     __lcd_cmd(0x00);
  2766  032C  3000               	movlw	0
  2767  032D  118A  25CB  118A   	fcall	___lcd_cmd
  2768  0330                     l2053:
  2769                           
  2770                           ;main.c: 182:     __lcd_cmd(0x08);
  2771  0330  3008               	movlw	8
  2772  0331  118A  25CB  118A   	fcall	___lcd_cmd
  2773  0334                     l2055:
  2774                           
  2775                           ;main.c: 185:     __lcd_cmd(0x00);
  2776  0334  3000               	movlw	0
  2777  0335  118A  25CB  118A   	fcall	___lcd_cmd
  2778  0338                     l2057:
  2779                           
  2780                           ;main.c: 186:     __lcd_cmd(0x01);
  2781  0338  3001               	movlw	1
  2782  0339  118A  25CB  118A   	fcall	___lcd_cmd
  2783  033C                     l2059:
  2784                           
  2785                           ;main.c: 189:     __lcd_cmd(0x00);
  2786  033C  3000               	movlw	0
  2787  033D  118A  25CB  118A   	fcall	___lcd_cmd
  2788  0340                     l2061:
  2789                           
  2790                           ;main.c: 190:     __lcd_cmd(0x06);
  2791  0340  3006               	movlw	6
  2792  0341  118A  25CB  118A   	fcall	___lcd_cmd
  2793  0344                     l103:
  2794  0344  0008               	return
  2795  0345                     __end_of_LCD_Init:
  2796                           
  2797                           	psect	text10
  2798  0279                     __ptext10:	
  2799 ;; *************** function _Draw_settings_display *****************
  2800 ;; Defined at:
  2801 ;;		line 245 in file "main.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;  ctr             2    2[BANK0 ] int 
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;		None
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  1    wreg      void 
  2808 ;; Registers used:
  2809 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2815 ;;      Params:         0       2       0       0
  2816 ;;      Locals:         0       0       0       0
  2817 ;;      Temps:          0       0       0       0
  2818 ;;      Totals:         0       2       0       0
  2819 ;;Total ram usage:        2 bytes
  2820 ;; Hardware stack levels used:    1
  2821 ;; Hardware stack levels required when called:    5
  2822 ;; This function calls:
  2823 ;;		_LCD_display_clear
  2824 ;;		_LCD_send_string
  2825 ;;		_LCD_set_cursor
  2826 ;;		___lcd_send_char
  2827 ;; This function is called by:
  2828 ;;		_main
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           
  2833                           ;psect for function _Draw_settings_display
  2834  0279                     _Draw_settings_display:
  2835  0279                     l2091:	
  2836                           ;incstack = 0
  2837                           ; Regs used in _Draw_settings_display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2838                           
  2839                           
  2840                           ;main.c: 245: void Draw_settings_display(ctr);main.c: 246: {;main.c: 247:     if(ctr == 
      +                          0)
  2841  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2842  027A  1303               	bcf	3,6	;RP1=0, select bank0
  2843  027B  084D               	movf	Draw_settings_display@ctr,w
  2844  027C  044E               	iorwf	Draw_settings_display@ctr+1,w
  2845  027D  1D03               	btfss	3,2
  2846  027E  2A80               	goto	u1641
  2847  027F  2A81               	goto	u1640
  2848  0280                     u1641:
  2849  0280  2A9B               	goto	l2099
  2850  0281                     u1640:
  2851  0281                     l2093:
  2852                           
  2853                           ;main.c: 248:     {;main.c: 249:         LCD_display_clear();
  2854  0281  118A  2595  118A   	fcall	_LCD_display_clear
  2855                           
  2856                           ;main.c: 250:         LCD_set_cursor(0,0);
  2857  0284  01F4               	clrf	LCD_set_cursor@column
  2858  0285  3000               	movlw	0
  2859  0286  118A  2520  118A   	fcall	_LCD_set_cursor
  2860                           
  2861                           ;main.c: 251:         __lcd_send_char(0x7E);
  2862  0289  307E               	movlw	126
  2863  028A  118A  2494  118A   	fcall	___lcd_send_char
  2864  028D                     l2095:
  2865                           
  2866                           ;main.c: 252:         LCD_send_string(s_time);
  2867  028D  303E               	movlw	(low (_s_time| 0))& (0+255)
  2868  028E  118A  24FF  118A   	fcall	_LCD_send_string
  2869  0291                     l2097:
  2870                           
  2871                           ;main.c: 253:         LCD_set_cursor(1,0);
  2872  0291  01F4               	clrf	LCD_set_cursor@column
  2873  0292  3001               	movlw	1
  2874  0293  118A  2520  118A   	fcall	_LCD_set_cursor
  2875                           
  2876                           ;main.c: 254:         LCD_send_string(s_date);
  2877  0296  3039               	movlw	(low (_s_date| 0))& (0+255)
  2878  0297  118A  24FF  118A   	fcall	_LCD_send_string
  2879                           
  2880                           ;main.c: 255:     }
  2881  029A  2AFD               	goto	l159
  2882  029B                     l2099:
  2883  029B  034D               	decf	Draw_settings_display@ctr,w
  2884  029C  044E               	iorwf	Draw_settings_display@ctr+1,w
  2885  029D  1D03               	btfss	3,2
  2886  029E  2AA0               	goto	u1651
  2887  029F  2AA1               	goto	u1650
  2888  02A0                     u1651:
  2889  02A0  2ABB               	goto	l2107
  2890  02A1                     u1650:
  2891  02A1                     l2101:
  2892                           
  2893                           ;main.c: 257:     {;main.c: 258:         LCD_display_clear();
  2894  02A1  118A  2595  118A   	fcall	_LCD_display_clear
  2895                           
  2896                           ;main.c: 259:         LCD_set_cursor(0,0);
  2897  02A4  01F4               	clrf	LCD_set_cursor@column
  2898  02A5  3000               	movlw	0
  2899  02A6  118A  2520  118A   	fcall	_LCD_set_cursor
  2900                           
  2901                           ;main.c: 260:         __lcd_send_char(0x7E);
  2902  02A9  307E               	movlw	126
  2903  02AA  118A  2494  118A   	fcall	___lcd_send_char
  2904  02AD                     l2103:
  2905                           
  2906                           ;main.c: 261:         LCD_send_string(s_date);
  2907  02AD  3039               	movlw	(low (_s_date| 0))& (0+255)
  2908  02AE  118A  24FF  118A   	fcall	_LCD_send_string
  2909  02B1                     l2105:
  2910                           
  2911                           ;main.c: 262:         LCD_set_cursor(1,0);
  2912  02B1  01F4               	clrf	LCD_set_cursor@column
  2913  02B2  3001               	movlw	1
  2914  02B3  118A  2520  118A   	fcall	_LCD_set_cursor
  2915                           
  2916                           ;main.c: 263:         LCD_send_string(s_temp);
  2917  02B6  30B1               	movlw	(low (_s_temp| 0))& (0+255)
  2918  02B7  118A  24FF  118A   	fcall	_LCD_send_string
  2919                           
  2920                           ;main.c: 264:     }
  2921  02BA  2AFD               	goto	l159
  2922  02BB                     l2107:
  2923  02BB  3002               	movlw	2
  2924  02BC  064D               	xorwf	Draw_settings_display@ctr,w
  2925  02BD  044E               	iorwf	Draw_settings_display@ctr+1,w
  2926  02BE  1D03               	btfss	3,2
  2927  02BF  2AC1               	goto	u1661
  2928  02C0  2AC2               	goto	u1660
  2929  02C1                     u1661:
  2930  02C1  2ADC               	goto	l2115
  2931  02C2                     u1660:
  2932  02C2                     l2109:
  2933                           
  2934                           ;main.c: 266:     {;main.c: 267:         LCD_display_clear();
  2935  02C2  118A  2595  118A   	fcall	_LCD_display_clear
  2936                           
  2937                           ;main.c: 268:         LCD_set_cursor(0,0);
  2938  02C5  01F4               	clrf	LCD_set_cursor@column
  2939  02C6  3000               	movlw	0
  2940  02C7  118A  2520  118A   	fcall	_LCD_set_cursor
  2941                           
  2942                           ;main.c: 269:         __lcd_send_char(0x7E);
  2943  02CA  307E               	movlw	126
  2944  02CB  118A  2494  118A   	fcall	___lcd_send_char
  2945  02CE                     l2111:
  2946                           
  2947                           ;main.c: 270:         LCD_send_string(s_temp);
  2948  02CE  30B1               	movlw	(low (_s_temp| 0))& (0+255)
  2949  02CF  118A  24FF  118A   	fcall	_LCD_send_string
  2950  02D2                     l2113:
  2951                           
  2952                           ;main.c: 271:         LCD_set_cursor(1,0);
  2953  02D2  01F4               	clrf	LCD_set_cursor@column
  2954  02D3  3001               	movlw	1
  2955  02D4  118A  2520  118A   	fcall	_LCD_set_cursor
  2956                           
  2957                           ;main.c: 272:         LCD_send_string(s_humi);
  2958  02D7  30C6               	movlw	(low (_s_humi| 0))& (0+255)
  2959  02D8  118A  24FF  118A   	fcall	_LCD_send_string
  2960                           
  2961                           ;main.c: 273:     }
  2962  02DB  2AFD               	goto	l159
  2963  02DC                     l2115:
  2964  02DC  3003               	movlw	3
  2965  02DD  064D               	xorwf	Draw_settings_display@ctr,w
  2966  02DE  044E               	iorwf	Draw_settings_display@ctr+1,w
  2967  02DF  1D03               	btfss	3,2
  2968  02E0  2AE2               	goto	u1671
  2969  02E1  2AE3               	goto	u1670
  2970  02E2                     u1671:
  2971  02E2  2AFD               	goto	l155
  2972  02E3                     u1670:
  2973  02E3                     l2117:
  2974                           
  2975                           ;main.c: 275:     {;main.c: 276:         LCD_display_clear();
  2976  02E3  118A  2595  118A   	fcall	_LCD_display_clear
  2977                           
  2978                           ;main.c: 277:         LCD_set_cursor(0,0);
  2979  02E6  01F4               	clrf	LCD_set_cursor@column
  2980  02E7  3000               	movlw	0
  2981  02E8  118A  2520  118A   	fcall	_LCD_set_cursor
  2982                           
  2983                           ;main.c: 278:         __lcd_send_char(0x7E);
  2984  02EB  307E               	movlw	126
  2985  02EC  118A  2494  118A   	fcall	___lcd_send_char
  2986  02EF                     l2119:
  2987                           
  2988                           ;main.c: 279:         LCD_send_string(s_humi);
  2989  02EF  30C6               	movlw	(low (_s_humi| 0))& (0+255)
  2990  02F0  118A  24FF  118A   	fcall	_LCD_send_string
  2991  02F3                     l2121:
  2992                           
  2993                           ;main.c: 280:         LCD_set_cursor(1,0);
  2994  02F3  01F4               	clrf	LCD_set_cursor@column
  2995  02F4  3001               	movlw	1
  2996  02F5  118A  2520  118A   	fcall	_LCD_set_cursor
  2997                           
  2998                           ;main.c: 281:         LCD_send_string(s_end);
  2999  02F8  30A0               	movlw	(low (_s_end| 0))& (0+255)
  3000  02F9  118A  24FF  118A   	fcall	_LCD_send_string
  3001  02FC  2AFD               	goto	l159
  3002  02FD                     l155:
  3003  02FD                     l159:
  3004  02FD  0008               	return
  3005  02FE                     __end_of_Draw_settings_display:
  3006                           
  3007                           	psect	text11
  3008  0437                     __ptext11:	
  3009 ;; *************** function _Draw_main_display_p2 *****************
  3010 ;; Defined at:
  3011 ;;		line 233 in file "main.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;		None
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;		None
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  1    wreg      void 
  3018 ;; Registers used:
  3019 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3025 ;;      Params:         0       0       0       0
  3026 ;;      Locals:         0       0       0       0
  3027 ;;      Temps:          0       1       0       0
  3028 ;;      Totals:         0       1       0       0
  3029 ;;Total ram usage:        1 bytes
  3030 ;; Hardware stack levels used:    1
  3031 ;; Hardware stack levels required when called:    5
  3032 ;; This function calls:
  3033 ;;		_LCD_display_clear
  3034 ;;		_LCD_send_string
  3035 ;;		_LCD_set_cursor
  3036 ;; This function is called by:
  3037 ;;		_main
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           
  3042                           ;psect for function _Draw_main_display_p2
  3043  0437                     _Draw_main_display_p2:
  3044  0437                     l2079:	
  3045                           ;incstack = 0
  3046                           ; Regs used in _Draw_main_display_p2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3047                           
  3048                           
  3049                           ;main.c: 235:     LCD_display_clear();
  3050  0437  118A  2595  118A   	fcall	_LCD_display_clear
  3051                           
  3052                           ;main.c: 236:     LCD_set_cursor(0,0);
  3053  043A  01F4               	clrf	LCD_set_cursor@column
  3054  043B  3000               	movlw	0
  3055  043C  118A  2520  118A   	fcall	_LCD_set_cursor
  3056  043F                     l2081:
  3057                           
  3058                           ;main.c: 237:     LCD_send_string(l_time);
  3059  043F  3034               	movlw	(low (_l_time| 0))& (0+255)
  3060  0440  118A  24FF  118A   	fcall	_LCD_send_string
  3061  0443                     l2083:
  3062                           
  3063                           ;main.c: 238:     LCD_set_cursor(0,10);
  3064  0443  300A               	movlw	10
  3065  0444  1283               	bcf	3,5	;RP0=0, select bank0
  3066  0445  1303               	bcf	3,6	;RP1=0, select bank0
  3067  0446  00CD               	movwf	??_Draw_main_display_p2
  3068  0447  084D               	movf	??_Draw_main_display_p2,w
  3069  0448  00F4               	movwf	LCD_set_cursor@column
  3070  0449  3000               	movlw	0
  3071  044A  118A  2520  118A   	fcall	_LCD_set_cursor
  3072                           
  3073                           ;main.c: 239:     LCD_send_string(time);
  3074  044D  30CF               	movlw	(low (_time| 0))& (0+255)
  3075  044E  118A  24FF  118A   	fcall	_LCD_send_string
  3076  0451                     l2085:
  3077                           
  3078                           ;main.c: 240:     LCD_set_cursor(1,0);
  3079  0451  01F4               	clrf	LCD_set_cursor@column
  3080  0452  3001               	movlw	1
  3081  0453  118A  2520  118A   	fcall	_LCD_set_cursor
  3082  0456                     l2087:
  3083                           
  3084                           ;main.c: 241:     LCD_send_string(l_date);
  3085  0456  302F               	movlw	(low (_l_date| 0))& (0+255)
  3086  0457  118A  24FF  118A   	fcall	_LCD_send_string
  3087                           
  3088                           ;main.c: 242:     LCD_set_cursor(1,8);
  3089  045A  3008               	movlw	8
  3090  045B  1283               	bcf	3,5	;RP0=0, select bank0
  3091  045C  1303               	bcf	3,6	;RP1=0, select bank0
  3092  045D  00CD               	movwf	??_Draw_main_display_p2
  3093  045E  084D               	movf	??_Draw_main_display_p2,w
  3094  045F  00F4               	movwf	LCD_set_cursor@column
  3095  0460  3001               	movlw	1
  3096  0461  118A  2520  118A   	fcall	_LCD_set_cursor
  3097  0464                     l2089:
  3098                           
  3099                           ;main.c: 243:     LCD_send_string(date);
  3100  0464  30BD               	movlw	(low (_date| 0))& (0+255)
  3101  0465  118A  24FF  118A   	fcall	_LCD_send_string
  3102  0468                     l149:
  3103  0468  0008               	return
  3104  0469                     __end_of_Draw_main_display_p2:
  3105                           
  3106                           	psect	text12
  3107  0595                     __ptext12:	
  3108 ;; *************** function _LCD_display_clear *****************
  3109 ;; Defined at:
  3110 ;;		line 149 in file "main.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;		None
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;  i               1    9[COMMON] unsigned char 
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  1    wreg      void 
  3117 ;; Registers used:
  3118 ;;		wreg, status,2, status,0, pclath, cstack
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3124 ;;      Params:         0       0       0       0
  3125 ;;      Locals:         1       0       0       0
  3126 ;;      Temps:          1       0       0       0
  3127 ;;      Totals:         2       0       0       0
  3128 ;;Total ram usage:        2 bytes
  3129 ;; Hardware stack levels used:    1
  3130 ;; Hardware stack levels required when called:    4
  3131 ;; This function calls:
  3132 ;;		_LCD_set_cursor
  3133 ;;		___lcd_send_char
  3134 ;; This function is called by:
  3135 ;;		_Draw_main_display_p2
  3136 ;;		_Draw_settings_display
  3137 ;;		_set_temp
  3138 ;;		_main
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142                           
  3143                           ;psect for function _LCD_display_clear
  3144  0595                     _LCD_display_clear:
  3145  0595                     l1939:	
  3146                           ;incstack = 0
  3147                           ; Regs used in _LCD_display_clear: [wreg+status,2+status,0+pclath+cstack]
  3148                           
  3149  0595                     l1941:
  3150                           
  3151                           ;main.c: 152:     LCD_set_cursor(0,0);
  3152  0595  01F4               	clrf	LCD_set_cursor@column
  3153  0596  3000               	movlw	0
  3154  0597  118A  2520  118A   	fcall	_LCD_set_cursor
  3155  059A                     l1943:
  3156                           
  3157                           ;main.c: 153:     for(i = 0;i < 80;i++)
  3158  059A  01F9               	clrf	LCD_display_clear@i
  3159  059B                     l1949:
  3160                           
  3161                           ;main.c: 154:     {;main.c: 155:         __lcd_send_char(0x20);
  3162  059B  3020               	movlw	32
  3163  059C  118A  2494  118A   	fcall	___lcd_send_char
  3164  059F                     l1951:
  3165                           
  3166                           ;main.c: 156:     }
  3167  059F  3001               	movlw	1
  3168  05A0  00F8               	movwf	??_LCD_display_clear
  3169  05A1  0878               	movf	??_LCD_display_clear,w
  3170  05A2  07F9               	addwf	LCD_display_clear@i,f
  3171  05A3                     l1953:
  3172  05A3  3050               	movlw	80
  3173  05A4  0279               	subwf	LCD_display_clear@i,w
  3174  05A5  1C03               	skipc
  3175  05A6  2DA8               	goto	u1531
  3176  05A7  2DA9               	goto	u1530
  3177  05A8                     u1531:
  3178  05A8  2D9B               	goto	l1949
  3179  05A9                     u1530:
  3180  05A9                     l100:
  3181  05A9  0008               	return
  3182  05AA                     __end_of_LCD_display_clear:
  3183                           
  3184                           	psect	text13
  3185  0401                     __ptext13:	
  3186 ;; *************** function _Draw_main_display_p1 *****************
  3187 ;; Defined at:
  3188 ;;		line 218 in file "main.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;		None
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;		None
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  1    wreg      void 
  3195 ;; Registers used:
  3196 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3202 ;;      Params:         0       0       0       0
  3203 ;;      Locals:         0       0       0       0
  3204 ;;      Temps:          1       0       0       0
  3205 ;;      Totals:         1       0       0       0
  3206 ;;Total ram usage:        1 bytes
  3207 ;; Hardware stack levels used:    1
  3208 ;; Hardware stack levels required when called:    4
  3209 ;; This function calls:
  3210 ;;		_LCD_send_string
  3211 ;;		_LCD_set_cursor
  3212 ;;		___lcd_send_char
  3213 ;; This function is called by:
  3214 ;;		_main
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           
  3219                           ;psect for function _Draw_main_display_p1
  3220  0401                     _Draw_main_display_p1:
  3221  0401                     l2063:	
  3222                           ;incstack = 0
  3223                           ; Regs used in _Draw_main_display_p1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3224                           
  3225                           
  3226                           ;main.c: 220:     LCD_send_string(l_temp);
  3227  0401  302A               	movlw	(low (_l_temp| 0))& (0+255)
  3228  0402  118A  24FF  118A   	fcall	_LCD_send_string
  3229  0405                     l2065:
  3230                           
  3231                           ;main.c: 221:     LCD_set_cursor(0,7);
  3232  0405  3007               	movlw	7
  3233  0406  00F9               	movwf	??_Draw_main_display_p1
  3234  0407  0879               	movf	??_Draw_main_display_p1,w
  3235  0408  00F4               	movwf	LCD_set_cursor@column
  3236  0409  3000               	movlw	0
  3237  040A  118A  2520  118A   	fcall	_LCD_set_cursor
  3238  040D                     l2067:
  3239                           
  3240                           ;main.c: 222:     LCD_send_string(current_temp);
  3241  040D  30D7               	movlw	(low (_current_temp| 0))& (0+255)
  3242  040E  118A  24FF  118A   	fcall	_LCD_send_string
  3243                           
  3244                           ;main.c: 223:     __lcd_send_char(0x7E);
  3245  0411  307E               	movlw	126
  3246  0412  118A  2494  118A   	fcall	___lcd_send_char
  3247  0415                     l2069:
  3248                           
  3249                           ;main.c: 224:     LCD_send_string(update_temp);
  3250  0415  3020               	movlw	(low (_update_temp| 0))& (0+255)
  3251  0416  118A  24FF  118A   	fcall	_LCD_send_string
  3252  0419                     l2071:
  3253                           
  3254                           ;main.c: 226:     LCD_set_cursor(1,0);
  3255  0419  01F4               	clrf	LCD_set_cursor@column
  3256  041A  3001               	movlw	1
  3257  041B  118A  2520  118A   	fcall	_LCD_set_cursor
  3258                           
  3259                           ;main.c: 227:     LCD_send_string(l_humi);
  3260  041E  3025               	movlw	(low (_l_humi| 0))& (0+255)
  3261  041F  118A  24FF  118A   	fcall	_LCD_send_string
  3262  0422                     l2073:
  3263                           
  3264                           ;main.c: 228:     LCD_set_cursor(1,9);
  3265  0422  3009               	movlw	9
  3266  0423  00F9               	movwf	??_Draw_main_display_p1
  3267  0424  0879               	movf	??_Draw_main_display_p1,w
  3268  0425  00F4               	movwf	LCD_set_cursor@column
  3269  0426  3001               	movlw	1
  3270  0427  118A  2520  118A   	fcall	_LCD_set_cursor
  3271  042A                     l2075:
  3272                           
  3273                           ;main.c: 229:     LCD_send_string(current_humi);
  3274  042A  3047               	movlw	(low (_current_humi| 0))& (0+255)
  3275  042B  118A  24FF  118A   	fcall	_LCD_send_string
  3276                           
  3277                           ;main.c: 230:     __lcd_send_char(0x7E);
  3278  042E  307E               	movlw	126
  3279  042F  118A  2494  118A   	fcall	___lcd_send_char
  3280  0432                     l2077:
  3281                           
  3282                           ;main.c: 231:     LCD_send_string(update_humi);
  3283  0432  3043               	movlw	(low (_update_humi| 0))& (0+255)
  3284  0433  118A  24FF  118A   	fcall	_LCD_send_string
  3285  0436                     l146:
  3286  0436  0008               	return
  3287  0437                     __end_of_Draw_main_display_p1:
  3288                           
  3289                           	psect	text14
  3290  0520                     __ptext14:	
  3291 ;; *************** function _LCD_set_cursor *****************
  3292 ;; Defined at:
  3293 ;;		line 136 in file "main.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;  row             1    wreg     unsigned char 
  3296 ;;  column          1    4[COMMON] unsigned char 
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;  row             1    7[COMMON] unsigned char 
  3299 ;;  temp            1    6[COMMON] unsigned char 
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      void 
  3302 ;; Registers used:
  3303 ;;		wreg, status,2, status,0, pclath, cstack
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3309 ;;      Params:         1       0       0       0
  3310 ;;      Locals:         2       0       0       0
  3311 ;;      Temps:          1       0       0       0
  3312 ;;      Totals:         4       0       0       0
  3313 ;;Total ram usage:        4 bytes
  3314 ;; Hardware stack levels used:    1
  3315 ;; Hardware stack levels required when called:    3
  3316 ;; This function calls:
  3317 ;;		___lcd_cmd
  3318 ;; This function is called by:
  3319 ;;		_LCD_display_clear
  3320 ;;		_Draw_main_display_p1
  3321 ;;		_Draw_main_display_p2
  3322 ;;		_Draw_settings_display
  3323 ;;		_set_temp
  3324 ;; This function uses a non-reentrant model
  3325 ;;
  3326                           
  3327                           
  3328                           ;psect for function _LCD_set_cursor
  3329  0520                     _LCD_set_cursor:
  3330                           
  3331                           ;incstack = 0
  3332                           ; Regs used in _LCD_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  3333                           ;LCD_set_cursor@row stored from wreg
  3334  0520  00F7               	movwf	LCD_set_cursor@row
  3335  0521                     l1897:
  3336                           
  3337                           ;main.c: 136: void LCD_set_cursor(uint8_t row, uint8_t column);main.c: 137: {;main.c: 13
      +                          8:     if(row == 0)
  3338  0521  0877               	movf	LCD_set_cursor@row,w
  3339  0522  1D03               	btfss	3,2
  3340  0523  2D25               	goto	u1441
  3341  0524  2D26               	goto	u1440
  3342  0525                     u1441:
  3343  0525  2D2B               	goto	l1901
  3344  0526                     u1440:
  3345  0526                     l1899:
  3346                           
  3347                           ;main.c: 139:     {;main.c: 140:         __lcd_cmd(0x08);
  3348  0526  3008               	movlw	8
  3349  0527  118A  25CB  118A   	fcall	___lcd_cmd
  3350                           
  3351                           ;main.c: 141:     }
  3352  052A  2D34               	goto	l1905
  3353  052B                     l1901:
  3354  052B  0377               	decf	LCD_set_cursor@row,w
  3355  052C  1D03               	btfss	3,2
  3356  052D  2D2F               	goto	u1451
  3357  052E  2D30               	goto	u1450
  3358  052F                     u1451:
  3359  052F  2D34               	goto	l1905
  3360  0530                     u1450:
  3361  0530                     l1903:
  3362                           
  3363                           ;main.c: 143:     {;main.c: 144:         __lcd_cmd(0x0C);
  3364  0530  300C               	movlw	12
  3365  0531  118A  25CB  118A   	fcall	___lcd_cmd
  3366  0534                     l1905:
  3367                           
  3368                           ;main.c: 146:     uint8_t temp = column;
  3369  0534  0874               	movf	LCD_set_cursor@column,w
  3370  0535  00F5               	movwf	??_LCD_set_cursor
  3371  0536  0875               	movf	??_LCD_set_cursor,w
  3372  0537  00F6               	movwf	LCD_set_cursor@temp
  3373  0538                     l1907:
  3374                           
  3375                           ;main.c: 147:     __lcd_cmd(temp);
  3376  0538  0876               	movf	LCD_set_cursor@temp,w
  3377  0539  118A  25CB  118A   	fcall	___lcd_cmd
  3378  053C                     l95:
  3379  053C  0008               	return
  3380  053D                     __end_of_LCD_set_cursor:
  3381                           
  3382                           	psect	text15
  3383  05CB                     __ptext15:	
  3384 ;; *************** function ___lcd_cmd *****************
  3385 ;; Defined at:
  3386 ;;		line 70 in file "main.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;  cmd             1    wreg     unsigned char 
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;  cmd             1    3[COMMON] unsigned char 
  3391 ;; Return value:  Size  Location     Type
  3392 ;;                  1    wreg      void 
  3393 ;; Registers used:
  3394 ;;		wreg, status,2, status,0, pclath, cstack
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3400 ;;      Params:         0       0       0       0
  3401 ;;      Locals:         1       0       0       0
  3402 ;;      Temps:          0       0       0       0
  3403 ;;      Totals:         1       0       0       0
  3404 ;;Total ram usage:        1 bytes
  3405 ;; Hardware stack levels used:    1
  3406 ;; Hardware stack levels required when called:    2
  3407 ;; This function calls:
  3408 ;;		___lcd_en_pulse
  3409 ;;		___lcd_port_write
  3410 ;; This function is called by:
  3411 ;;		_LCD_display_ctrl
  3412 ;;		_LCD_set_cursor
  3413 ;;		_LCD_Init
  3414 ;;		___lcd_shift_display
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           
  3419                           ;psect for function ___lcd_cmd
  3420  05CB                     ___lcd_cmd:
  3421                           
  3422                           ;incstack = 0
  3423                           ; Regs used in ___lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  3424                           ;___lcd_cmd@cmd stored from wreg
  3425  05CB  00F3               	movwf	___lcd_cmd@cmd
  3426  05CC                     l1877:
  3427                           
  3428                           ;main.c: 70: void __lcd_cmd(uint8_t cmd);main.c: 71: {;main.c: 72:     RA5 = 0;
  3429  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  3430  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  3431  05CE  1285               	bcf	5,5	;volatile
  3432  05CF                     l1879:
  3433                           
  3434                           ;main.c: 73:     __lcd_port_write(cmd);
  3435  05CF  0873               	movf	___lcd_cmd@cmd,w
  3436  05D0  118A  24DD  118A   	fcall	___lcd_port_write
  3437                           
  3438                           ;main.c: 74:     __lcd_en_pulse();
  3439  05D3  118A  25BB  118A   	fcall	___lcd_en_pulse
  3440  05D6                     l68:
  3441  05D6  0008               	return
  3442  05D7                     __end_of___lcd_cmd:
  3443                           
  3444                           	psect	text16
  3445  04FF                     __ptext16:	
  3446 ;; *************** function _LCD_send_string *****************
  3447 ;; Defined at:
  3448 ;;		line 91 in file "main.c"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;  string          1    wreg     PTR unsigned char 
  3451 ;;		 -> s_end(17), s_humi(9), s_temp(12), s_date(5), 
  3452 ;;		 -> s_time(5), date(9), l_date(5), time(8), 
  3453 ;;		 -> l_time(5), update_humi(4), current_humi(4), l_humi(5), 
  3454 ;;		 -> update_temp(5), current_temp(5), l_temp(5), 
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;  string          1    1[BANK0 ] PTR unsigned char 
  3457 ;;		 -> s_end(17), s_humi(9), s_temp(12), s_date(5), 
  3458 ;;		 -> s_time(5), date(9), l_date(5), time(8), 
  3459 ;;		 -> l_time(5), update_humi(4), current_humi(4), l_humi(5), 
  3460 ;;		 -> update_temp(5), current_temp(5), l_temp(5), 
  3461 ;;  i               1    0[BANK0 ] unsigned char 
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  1    wreg      void 
  3464 ;; Registers used:
  3465 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3471 ;;      Params:         0       0       0       0
  3472 ;;      Locals:         0       2       0       0
  3473 ;;      Temps:          1       0       0       0
  3474 ;;      Totals:         1       2       0       0
  3475 ;;Total ram usage:        3 bytes
  3476 ;; Hardware stack levels used:    1
  3477 ;; Hardware stack levels required when called:    3
  3478 ;; This function calls:
  3479 ;;		___lcd_send_char
  3480 ;; This function is called by:
  3481 ;;		_Draw_main_display_p1
  3482 ;;		_Draw_main_display_p2
  3483 ;;		_Draw_settings_display
  3484 ;;		_set_temp
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           
  3489                           ;psect for function _LCD_send_string
  3490  04FF                     _LCD_send_string:
  3491                           
  3492                           ;incstack = 0
  3493                           ; Regs used in _LCD_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3494                           ;LCD_send_string@string stored from wreg
  3495  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  3496  0500  1303               	bcf	3,6	;RP1=0, select bank0
  3497  0501  00CC               	movwf	LCD_send_string@string
  3498  0502                     l1931:
  3499                           
  3500                           ;main.c: 91: void LCD_send_string(uint8_t string[]);main.c: 92: {;main.c: 93:     uint8_
      +                          t i = 0;
  3501  0502  01CB               	clrf	LCD_send_string@i
  3502                           
  3503                           ;main.c: 94:     for(i = 0;string[i]!='\0';i++)
  3504  0503  01CB               	clrf	LCD_send_string@i
  3505  0504  2D14               	goto	l1937
  3506  0505                     l1933:
  3507                           
  3508                           ;main.c: 95:     {;main.c: 96:         __lcd_send_char(string[i]);
  3509  0505  084B               	movf	LCD_send_string@i,w
  3510  0506  074C               	addwf	LCD_send_string@string,w
  3511  0507  00F8               	movwf	??_LCD_send_string
  3512  0508  0878               	movf	??_LCD_send_string,w
  3513  0509  0084               	movwf	4
  3514  050A  0800               	movf	0,w
  3515  050B  118A  2494  118A   	fcall	___lcd_send_char
  3516  050E                     l1935:
  3517                           
  3518                           ;main.c: 97:     }
  3519  050E  3001               	movlw	1
  3520  050F  00F8               	movwf	??_LCD_send_string
  3521  0510  0878               	movf	??_LCD_send_string,w
  3522  0511  1283               	bcf	3,5	;RP0=0, select bank0
  3523  0512  1303               	bcf	3,6	;RP1=0, select bank0
  3524  0513  07CB               	addwf	LCD_send_string@i,f
  3525  0514                     l1937:
  3526  0514  084B               	movf	LCD_send_string@i,w
  3527  0515  074C               	addwf	LCD_send_string@string,w
  3528  0516  00F8               	movwf	??_LCD_send_string
  3529  0517  0878               	movf	??_LCD_send_string,w
  3530  0518  0084               	movwf	4
  3531  0519  1383               	bcf	3,7	;select IRP bank0
  3532  051A  0800               	movf	0,w
  3533  051B  1D03               	btfss	3,2
  3534  051C  2D1E               	goto	u1521
  3535  051D  2D1F               	goto	u1520
  3536  051E                     u1521:
  3537  051E  2D05               	goto	l1933
  3538  051F                     u1520:
  3539  051F                     l77:
  3540  051F  0008               	return
  3541  0520                     __end_of_LCD_send_string:
  3542                           
  3543                           	psect	text17
  3544  0494                     __ptext17:	
  3545 ;; *************** function ___lcd_send_char *****************
  3546 ;; Defined at:
  3547 ;;		line 77 in file "main.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;  ascii           1    wreg     unsigned char 
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;  ascii           1    7[COMMON] unsigned char 
  3552 ;;  low             1    6[COMMON] unsigned char 
  3553 ;;  high            1    5[COMMON] unsigned char 
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  1    wreg      void 
  3556 ;; Registers used:
  3557 ;;		wreg, status,2, status,0, pclath, cstack
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3563 ;;      Params:         0       0       0       0
  3564 ;;      Locals:         3       0       0       0
  3565 ;;      Temps:          2       0       0       0
  3566 ;;      Totals:         5       0       0       0
  3567 ;;Total ram usage:        5 bytes
  3568 ;; Hardware stack levels used:    1
  3569 ;; Hardware stack levels required when called:    2
  3570 ;; This function calls:
  3571 ;;		___lcd_en_pulse
  3572 ;;		___lcd_port_write
  3573 ;; This function is called by:
  3574 ;;		_LCD_send_string
  3575 ;;		_LCD_display_clear
  3576 ;;		_Draw_main_display_p1
  3577 ;;		_Draw_settings_display
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           
  3582                           ;psect for function ___lcd_send_char
  3583  0494                     ___lcd_send_char:
  3584                           
  3585                           ;incstack = 0
  3586                           ; Regs used in ___lcd_send_char: [wreg+status,2+status,0+pclath+cstack]
  3587                           ;___lcd_send_char@ascii stored from wreg
  3588  0494  00F7               	movwf	___lcd_send_char@ascii
  3589  0495                     l1881:
  3590                           
  3591                           ;main.c: 77: void __lcd_send_char(uint8_t ascii);main.c: 78: {;main.c: 79:     RA5 = 1;
  3592  0495  1283               	bcf	3,5	;RP0=0, select bank0
  3593  0496  1303               	bcf	3,6	;RP1=0, select bank0
  3594  0497  1685               	bsf	5,5	;volatile
  3595  0498                     l1883:
  3596                           
  3597                           ;main.c: 82:     uint8_t low = 0;
  3598  0498  01F6               	clrf	___lcd_send_char@low
  3599  0499                     l1885:
  3600                           
  3601                           ;main.c: 83:     high = ascii >> 4;
  3602  0499  0877               	movf	___lcd_send_char@ascii,w
  3603  049A  00F3               	movwf	??___lcd_send_char
  3604  049B  3004               	movlw	4
  3605  049C                     u1435:
  3606  049C  1003               	clrc
  3607  049D  0CF3               	rrf	??___lcd_send_char,f
  3608  049E  3EFF               	addlw	-1
  3609  049F  1D03               	skipz
  3610  04A0  2C9C               	goto	u1435
  3611  04A1  0873               	movf	??___lcd_send_char,w
  3612  04A2  00F4               	movwf	??___lcd_send_char+1
  3613  04A3  0874               	movf	??___lcd_send_char+1,w
  3614  04A4  00F5               	movwf	___lcd_send_char@high
  3615  04A5                     l1887:
  3616                           
  3617                           ;main.c: 84:     low = ascii & 0x0F;
  3618  04A5  0877               	movf	___lcd_send_char@ascii,w
  3619  04A6  390F               	andlw	15
  3620  04A7  00F3               	movwf	??___lcd_send_char
  3621  04A8  0873               	movf	??___lcd_send_char,w
  3622  04A9  00F6               	movwf	___lcd_send_char@low
  3623  04AA                     l1889:
  3624                           
  3625                           ;main.c: 86:     __lcd_port_write(high);
  3626  04AA  0875               	movf	___lcd_send_char@high,w
  3627  04AB  118A  24DD  118A   	fcall	___lcd_port_write
  3628  04AE                     l1891:
  3629                           
  3630                           ;main.c: 87:     __lcd_en_pulse();
  3631  04AE  118A  25BB  118A   	fcall	___lcd_en_pulse
  3632  04B1                     l1893:
  3633                           
  3634                           ;main.c: 88:     __lcd_port_write(low);
  3635  04B1  0876               	movf	___lcd_send_char@low,w
  3636  04B2  118A  24DD  118A   	fcall	___lcd_port_write
  3637  04B5                     l1895:
  3638                           
  3639                           ;main.c: 89:     __lcd_en_pulse();
  3640  04B5  118A  25BB  118A   	fcall	___lcd_en_pulse
  3641  04B8                     l71:
  3642  04B8  0008               	return
  3643  04B9                     __end_of___lcd_send_char:
  3644                           
  3645                           	psect	text18
  3646  04DD                     __ptext18:	
  3647 ;; *************** function ___lcd_port_write *****************
  3648 ;; Defined at:
  3649 ;;		line 48 in file "main.c"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;  data            1    wreg     unsigned char 
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;  data            1    2[COMMON] unsigned char 
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  1    wreg      void 
  3656 ;; Registers used:
  3657 ;;		wreg
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3663 ;;      Params:         0       0       0       0
  3664 ;;      Locals:         1       0       0       0
  3665 ;;      Temps:          0       0       0       0
  3666 ;;      Totals:         1       0       0       0
  3667 ;;Total ram usage:        1 bytes
  3668 ;; Hardware stack levels used:    1
  3669 ;; Hardware stack levels required when called:    1
  3670 ;; This function calls:
  3671 ;;		Nothing
  3672 ;; This function is called by:
  3673 ;;		___lcd_cmd
  3674 ;;		___lcd_send_char
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           
  3678                           
  3679                           ;psect for function ___lcd_port_write
  3680  04DD                     ___lcd_port_write:
  3681                           
  3682                           ;incstack = 0
  3683                           ; Regs used in ___lcd_port_write: [wreg]
  3684                           ;___lcd_port_write@data stored from wreg
  3685  04DD  00F2               	movwf	___lcd_port_write@data
  3686  04DE                     l1867:
  3687                           
  3688                           ;main.c: 48: void __lcd_port_write(uint8_t data);main.c: 49: {;main.c: 50:     if(data &
      +                           0x01)
  3689  04DE  1C72               	btfss	___lcd_port_write@data,0
  3690  04DF  2CE1               	goto	u1391
  3691  04E0  2CE2               	goto	u1390
  3692  04E1                     u1391:
  3693  04E1  2CE6               	goto	l57
  3694  04E2                     u1390:
  3695  04E2                     l1869:
  3696                           
  3697                           ;main.c: 51:   RC0 = 1;
  3698  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  3699  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  3700  04E4  1407               	bsf	7,0	;volatile
  3701  04E5  2CE9               	goto	l58
  3702  04E6                     l57:	
  3703                           ;main.c: 52:  else
  3704                           
  3705                           
  3706                           ;main.c: 53:   RC0 = 0;
  3707  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  3708  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  3709  04E8  1007               	bcf	7,0	;volatile
  3710  04E9                     l58:
  3711                           
  3712                           ;main.c: 55:  if(data & 0x02)
  3713  04E9  1CF2               	btfss	___lcd_port_write@data,1
  3714  04EA  2CEC               	goto	u1401
  3715  04EB  2CED               	goto	u1400
  3716  04EC                     u1401:
  3717  04EC  2CEF               	goto	l59
  3718  04ED                     u1400:
  3719  04ED                     l1871:
  3720                           
  3721                           ;main.c: 56:   RC1 = 1;
  3722  04ED  1487               	bsf	7,1	;volatile
  3723  04EE  2CF0               	goto	l60
  3724  04EF                     l59:	
  3725                           ;main.c: 57:  else
  3726                           
  3727                           
  3728                           ;main.c: 58:   RC1 = 0;
  3729  04EF  1087               	bcf	7,1	;volatile
  3730  04F0                     l60:
  3731                           
  3732                           ;main.c: 60:  if(data & 0x04)
  3733  04F0  1D72               	btfss	___lcd_port_write@data,2
  3734  04F1  2CF3               	goto	u1411
  3735  04F2  2CF4               	goto	u1410
  3736  04F3                     u1411:
  3737  04F3  2CF6               	goto	l61
  3738  04F4                     u1410:
  3739  04F4                     l1873:
  3740                           
  3741                           ;main.c: 61:   RC2 = 1;
  3742  04F4  1507               	bsf	7,2	;volatile
  3743  04F5  2CF7               	goto	l62
  3744  04F6                     l61:	
  3745                           ;main.c: 62:  else
  3746                           
  3747                           
  3748                           ;main.c: 63:   RC2 = 0;
  3749  04F6  1107               	bcf	7,2	;volatile
  3750  04F7                     l62:
  3751                           
  3752                           ;main.c: 65:  if(data & 0x08)
  3753  04F7  1DF2               	btfss	___lcd_port_write@data,3
  3754  04F8  2CFA               	goto	u1421
  3755  04F9  2CFB               	goto	u1420
  3756  04FA                     u1421:
  3757  04FA  2CFD               	goto	l63
  3758  04FB                     u1420:
  3759  04FB                     l1875:
  3760                           
  3761                           ;main.c: 66:   RC3 = 1;
  3762  04FB  1587               	bsf	7,3	;volatile
  3763  04FC  2CFE               	goto	l65
  3764  04FD                     l63:	
  3765                           ;main.c: 67:  else
  3766                           
  3767                           
  3768                           ;main.c: 68:   RC3 = 0;
  3769  04FD  1187               	bcf	7,3	;volatile
  3770  04FE                     l65:
  3771  04FE  0008               	return
  3772  04FF                     __end_of___lcd_port_write:
  3773                           
  3774                           	psect	text19
  3775  05BB                     __ptext19:	
  3776 ;; *************** function ___lcd_en_pulse *****************
  3777 ;; Defined at:
  3778 ;;		line 41 in file "main.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;		None
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;		None
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  1    wreg      void 
  3785 ;; Registers used:
  3786 ;;		wreg
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3792 ;;      Params:         0       0       0       0
  3793 ;;      Locals:         0       0       0       0
  3794 ;;      Temps:          1       0       0       0
  3795 ;;      Totals:         1       0       0       0
  3796 ;;Total ram usage:        1 bytes
  3797 ;; Hardware stack levels used:    1
  3798 ;; Hardware stack levels required when called:    1
  3799 ;; This function calls:
  3800 ;;		Nothing
  3801 ;; This function is called by:
  3802 ;;		___lcd_cmd
  3803 ;;		___lcd_send_char
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807                           
  3808                           ;psect for function ___lcd_en_pulse
  3809  05BB                     ___lcd_en_pulse:
  3810  05BB                     l1861:	
  3811                           ;incstack = 0
  3812                           ; Regs used in ___lcd_en_pulse: [wreg]
  3813                           
  3814                           
  3815                           ;main.c: 43:     _delay((unsigned long)((10)*(4000000UL/4000000.0)));
  3816  05BB  3003               	movlw	3
  3817  05BC  00F2               	movwf	??___lcd_en_pulse
  3818  05BD                     u1987:
  3819  05BD  0BF2               	decfsz	??___lcd_en_pulse,f
  3820  05BE  2DBD               	goto	u1987
  3821  05BF                     l1863:
  3822                           
  3823                           ;main.c: 44:     PORTAbits.RA4 = 1;
  3824  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  3825  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  3826  05C1  1605               	bsf	5,4	;volatile
  3827                           
  3828                           ;main.c: 45:     _delay((unsigned long)((500)*(4000000UL/4000000.0)));
  3829  05C2  30A6               	movlw	166
  3830  05C3  00F2               	movwf	??___lcd_en_pulse
  3831  05C4                     u1997:
  3832  05C4  0BF2               	decfsz	??___lcd_en_pulse,f
  3833  05C5  2DC4               	goto	u1997
  3834  05C6  0000               	nop
  3835  05C7                     l1865:
  3836                           
  3837                           ;main.c: 46:     PORTAbits.RA4 = 0;
  3838  05C7  1283               	bcf	3,5	;RP0=0, select bank0
  3839  05C8  1303               	bcf	3,6	;RP1=0, select bank0
  3840  05C9  1205               	bcf	5,4	;volatile
  3841  05CA                     l54:
  3842  05CA  0008               	return
  3843  05CB                     __end_of___lcd_en_pulse:
  3844                           
  3845                           	psect	text20
  3846  05D7                     __ptext20:	
  3847 ;; *************** function _isr *****************
  3848 ;; Defined at:
  3849 ;;		line 23 in file "interrupts.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;		None
  3852 ;; Auto vars:     Size  Location     Type
  3853 ;;		None
  3854 ;; Return value:  Size  Location     Type
  3855 ;;                  1    wreg      void 
  3856 ;; Registers used:
  3857 ;;		None
  3858 ;; Tracked objects:
  3859 ;;		On entry : 0/0
  3860 ;;		On exit  : 0/0
  3861 ;;		Unchanged: 0/0
  3862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3863 ;;      Params:         0       0       0       0
  3864 ;;      Locals:         0       0       0       0
  3865 ;;      Temps:          2       0       0       0
  3866 ;;      Totals:         2       0       0       0
  3867 ;;Total ram usage:        2 bytes
  3868 ;; Hardware stack levels used:    1
  3869 ;; This function calls:
  3870 ;;		Nothing
  3871 ;; This function is called by:
  3872 ;;		Interrupt level 1
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           
  3877                           ;psect for function _isr
  3878  05D7                     _isr:
  3879  05D7                     i1l5:
  3880  05D7  0871               	movf	??_isr+1,w
  3881  05D8  008A               	movwf	10
  3882  05D9  0E70               	swapf	??_isr,w
  3883  05DA  0083               	movwf	3
  3884  05DB  0EFE               	swapf	btemp,f
  3885  05DC  0E7E               	swapf	btemp,w
  3886  05DD  0009               	retfie
  3887  05DE                     __end_of_isr:
  3888  007E                     btemp	set	126	;btemp
  3889  007E                     wtemp0	set	126
  3890                           
  3891                           	psect	intentry
  3892  0004                     __pintentry:	
  3893                           ;incstack = 0
  3894                           ; Regs used in _isr: []
  3895                           
  3896  0004                     interrupt_function:
  3897  007E                     saved_w	set	btemp
  3898  0004  00FE               	movwf	btemp
  3899  0005  0E03               	swapf	3,w
  3900  0006  00F0               	movwf	??_isr
  3901  0007  080A               	movf	10,w
  3902  0008  00F1               	movwf	??_isr+1
  3903  0009  118A  2DD7         	ljmp	_isr
  3904                           
  3905                           	psect	config
  3906                           
  3907                           ;Config register CONFIG @ 0x2007
  3908                           ;	Oscillator Selection bits
  3909                           ;	FOSC = INTOSCIO, INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O functio
      +                          n on RA5/OSC1/CLKIN
  3910                           ;	Watchdog Timer Enable bit
  3911                           ;	WDTE = OFF, WDT disabled
  3912                           ;	Power-up Timer Enable bit
  3913                           ;	PWRTE = OFF, PWRT disabled
  3914                           ;	MCLR Pin Function Select bit
  3915                           ;	MCLRE = ON, MCLR pin function is MCLR
  3916                           ;	Code Protection bit
  3917                           ;	CP = OFF, Program memory code protection is disabled
  3918                           ;	Data Code Protection bit
  3919                           ;	CPD = OFF, Data memory code protection is disabled
  3920                           ;	Brown Out Detect
  3921                           ;	BOREN = OFF, BOR disabled
  3922                           ;	Internal External Switchover bit
  3923                           ;	IESO = OFF, Internal External Switchover mode is disabled
  3924                           ;	Fail-Safe Clock Monitor Enabled bit
  3925                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3926  2007                     	org	8199
  3927  2007  30F4               	dw	12532

Data Sizes:
    Strings     6
    Constant    10
    Data        105
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     32      78
    BANK1            80      0      60
    BANK2            80      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
		 -> update_temp(BANK0[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_send_string@string	PTR unsigned char  size(1) Largest target is 17
		 -> s_end(BANK1[17]), s_humi(BANK1[9]), s_temp(BANK1[12]), s_date(BANK0[5]), 
		 -> s_time(BANK0[5]), date(BANK1[9]), l_date(BANK0[5]), time(BANK1[8]), 
		 -> l_time(BANK0[5]), update_humi(BANK0[4]), current_humi(BANK0[4]), l_humi(BANK0[5]), 
		 -> update_temp(BANK0[5]), current_temp(BANK1[5]), l_temp(BANK0[5]), 


Critical Paths under _main in COMMON

    _main->_Draw_main_display_p1
    _main->_LCD_display_clear
    _set_temp->_LCD_display_clear
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _LCD_display_ctrl->___lcd_cmd
    _LCD_Init->___lcd_cmd
    _Draw_settings_display->_LCD_display_clear
    _Draw_main_display_p2->_LCD_display_clear
    _LCD_display_clear->_LCD_set_cursor
    _LCD_display_clear->___lcd_send_char
    _Draw_main_display_p1->_LCD_send_string
    _LCD_set_cursor->___lcd_cmd
    ___lcd_cmd->___lcd_en_pulse
    ___lcd_cmd->___lcd_port_write
    _LCD_send_string->___lcd_send_char
    ___lcd_send_char->___lcd_en_pulse
    ___lcd_send_char->___lcd_port_write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_set_temp
    _set_temp->_sprintf
    _sprintf->___lwmod
    _Draw_settings_display->_LCD_send_string
    _Draw_main_display_p2->_LCD_send_string
    _Draw_main_display_p1->_LCD_send_string

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   25290
                                             28 BANK0      4     4      0
               _Draw_main_display_p1
               _Draw_main_display_p2
              _Draw_settings_display
                           _LCD_Init
                  _LCD_display_clear
                   _LCD_display_ctrl
                           _set_date
                           _set_humi
                           _set_temp
                           _set_time
 ---------------------------------------------------------------------------------
 (1) _set_time                                             1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _set_temp                                             7     7      0    7290
                                             21 BANK0      7     7      0
                  _LCD_display_clear
                    _LCD_send_string
                     _LCD_set_cursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    18      5    1548
                                              6 BANK0     15    10      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _set_humi                                             1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _set_date                                             1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_display_ctrl                                     5     3      2     468
                                              4 COMMON     5     3      2
                          ___lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     155
                                              4 COMMON     2     2      0
                          ___lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _Draw_settings_display                                2     0      2    6028
                                              2 BANK0      2     0      2
                  _LCD_display_clear
                    _LCD_send_string
                     _LCD_set_cursor
                    ___lcd_send_char
 ---------------------------------------------------------------------------------
 (1) _Draw_main_display_p2                                 1     1      0    5464
                                              2 BANK0      1     1      0
                  _LCD_display_clear
                    _LCD_send_string
                     _LCD_set_cursor
 ---------------------------------------------------------------------------------
 (2) _LCD_display_clear                                    2     2      0    2323
                                              8 COMMON     2     2      0
                     _LCD_set_cursor
                    ___lcd_send_char
 ---------------------------------------------------------------------------------
 (1) _Draw_main_display_p1                                 1     1      0    3401
                                              9 COMMON     1     1      0
                    _LCD_send_string
                     _LCD_set_cursor
                    ___lcd_send_char
 ---------------------------------------------------------------------------------
 (2) _LCD_set_cursor                                       4     3      1    1992
                                              4 COMMON     4     3      1
                          ___lcd_cmd
 ---------------------------------------------------------------------------------
 (3) ___lcd_cmd                                            1     1      0     155
                                              3 COMMON     1     1      0
                     ___lcd_en_pulse
                   ___lcd_port_write
 ---------------------------------------------------------------------------------
 (2) _LCD_send_string                                      3     3      0    1149
                                              8 COMMON     1     1      0
                                              0 BANK0      2     2      0
                    ___lcd_send_char
 ---------------------------------------------------------------------------------
 (3) ___lcd_send_char                                      5     5      0     260
                                              3 COMMON     5     5      0
                     ___lcd_en_pulse
                   ___lcd_port_write
 ---------------------------------------------------------------------------------
 (4) ___lcd_port_write                                     1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) ___lcd_en_pulse                                       1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Draw_main_display_p1
     _LCD_send_string
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_set_cursor
       ___lcd_cmd
         ___lcd_en_pulse
         ___lcd_port_write
     ___lcd_send_char
       ___lcd_en_pulse
       ___lcd_port_write
   _Draw_main_display_p2
     _LCD_display_clear
       _LCD_set_cursor
         ___lcd_cmd
           ___lcd_en_pulse
           ___lcd_port_write
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_send_string
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_set_cursor
       ___lcd_cmd
         ___lcd_en_pulse
         ___lcd_port_write
   _Draw_settings_display
     _LCD_display_clear
       _LCD_set_cursor
         ___lcd_cmd
           ___lcd_en_pulse
           ___lcd_port_write
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_send_string
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_set_cursor
       ___lcd_cmd
         ___lcd_en_pulse
         ___lcd_port_write
     ___lcd_send_char
       ___lcd_en_pulse
       ___lcd_port_write
   _LCD_Init
     ___lcd_cmd
       ___lcd_en_pulse
       ___lcd_port_write
   _LCD_display_clear
     _LCD_set_cursor
       ___lcd_cmd
         ___lcd_en_pulse
         ___lcd_port_write
     ___lcd_send_char
       ___lcd_en_pulse
       ___lcd_port_write
   _LCD_display_ctrl
     ___lcd_cmd
       ___lcd_en_pulse
       ___lcd_port_write
   _set_date
   _set_humi
   _set_temp
     _LCD_display_clear
       _LCD_set_cursor
         ___lcd_cmd
           ___lcd_en_pulse
           ___lcd_port_write
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_send_string
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_set_cursor
       ___lcd_cmd
         ___lcd_en_pulse
         ___lcd_port_write
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _set_time

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      3C       5       75.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     20      4E       3       97.5%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      96      10        0.0%
ABS                  0      0      96       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat Oct 24 00:35:15 2020

                   _update_humi 0043                     _update_temp 0020                               pc 0002  
                            l60 04F0                              l61 04F6                              l54 05CA  
                            l62 04F7                              l63 04FD                              l71 04B8  
                            l65 04FE                              l57 04E6                              l58 04E9  
                            l59 04EF                              l68 05D6                              l84 04DC  
                            l77 051F                              l95 053C                              fsr 0004  
                 ___lcd_cmd@cmd 0073                             l100 05A9                             l103 0344  
                           l200 0136                             l202 0144                             l204 0148  
                           l230 01D4                             l223 01C4                             l216 0196  
                           l146 0436                             l218 019A                             l155 02FD  
                           l227 01C4                             l180 057E                             l149 0468  
                           l174 0278                             l159 02FD                             l351 010B  
                           l192 0594                             l186 0568                             l198 0130  
                           l627 0388                             l637 0400                             _RA2 002A  
                           _RC0 0038                             _RC1 0039                             _RA5 002D  
                           _RC2 003A                             _RC3 003B                             _RC4 003C  
                           _RC5 003D                             i1l5 05D7                             u810 0370  
                           u811 036F                             u805 0360                             u830 0384  
                           u831 0383                             u815 036C                             u825 0378  
                           u770 034D                             u771 034C                             u790 035F  
                           u791 035E                             u785 0351                             _isr 05D7  
                           fsr0 0004                             indf 0000   __size_of_Draw_main_display_p1 0036  
 __size_of_Draw_main_display_p2 0032                            l2001 00E3                            l2003 00EA  
                          l2101 02A1                            l2021 04C2                            l2005 00EE  
                          l2111 02CE                            l2103 02AD                            l2031 04D3  
                          l2023 04C7                            l2007 00F7                            l2121 02F3  
                          l2113 02D2                            l2105 02B1                            l2041 0317  
                          l2025 04CC                            l2033 04D8                            l2017 04BA  
                          l2009 0107                            l2201 0126                            l2115 02DC  
                          l2107 02BB                            l2051 032C                            l2043 031C  
                          l2035 02FE                            l2027 04CD                            l2019 04BE  
                          l1411 0347                            l2131 01F3                            l2123 01DD  
                          l2211 013A                            l2203 0127                            l2117 02E3  
                          l2109 02C2                            l2061 0340                            l2053 0330  
                          l2045 0320                            l2037 0307                            l2029 04D2  
                          l1421 035F                            l1413 034D                            l2141 0211  
                          l2133 01FD                            l2125 01E7                            l2221 014F  
                          l2213 013D                            l2205 012A                            l2071 0419  
                          l2063 0401                            l2119 02EF                            l2055 0334  
                          l2047 0324                            l2039 030B                            l1423 0370  
                          l1415 0350                            l1431 0384                            l2151 0230  
                          l2143 0219                            l2135 0202                            l2127 01EA  
                          l2231 0168                            l2223 0151                            l2215 0143  
                          l2207 0137                            l2073 0422                            l2065 0405  
                          l2081 043F                            l2057 0338                            l2049 0328  
                          l1425 0376                            l1417 0357                            l1409 0345  
                          l2161 0249                            l2145 0224                            l2153 0235  
                          l2137 0206                            l2129 01EF                            l2241 0187  
                          l2233 016E                            l2225 0155                            l2217 014C  
                          l2209 0139                            l2075 042A                            l2067 040D  
                          l2083 0443                            l2091 0279                            l2059 033C  
                          l1427 0377                            l1419 035B                            l2155 0240  
                          l2147 0225                            l2139 020C                            l2163 024A  
                          l2171 0272                            l2251 0195                            l2235 0172  
                          l2227 015B                            l2219 014D                            l2077 0432  
                          l2069 0415                            l2085 0451                            l2093 0281  
                          l1701 056F                            l1429 037E                            l2165 024E  
                          l2157 0241                            l2149 022B                            l2261 01B0  
                          l2253 019E                            l2245 018A                            l2237 017D  
                          l2229 0160                            l2087 0456                            l2079 0437  
                          l2095 028D                            l1703 0575                            l2167 0264  
                          l2159 0246                            l1711 0553                            l2263 01B6  
                          l2255 01A3                            l2239 0182                            l2247 018B  
                          l2271 01C9                            l2191 011A                            l2089 0464  
                          l2097 0291                            l1705 057A                            l2169 026E  
                          l1721 0564                            l1713 0559                            l2273 01CD  
                          l2265 01BA                            l2257 01A7                            l2249 0191  
                          l2193 011E                            l2185 010C                            l2099 029B  
                          l1723 057F                            l1715 055F                            l2267 01C0  
                          l2259 01AC                            l2275 01D1                            l2195 0121  
                          l2187 010F                            l1901 052B                            l1733 0590  
                          l1725 0585                            l1709 057A                            l1717 0564  
                          l2269 01C7                            l2197 0122                            l2189 0113  
                          l1903 0530                            l1727 058B                            l1911 03CD  
                          l2199 0123                            l1905 0534                            l1729 0590  
                          l1921 03E9                            l1913 03D0                            l1931 0502  
                          l1907 0538                            l1923 03EF                            l1915 03D7  
                          l2299 005D                     main@lastCLK 0069                            l1861 05BB  
                          l1933 0505                            l1941 0595                            l1925 03F6  
                          l1917 03DB                            l1909 03C5                            l1863 05BF  
                          l1871 04ED                            l1935 050E                            l1951 059F  
                          l1943 059A                            l1919 03DF                            l1927 03FC  
                          l1865 05C7                            l1873 04F4                            l1881 0495  
                          l1937 0514                            l1953 05A3                            l1961 0047  
                          l1875 04FB                            l1867 04DE                            l1891 04AE  
                          l1883 0498                            l1939 0595                            l1699 0569  
                          l1971 0070                            l1963 004C                            l1955 0035  
                          l1869 04E2                            l1893 04B1                            l1885 0499  
                          l1877 05CC                            l1949 059B                            l1973 0074  
                          l1957 003A                            l1895 04B5                            l1887 04A5  
                          l1879 05CF                            l1991 00A5                            l1975 0078  
                          l1967 004D                            l1959 0040                            l1889 04AA  
                          l1897 0521                            l1993 00AB                            l1985 0083  
                          l1977 007C                            l1969 0068                            l1899 0526  
                          l1995 00B2                            l1979 0081                            l1997 00B6  
                          l1989 009B                            l1999 00BB                            ?_isr 0070  
                          STR_1 054D                            u1140 0575                            u1141 0574  
                          u1150 057A                            u1151 0579                            u1400 04ED  
                          u1160 055F                            u1401 04EC                            u1161 055E  
                          u1410 04F4                            u1170 0564                            u1411 04F3  
                          u1171 0563                            u1420 04FB                            u1180 058B  
                          u1421 04FA                            u1181 058A                            u1190 0590  
                          u1510 03FC                            u1191 058F                            u1511 03FB  
                          u1520 051F                            u1440 0526                            u1600 0107  
                          u1521 051E                            u1441 0525                            u1505 03F0  
                          u1601 0106                            u1450 0530                            u1530 05A9  
                          u1610 04C7                            u1435 049C                            u1451 052F  
                          u1531 05A8                            u1611 04C6                            u1620 04CC  
                          u1460 03CD                            u1540 0040                            u1700 0219  
                          u1621 04CB                            u1461 03CC                            u1541 003F  
                          u1701 0218                            u1390 04E2                            u1630 04D2  
                          u1550 0078                            u1710 0224                            u1391 04E1  
                          u1631 04D1                            u1551 0077                            u1711 0223  
                          u1640 0281                            u1480 03DF                            u1560 009A  
                          u1720 022B                            u1800 014C                            u1641 0280  
                          u1481 03DE                            u1561 0099                            u1721 022A  
                          u1801 014B                            u1650 02A1                            u1490 03E9  
                          u1570 00A5                            u1730 0240                            u1810 015B  
                          u1651 02A0                            u1491 03E8                            u1475 03D1  
                          u1571 00A4                            u1731 023F                            u1811 015A  
                          u1660 02C2                            u1580 00AB                            u1740 0246  
                          u1900 01AC                            u1820 0160                            u1661 02C1  
                          u1581 00AA                            u1565 0096                            u1741 0245  
                          u1901 01AB                            u1821 015F                            u1670 02E3  
                          u1590 00F7                            u1750 0278                            u1910 01B6  
                          u1830 0168                            u1671 02E2                            u1495 03E5  
                          u1591 00F6                            u1751 0277                            u1911 01B5  
                          u1831 0167                            u1680 020C                            u1920 01C0  
                          u1840 016E                            u1681 020B                            u1921 01BF  
                          u1841 016D                            u1690 0211                            u1930 01CD  
                          u1850 0187                            u1770 0136                            u1691 0210  
                          u1931 01CC                            u1851 0186                            u1771 0135  
                          u1940 01DA                            u1860 0195                            u1780 0143  
                          u1941 01D9                            u1861 0194                            u1781 0142  
                          u1870 019A                            u1790 0148                            u1871 0199  
                          u1791 0147                            u1880 019E                            u1881 019D  
                          u1890 01A3                            u1891 01A2                            u1957 0302  
                          u1967 030F                            u1977 0319                            u1987 05BD  
                          u1997 05C4                  ___lcd_en_pulse 05BB                            _date 00BD  
                          _main 010C                            _time 00CF                            btemp 007E  
    __size_of_LCD_display_clear 0015         ??_Draw_settings_display 007A                            start 000B  
                         ??_isr 0070                __end_of_LCD_Init 0345                           ?_main 0070  
                         _ANSEL 0091                           _T1CON 0010                 __end_of___lwdiv 0389  
               __end_of___lwmod 0401                           _TMR1H 000F                           _TMR1L 000E  
                         _PORTA 0005                           _PORTC 0007                           _TRISA 0085  
                         _TRISC 0087              LCD_display_clear@i 0079                 __end_of_dpowers 054D  
        __end_of___lcd_en_pulse 05CB                           _s_end 00A0                           pclath 000A  
                         status 0003                           wtemp0 007E                 __end_of_sprintf 010C  
          set_temp@temp_decimal 0066       __size_of___lcd_port_write 0022         __size_of_LCD_set_cursor 001D  
               __initialization 000D            set_temp@temp_integer 0065                 ___lcd_send_char 0494  
                  __end_of_main 01DD                          ??_main 0067              LCD_set_cursor@temp 0076  
      __end_of_LCD_display_ctrl 04DD                 ?___lcd_en_pulse 0070                          _CMCON0 0019  
                        _TMR1IF 0060                          _TMR1ON 0080             ___lcd_send_char@low 0076  
                        _l_date 002F                       ??___lwdiv 0076                       ??___lwmod 004F  
                        _l_humi 0025                          _l_temp 002A                          _l_time 0034  
                        _s_date 0039                          _s_humi 00C6                          _s_temp 00B1  
                        _s_time 003E                __end_of_set_date 0595                    __pdataCOMMON 007A  
              __end_of_set_humi 057F                __end_of_set_temp 0279                __end_of_set_time 0569  
                        saved_w 007E                       ??_sprintf 0056        __size_of_LCD_send_string 0021  
            __size_of___lcd_cmd 000C         __end_of__initialization 002F                       ?_LCD_Init 0070  
       __end_of___lcd_send_char 04B9                  __pcstackCOMMON 0070                    __pidataBANK0 0469  
                  __pidataBANK1 0389                      __pbssBANK0 006B                      ??_LCD_Init 0074  
              ___lcd_port_write 04DD    __end_of_Draw_main_display_p1 0437    __end_of_Draw_main_display_p2 0469  
                _LCD_set_cursor 0520  __size_of_Draw_settings_display 0085   __end_of_Draw_settings_display 02FE  
                    __pmaintext 010C                      __pintentry 0004               __end_of___lcd_cmd 05D7  
         ___lcd_port_write@data 0072                  main@currentCLK 006A                      __stringtab 053D  
        __end_of_LCD_set_cursor 053D            ___lcd_send_char@high 0075                ?___lcd_send_char 0070  
             ??_LCD_send_string 0078                       ?_set_date 0070                       ?_set_humi 0070  
                     ?_set_temp 0070                       ?_set_time 0070                         ___lwdiv 0345  
                       ___lwmod 03C5                         __ptext1 0553                         __ptext2 01DD  
                       __ptext3 0032                         __ptext4 03C5                         __ptext5 0345  
                       __ptext6 0569                         __ptext7 057F                         __ptext8 04B9  
                       __ptext9 02FE                       _T1CONbits 0010                         _counter 006B  
                       _dpowers 0543                ??___lcd_en_pulse 0072                    __size_of_isr 0007  
          LCD_display_ctrl@temp 0078               ?_LCD_display_ctrl 0074                         _sprintf 0032  
          end_of_initialization 002F              ??_LCD_display_ctrl 0076                 ?_LCD_set_cursor 0074  
       LCD_display_ctrl@display 0077                      ??_set_date 0072                      ??_set_humi 0072  
                    ??_set_temp 0060                      ??_set_time 0072                       _PORTAbits 0005  
          _Draw_main_display_p1 0401            _Draw_main_display_p2 0437               __size_of_LCD_Init 0047  
                 __pidataCOMMON 05DE        __end_of___lcd_port_write 04FF           ?_Draw_main_display_p1 0070  
         ?_Draw_main_display_p2 0070             start_initialization 000D                     __end_of_isr 05DE  
             LCD_set_cursor@row 0077            LCD_set_cursor@column 0074                      init_fetch0 05AA  
                   __pdataBANK0 0020                     __pdataBANK1 00A0                       ___lcd_cmd 05CB  
                     ___latbits 0001                   __pcstackBANK0 004B                 _LCD_send_string 04FF  
                   sprintf@flag 005A                     sprintf@prec 005B                    _current_humi 0047  
                  _current_temp 00D7                ___lwdiv@dividend 0074           LCD_send_string@string 004C  
         _Draw_settings_display 0279               __size_of_set_date 0016                        ?___lwdiv 0072  
             __size_of_set_humi 0016                        ?___lwmod 004B               __size_of_set_temp 009C  
             __size_of_set_time 0016                       __pstrings 053D          ??_Draw_main_display_p1 0079  
        ??_Draw_main_display_p2 004D                      ?___lcd_cmd 0070                ___lwdiv@quotient 0077  
              ??_LCD_set_cursor 0075                        ?_sprintf 0051                LCD_send_string@i 004B  
                     _s_lastCLK 006C               interrupt_function 0004                        _LCD_Init 02FE  
        LCD_display_ctrl@cursor 0074       __size_of_LCD_display_ctrl 0024                    _s_currentCLK 006D  
      __size_of___lcd_send_char 0025                     __stringbase 0542         __end_of_LCD_send_string 0520  
         ___lcd_send_char@ascii 0077          ?_Draw_settings_display 004D                __size_of___lwdiv 0044  
              __size_of___lwmod 003C              __end_of__stringtab 0543                     ??___lcd_cmd 0073  
                    sprintf@val 005C               ?___lcd_port_write 0070                 ___lwdiv@divisor 0072  
               ___lwdiv@counter 0079              ??___lcd_port_write 0072                        __ptext10 0279  
                      __ptext11 0437                        __ptext20 05D7                        __ptext12 0595  
                      __ptext13 0401                        __ptext14 0520                        __ptext15 05CB  
                      __ptext16 04FF                        __ptext17 0494                        __ptext18 04DD  
                      __ptext19 05BB                __size_of_sprintf 00DA         __size_of___lcd_en_pulse 0010  
                 __size_of_main 00D1           LCD_display_ctrl@blink 0075               _LCD_display_clear 0595  
                      _set_date 057F                        _set_humi 0569                        _set_temp 01DD  
                      _set_time 0553              ?_LCD_display_clear 0070                    _temp_decimal 007A  
           ??_LCD_display_clear 0078                ?_LCD_send_string 0070               ??___lcd_send_char 0073  
                  _temp_integer 007B                        init_ram0 05AE        Draw_settings_display@ctr 004D  
                      intlevel1 0000                       sprintf@ap 0059                       sprintf@sp 005E  
              ___lwmod@dividend 004D       __end_of_LCD_display_clear 05AA                       stringcode 053D  
              _LCD_display_ctrl 04B9                        sprintf@c 005F                        sprintf@f 0051  
               ___lwmod@divisor 004B                 ___lwmod@counter 0050                        stringdir 053D  
                      stringtab 053D  
