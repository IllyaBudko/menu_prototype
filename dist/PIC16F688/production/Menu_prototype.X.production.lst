

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Fri Oct 23 19:48:21 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F688
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.30
    31                           ; Generated 26/08/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F688 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0007                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0087                     	;# 
    94  008C                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0095                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0007                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001E                     	;# 
   138  001F                     	;# 
   139  0081                     	;# 
   140  0085                     	;# 
   141  0087                     	;# 
   142  008C                     	;# 
   143  008E                     	;# 
   144  008F                     	;# 
   145  0090                     	;# 
   146  0091                     	;# 
   147  0095                     	;# 
   148  0095                     	;# 
   149  0096                     	;# 
   150  0096                     	;# 
   151  0097                     	;# 
   152  0098                     	;# 
   153  0099                     	;# 
   154  009A                     	;# 
   155  009A                     	;# 
   156  009B                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  0000                     	;# 
   162  0001                     	;# 
   163  0002                     	;# 
   164  0003                     	;# 
   165  0004                     	;# 
   166  0005                     	;# 
   167  0007                     	;# 
   168  000A                     	;# 
   169  000B                     	;# 
   170  000C                     	;# 
   171  000E                     	;# 
   172  000E                     	;# 
   173  000F                     	;# 
   174  0010                     	;# 
   175  0011                     	;# 
   176  0012                     	;# 
   177  0013                     	;# 
   178  0014                     	;# 
   179  0015                     	;# 
   180  0016                     	;# 
   181  0017                     	;# 
   182  0018                     	;# 
   183  0019                     	;# 
   184  001A                     	;# 
   185  001E                     	;# 
   186  001F                     	;# 
   187  0081                     	;# 
   188  0085                     	;# 
   189  0087                     	;# 
   190  008C                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0091                     	;# 
   195  0095                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009A                     	;# 
   204  009B                     	;# 
   205  009C                     	;# 
   206  009D                     	;# 
   207  009E                     	;# 
   208  009F                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0007                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001E                     	;# 
   234  001F                     	;# 
   235  0081                     	;# 
   236  0085                     	;# 
   237  0087                     	;# 
   238  008C                     	;# 
   239  008E                     	;# 
   240  008F                     	;# 
   241  0090                     	;# 
   242  0091                     	;# 
   243  0095                     	;# 
   244  0095                     	;# 
   245  0096                     	;# 
   246  0096                     	;# 
   247  0097                     	;# 
   248  0098                     	;# 
   249  0099                     	;# 
   250  009A                     	;# 
   251  009A                     	;# 
   252  009B                     	;# 
   253  009C                     	;# 
   254  009D                     	;# 
   255  009E                     	;# 
   256  009F                     	;# 
   257  0000                     	;# 
   258  0001                     	;# 
   259  0002                     	;# 
   260  0003                     	;# 
   261  0004                     	;# 
   262  0005                     	;# 
   263  0007                     	;# 
   264  000A                     	;# 
   265  000B                     	;# 
   266  000C                     	;# 
   267  000E                     	;# 
   268  000E                     	;# 
   269  000F                     	;# 
   270  0010                     	;# 
   271  0011                     	;# 
   272  0012                     	;# 
   273  0013                     	;# 
   274  0014                     	;# 
   275  0015                     	;# 
   276  0016                     	;# 
   277  0017                     	;# 
   278  0018                     	;# 
   279  0019                     	;# 
   280  001A                     	;# 
   281  001E                     	;# 
   282  001F                     	;# 
   283  0081                     	;# 
   284  0085                     	;# 
   285  0087                     	;# 
   286  008C                     	;# 
   287  008E                     	;# 
   288  008F                     	;# 
   289  0090                     	;# 
   290  0091                     	;# 
   291  0095                     	;# 
   292  0095                     	;# 
   293  0096                     	;# 
   294  0096                     	;# 
   295  0097                     	;# 
   296  0098                     	;# 
   297  0099                     	;# 
   298  009A                     	;# 
   299  009A                     	;# 
   300  009B                     	;# 
   301  009C                     	;# 
   302  009D                     	;# 
   303  009E                     	;# 
   304  009F                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0007                     	;# 
   312  000A                     	;# 
   313  000B                     	;# 
   314  000C                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001E                     	;# 
   330  001F                     	;# 
   331  0081                     	;# 
   332  0085                     	;# 
   333  0087                     	;# 
   334  008C                     	;# 
   335  008E                     	;# 
   336  008F                     	;# 
   337  0090                     	;# 
   338  0091                     	;# 
   339  0095                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353                           
   354                           	psect	idataBANK0
   355  02F0                     __pidataBANK0:
   356                           
   357                           ;initializer for _date
   358  02F0  3433               	retlw	51
   359  02F1  3430               	retlw	48
   360  02F2  342F               	retlw	47
   361  02F3  3430               	retlw	48
   362  02F4  3437               	retlw	55
   363  02F5  342F               	retlw	47
   364  02F6  3439               	retlw	57
   365  02F7  3432               	retlw	50
   366  02F8  3400               	retlw	0
   367                           
   368                           ;initializer for _time
   369  02F9  3431               	retlw	49
   370  02FA  3432               	retlw	50
   371  02FB  343A               	retlw	58
   372  02FC  3430               	retlw	48
   373  02FD  3430               	retlw	48
   374  02FE  3450               	retlw	80
   375  02FF  344D               	retlw	77
   376  0300  3400               	retlw	0
   377                           
   378                           ;initializer for _update_temp
   379  0301  3432               	retlw	50
   380  0302  3433               	retlw	51
   381  0303  342E               	retlw	46
   382  0304  3435               	retlw	53
   383  0305  3400               	retlw	0
   384                           
   385                           ;initializer for _current_temp
   386  0306  3432               	retlw	50
   387  0307  3431               	retlw	49
   388  0308  342E               	retlw	46
   389  0309  3435               	retlw	53
   390  030A  3400               	retlw	0
   391                           
   392                           ;initializer for _update_humi
   393  030B  3434               	retlw	52
   394  030C  3435               	retlw	53
   395  030D  3425               	retlw	37
   396  030E  3400               	retlw	0
   397                           
   398                           ;initializer for _current_humi
   399  030F  3433               	retlw	51
   400  0310  3438               	retlw	56
   401  0311  3425               	retlw	37
   402  0312  3400               	retlw	0
   403                           
   404                           	psect	strings
   405  0200                     __pstrings:
   406  0200                     stringtab:
   407  0200                     __stringtab:
   408                           
   409                           ;	String table - string pointers are 1 byte each
   410  0200  1BFF               	btfsc	btemp+1,7
   411  0201  2A0A               	ljmp	stringcode
   412  0202  1383               	bcf	3,7
   413  0203  187F               	btfsc	btemp+1,0
   414  0204  1783               	bsf	3,7
   415  0205  0800               	movf	0,w
   416  0206  0A84               	incf	4,f
   417  0207  1903               	skipnz
   418  0208  0AFF               	incf	btemp+1,f
   419  0209  0008               	return
   420  020A                     stringcode:
   421  020A                     stringdir:
   422  020A  3002               	movlw	high stringdir
   423  020B  008A               	movwf	10
   424  020C  0804               	movf	4,w
   425  020D  0A84               	incf	4,f
   426  020E  0782               	addwf	2,f
   427  020F                     __stringbase:
   428  020F  3400               	retlw	0
   429  0210                     __end_of__stringtab:
   430  0210                     _s_temp:
   431  0210  3454               	retlw	84
   432  0211  3465               	retlw	101
   433  0212  346D               	retlw	109
   434  0213  3470               	retlw	112
   435  0214  3465               	retlw	101
   436  0215  3472               	retlw	114
   437  0216  3461               	retlw	97
   438  0217  3474               	retlw	116
   439  0218  3475               	retlw	117
   440  0219  3472               	retlw	114
   441  021A  3465               	retlw	101
   442  021B  3400               	retlw	0
   443  021C                     __end_of_s_temp:
   444  021C                     _s_humi:
   445  021C  3448               	retlw	72
   446  021D  3475               	retlw	117
   447  021E  346D               	retlw	109
   448  021F  3469               	retlw	105
   449  0220  3464               	retlw	100
   450  0221  3469               	retlw	105
   451  0222  3474               	retlw	116
   452  0223  3479               	retlw	121
   453  0224  3400               	retlw	0
   454  0225                     __end_of_s_humi:
   455  0225                     _l_humi:
   456  0225  3448               	retlw	72
   457  0226  3475               	retlw	117
   458  0227  346D               	retlw	109
   459  0228  3469               	retlw	105
   460  0229  3400               	retlw	0
   461  022A                     __end_of_l_humi:
   462  022A                     _l_temp:
   463  022A  3454               	retlw	84
   464  022B  3465               	retlw	101
   465  022C  346D               	retlw	109
   466  022D  3470               	retlw	112
   467  022E  3400               	retlw	0
   468  022F                     __end_of_l_temp:
   469  022F                     _l_date:
   470  022F  3444               	retlw	68
   471  0230  3461               	retlw	97
   472  0231  3474               	retlw	116
   473  0232  3465               	retlw	101
   474  0233  3400               	retlw	0
   475  0234                     __end_of_l_date:
   476  0234                     _l_time:
   477  0234  3454               	retlw	84
   478  0235  3469               	retlw	105
   479  0236  346D               	retlw	109
   480  0237  3465               	retlw	101
   481  0238  3400               	retlw	0
   482  0239                     __end_of_l_time:
   483  0239                     _s_date:
   484  0239  3444               	retlw	68
   485  023A  3461               	retlw	97
   486  023B  3474               	retlw	116
   487  023C  3465               	retlw	101
   488  023D  3400               	retlw	0
   489  023E                     __end_of_s_date:
   490  023E                     _s_time:
   491  023E  3454               	retlw	84
   492  023F  3469               	retlw	105
   493  0240  346D               	retlw	109
   494  0241  3465               	retlw	101
   495  0242  3400               	retlw	0
   496  0243                     __end_of_s_time:
   497  0010                     _T1CON	set	16
   498  000F                     _TMR1H	set	15
   499  000E                     _TMR1L	set	14
   500  0010                     _T1CONbits	set	16
   501  0007                     _PORTC	set	7
   502  0005                     _PORTA	set	5
   503  0019                     _CMCON0	set	25
   504  0005                     _PORTAbits	set	5
   505  003D                     _RC5	set	61
   506  003C                     _RC4	set	60
   507  0080                     _TMR1ON	set	128
   508  002A                     _RA2	set	42
   509  0060                     _TMR1IF	set	96
   510  002D                     _RA5	set	45
   511  003B                     _RC3	set	59
   512  003A                     _RC2	set	58
   513  0039                     _RC1	set	57
   514  0038                     _RC0	set	56
   515  0087                     _TRISC	set	135
   516  0085                     _TRISA	set	133
   517  0091                     _ANSEL	set	145
   518                           
   519                           	psect	cinit
   520  000D                     start_initialization:	
   521                           ; #config settings
   522                           
   523  000D                     __initialization:
   524                           
   525                           ; Initialize objects allocated to BANK0
   526  000D  1383               	bcf	3,7	;select IRP bank0
   527  000E  3043               	movlw	low (__pdataBANK0+35)
   528  000F  00FD               	movwf	btemp+-1
   529  0010  3002               	movlw	high __pidataBANK0
   530  0011  00FE               	movwf	btemp
   531  0012  30F0               	movlw	low __pidataBANK0
   532  0013  00FF               	movwf	btemp+1
   533  0014  3020               	movlw	low __pdataBANK0
   534  0015  0084               	movwf	4
   535  0016  118A  236B  118A   	fcall	init_ram0
   536                           
   537                           ; Clear objects allocated to BANK0
   538  0019  01C9               	clrf	__pbssBANK0& (0+127)
   539  001A                     end_of_initialization:	
   540                           ;End of C runtime variable initialization code
   541                           
   542  001A                     __end_of__initialization:
   543  001A  0183               	clrf	3
   544  001B  118A  281D         	ljmp	_main	;jump to C main() function
   545                           
   546                           	psect	bssBANK0
   547  0049                     __pbssBANK0:
   548  0049                     _counter:
   549  0049                     	ds	1
   550                           
   551                           	psect	dataBANK0
   552  0020                     __pdataBANK0:
   553  0020                     _date:
   554  0020                     	ds	9
   555  0029                     _time:
   556  0029                     	ds	8
   557  0031                     _update_temp:
   558  0031                     	ds	5
   559  0036                     _current_temp:
   560  0036                     	ds	5
   561  003B                     _update_humi:
   562  003B                     	ds	4
   563  003F                     _current_humi:
   564  003F                     	ds	4
   565                           
   566                           	psect	inittext
   567  0367                     init_fetch0:	
   568                           ;	Called with low address in FSR and high address in W
   569                           
   570  0367  087E               	movf	btemp,w
   571  0368  008A               	movwf	10
   572  0369  087F               	movf	btemp+1,w
   573  036A  0082               	movwf	2
   574  036B                     init_ram0:	
   575                           ;Called with:
   576                           ;	high address of idata address in btemp 
   577                           ;	low address of idata address in btemp+1 
   578                           ;	low address of data in FSR
   579                           ;	high address + 1 of data in btemp-1
   580                           
   581  036B  118A  2367  118A   	fcall	init_fetch0
   582  036E  0080               	movwf	0
   583  036F  0A84               	incf	4,f
   584  0370  0804               	movf	4,w
   585  0371  067D               	xorwf	btemp+-1,w
   586  0372  1903               	btfsc	3,2
   587  0373  3400               	retlw	0
   588  0374  0AFF               	incf	btemp+1,f
   589  0375  1903               	btfsc	3,2
   590  0376  0AFE               	incf	btemp,f
   591  0377  2B6B               	goto	init_ram0
   592                           
   593                           	psect	cstackCOMMON
   594  0070                     __pcstackCOMMON:
   595  0070                     ?_isr:
   596  0070                     ??_isr:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?___lcd_en_pulse:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?___lcd_port_write:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?___lcd_cmd:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?___lcd_send_char:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_LCD_display_clear:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ?_LCD_Init:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ?_Draw_main_display_p1:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ?_Draw_main_display_p2:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_main:	
   624                           ; 1 bytes @ 0x0
   625                           
   626                           
   627                           ; 1 bytes @ 0x0
   628  0070                     	ds	2
   629  0072                     ??___lcd_en_pulse:
   630  0072                     ??___lcd_port_write:	
   631                           ; 1 bytes @ 0x2
   632                           
   633  0072                     ___lcd_port_write@data:	
   634                           ; 1 bytes @ 0x2
   635                           
   636                           
   637                           ; 1 bytes @ 0x2
   638  0072                     	ds	1
   639  0073                     ??___lcd_cmd:
   640  0073                     ??___lcd_send_char:	
   641                           ; 1 bytes @ 0x3
   642                           
   643  0073                     ___lcd_cmd@cmd:	
   644                           ; 1 bytes @ 0x3
   645                           
   646                           
   647                           ; 1 bytes @ 0x3
   648  0073                     	ds	1
   649  0074                     ?_LCD_display_ctrl:
   650  0074                     ?_LCD_set_cursor:	
   651                           ; 1 bytes @ 0x4
   652                           
   653  0074                     ??_LCD_Init:	
   654                           ; 1 bytes @ 0x4
   655                           
   656  0074                     LCD_display_ctrl@cursor:	
   657                           ; 1 bytes @ 0x4
   658                           
   659  0074                     LCD_set_cursor@column:	
   660                           ; 1 bytes @ 0x4
   661                           
   662                           
   663                           ; 1 bytes @ 0x4
   664  0074                     	ds	1
   665  0075                     ??_LCD_set_cursor:
   666  0075                     ___lcd_send_char@high:	
   667                           ; 1 bytes @ 0x5
   668                           
   669  0075                     LCD_display_ctrl@blink:	
   670                           ; 1 bytes @ 0x5
   671                           
   672                           
   673                           ; 1 bytes @ 0x5
   674  0075                     	ds	1
   675  0076                     ??_LCD_display_ctrl:
   676  0076                     ___lcd_send_char@low:	
   677                           ; 1 bytes @ 0x6
   678                           
   679  0076                     LCD_set_cursor@temp:	
   680                           ; 1 bytes @ 0x6
   681                           
   682                           
   683                           ; 1 bytes @ 0x6
   684  0076                     	ds	1
   685  0077                     ___lcd_send_char@ascii:
   686  0077                     LCD_display_ctrl@display:	
   687                           ; 1 bytes @ 0x7
   688                           
   689  0077                     LCD_set_cursor@row:	
   690                           ; 1 bytes @ 0x7
   691                           
   692                           
   693                           ; 1 bytes @ 0x7
   694  0077                     	ds	1
   695  0078                     ?_LCD_send_string:
   696  0078                     ??_LCD_display_clear:	
   697                           ; 1 bytes @ 0x8
   698                           
   699  0078                     LCD_display_ctrl@temp:	
   700                           ; 1 bytes @ 0x8
   701                           
   702  0078                     LCD_send_string@string:	
   703                           ; 1 bytes @ 0x8
   704                           
   705                           
   706                           ; 2 bytes @ 0x8
   707  0078                     	ds	1
   708  0079                     LCD_display_clear@i:
   709                           
   710                           ; 1 bytes @ 0x9
   711  0079                     	ds	1
   712  007A                     ??_LCD_send_string:
   713                           
   714                           ; 1 bytes @ 0xA
   715  007A                     	ds	1
   716  007B                     LCD_send_string@i:
   717                           
   718                           ; 1 bytes @ 0xB
   719  007B                     	ds	1
   720  007C                     ??_Draw_settings_display:
   721                           
   722                           	psect	cstackBANK0
   723  0043                     __pcstackBANK0:	
   724                           ; 1 bytes @ 0xC
   725                           
   726  0043                     ??_Draw_main_display_p1:
   727  0043                     ??_Draw_main_display_p2:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0043                     ?_Draw_settings_display:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0043                     Draw_settings_display@ctr:	
   734                           ; 1 bytes @ 0x0
   735                           
   736                           
   737                           ; 2 bytes @ 0x0
   738  0043                     	ds	2
   739  0045                     ??_main:
   740                           
   741                           ; 1 bytes @ 0x2
   742  0045                     	ds	2
   743  0047                     main@lastCLK:
   744                           
   745                           ; 1 bytes @ 0x4
   746  0047                     	ds	1
   747  0048                     main@currentCLK:
   748                           
   749                           ; 1 bytes @ 0x5
   750  0048                     	ds	1
   751                           
   752                           	psect	maintext
   753  001D                     __pmaintext:	
   754 ;;
   755 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   756 ;;
   757 ;; *************** function _main *****************
   758 ;; Defined at:
   759 ;;		line 290 in file "main.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;		None
   762 ;; Auto vars:     Size  Location     Type
   763 ;;  currentCLK      1    5[BANK0 ] unsigned char 
   764 ;;  lastCLK         1    4[BANK0 ] unsigned char 
   765 ;; Return value:  Size  Location     Type
   766 ;;                  1    wreg      void 
   767 ;; Registers used:
   768 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   769 ;; Tracked objects:
   770 ;;		On entry : B00/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   774 ;;      Params:         0       0       0       0
   775 ;;      Locals:         0       2       0       0
   776 ;;      Temps:          0       2       0       0
   777 ;;      Totals:         0       4       0       0
   778 ;;Total ram usage:        4 bytes
   779 ;; Hardware stack levels required when called:    6
   780 ;; This function calls:
   781 ;;		_Draw_main_display_p1
   782 ;;		_Draw_main_display_p2
   783 ;;		_Draw_settings_display
   784 ;;		_LCD_Init
   785 ;;		_LCD_display_clear
   786 ;;		_LCD_display_ctrl
   787 ;; This function is called by:
   788 ;;		Startup code after reset
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792                           
   793                           ;psect for function _main
   794  001D                     _main:
   795  001D                     l1228:	
   796                           ;incstack = 0
   797                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   798                           
   799                           
   800                           ;main.c: 292:     ANSEL = 0x00;
   801  001D  1683               	bsf	3,5	;RP0=1, select bank1
   802  001E  1303               	bcf	3,6	;RP1=0, select bank1
   803  001F  0191               	clrf	17	;volatile
   804  0020                     l1230:
   805                           
   806                           ;main.c: 293:     CMCON0 = 0x07;
   807  0020  3007               	movlw	7
   808  0021  1283               	bcf	3,5	;RP0=0, select bank0
   809  0022  1303               	bcf	3,6	;RP1=0, select bank0
   810  0023  0099               	movwf	25	;volatile
   811  0024                     l1232:
   812                           
   813                           ;main.c: 295:     TRISA = 0x04;
   814  0024  3004               	movlw	4
   815  0025  1683               	bsf	3,5	;RP0=1, select bank1
   816  0026  1303               	bcf	3,6	;RP1=0, select bank1
   817  0027  0085               	movwf	5	;volatile
   818                           
   819                           ;main.c: 296:     PORTA = 0x00;
   820  0028  1283               	bcf	3,5	;RP0=0, select bank0
   821  0029  1303               	bcf	3,6	;RP1=0, select bank0
   822  002A  0185               	clrf	5	;volatile
   823  002B                     l1234:
   824                           
   825                           ;main.c: 298:     TRISC = 0x30;
   826  002B  3030               	movlw	48
   827  002C  1683               	bsf	3,5	;RP0=1, select bank1
   828  002D  1303               	bcf	3,6	;RP1=0, select bank1
   829  002E  0087               	movwf	7	;volatile
   830  002F                     l1236:
   831                           
   832                           ;main.c: 299:     PORTC = 0x00;
   833  002F  1283               	bcf	3,5	;RP0=0, select bank0
   834  0030  1303               	bcf	3,6	;RP1=0, select bank0
   835  0031  0187               	clrf	7	;volatile
   836  0032                     l1238:
   837                           
   838                           ;main.c: 301:     T1CONbits.TMR1ON = 0;
   839  0032  1010               	bcf	16,0	;volatile
   840  0033                     l1240:
   841                           
   842                           ;main.c: 302:     TMR1L = 0x00;
   843  0033  018E               	clrf	14	;volatile
   844  0034                     l1242:
   845                           
   846                           ;main.c: 303:     TMR1H = 0x00;
   847  0034  018F               	clrf	15	;volatile
   848                           
   849                           ;main.c: 304:     T1CON = 0x30;
   850  0035  3030               	movlw	48
   851  0036  0090               	movwf	16	;volatile
   852  0037                     l1244:
   853                           
   854                           ;main.c: 305:     TMR1IF = 0;
   855  0037  100C               	bcf	12,0	;volatile
   856  0038                     l1246:
   857                           
   858                           ;main.c: 307:     LCD_Init();
   859  0038  118A  2197  118A   	fcall	_LCD_Init
   860  003B                     l1248:
   861                           
   862                           ;main.c: 309:     LCD_display_ctrl(1,0,0);
   863  003B  01F4               	clrf	LCD_display_ctrl@cursor
   864  003C  01F5               	clrf	LCD_display_ctrl@blink
   865  003D  3001               	movlw	1
   866  003E  118A  22CC  118A   	fcall	_LCD_display_ctrl
   867  0041                     l153:
   868  0041  1283               	bcf	3,5	;RP0=0, select bank0
   869  0042  1303               	bcf	3,6	;RP1=0, select bank0
   870  0043  1905               	btfsc	5,2	;volatile
   871  0044  2846               	goto	u481
   872  0045  2847               	goto	u480
   873  0046                     u481:
   874  0046  2841               	goto	l153
   875  0047                     u480:
   876  0047                     l155:
   877                           
   878                           ;main.c: 315:         TMR1ON = 0;
   879  0047  1010               	bcf	16,0	;volatile
   880  0048                     l1250:
   881                           
   882                           ;main.c: 316:         TMR1L = 0x00;
   883  0048  018E               	clrf	14	;volatile
   884                           
   885                           ;main.c: 317:         TMR1H = 0x00;
   886  0049  018F               	clrf	15	;volatile
   887  004A                     l1252:
   888                           
   889                           ;main.c: 318:         TMR1IF = 0;
   890  004A  100C               	bcf	12,0	;volatile
   891  004B                     l1254:
   892                           
   893                           ;main.c: 319:         Draw_main_display_p1();
   894  004B  118A  214B  118A   	fcall	_Draw_main_display_p1
   895  004E                     l1256:
   896                           
   897                           ;main.c: 320:         if(RA2)
   898  004E  1283               	bcf	3,5	;RP0=0, select bank0
   899  004F  1303               	bcf	3,6	;RP1=0, select bank0
   900  0050  1D05               	btfss	5,2	;volatile
   901  0051  2853               	goto	u491
   902  0052  2854               	goto	u490
   903  0053                     u491:
   904  0053  2841               	goto	l153
   905  0054                     u490:
   906  0054                     l1258:
   907                           
   908                           ;main.c: 321:         {;main.c: 322:             T1CONbits.TMR1ON = 1;
   909  0054  1410               	bsf	16,0	;volatile
   910  0055                     l157:	
   911                           ;main.c: 323:             while(RA2);
   912                           
   913  0055  1905               	btfsc	5,2	;volatile
   914  0056  2858               	goto	u501
   915  0057  2859               	goto	u500
   916  0058                     u501:
   917  0058  2855               	goto	l157
   918  0059                     u500:
   919  0059                     l159:
   920                           
   921                           ;main.c: 324:             if(TMR1IF)
   922  0059  1C0C               	btfss	12,0	;volatile
   923  005A  285C               	goto	u511
   924  005B  285D               	goto	u510
   925  005C                     u511:
   926  005C  28AF               	goto	l1292
   927  005D                     u510:
   928  005D                     l1260:
   929                           
   930                           ;main.c: 325:             {;main.c: 326:                 TMR1ON = 0;
   931  005D  1010               	bcf	16,0	;volatile
   932  005E                     l1262:
   933                           
   934                           ;main.c: 327:                 TMR1L = 0x00;
   935  005E  018E               	clrf	14	;volatile
   936                           
   937                           ;main.c: 328:                 TMR1H = 0x00;
   938  005F  018F               	clrf	15	;volatile
   939                           
   940                           ;main.c: 329:                 while(TMR1IF)
   941  0060  28AA               	goto	l161
   942  0061                     l1264:
   943                           
   944                           ;main.c: 330:                 {;main.c: 331:                     Draw_settings_display(c
      +                          ounter);
   945  0061  0849               	movf	_counter,w	;volatile
   946  0062  00C5               	movwf	??_main
   947  0063  01C6               	clrf	??_main+1
   948  0064  0845               	movf	??_main,w
   949  0065  00C3               	movwf	Draw_settings_display@ctr
   950  0066  0846               	movf	??_main+1,w
   951  0067  00C4               	movwf	Draw_settings_display@ctr+1
   952  0068  118A  20BE  118A   	fcall	_Draw_settings_display
   953  006B                     l1266:
   954                           
   955                           ;main.c: 332:                     currentCLK = RC4;
   956  006B  3000               	movlw	0
   957  006C  1283               	bcf	3,5	;RP0=0, select bank0
   958  006D  1303               	bcf	3,6	;RP1=0, select bank0
   959  006E  1A07               	btfsc	7,4	;volatile
   960  006F  3001               	movlw	1
   961  0070  00C8               	movwf	main@currentCLK
   962  0071                     l1268:
   963                           
   964                           ;main.c: 333:                     if(currentCLK != lastCLK && currentCLK == 1)
   965  0071  0848               	movf	main@currentCLK,w
   966  0072  0647               	xorwf	main@lastCLK,w
   967  0073  1903               	skipnz
   968  0074  2876               	goto	u521
   969  0075  2877               	goto	u520
   970  0076                     u521:
   971  0076  289D               	goto	l1286
   972  0077                     u520:
   973  0077                     l1270:
   974  0077  0348               	decf	main@currentCLK,w
   975  0078  1D03               	btfss	3,2
   976  0079  287B               	goto	u531
   977  007A  287C               	goto	u530
   978  007B                     u531:
   979  007B  289D               	goto	l1286
   980  007C                     u530:
   981  007C                     l1272:
   982                           
   983                           ;main.c: 334:                     {;main.c: 335:                         if (RC5 != curr
      +                          entCLK)
   984  007C  3000               	movlw	0
   985  007D  1A87               	btfsc	7,5	;volatile
   986  007E  3001               	movlw	1
   987  007F  0648               	xorwf	main@currentCLK,w
   988  0080  1903               	skipnz
   989  0081  2883               	goto	u541
   990  0082  2884               	goto	u540
   991  0083                     u541:
   992  0083  2894               	goto	l1280
   993  0084                     u540:
   994  0084                     l1274:
   995                           
   996                           ;main.c: 336:                         {;main.c: 337:                             if(coun
      +                          ter < 4)
   997  0084  3004               	movlw	4
   998  0085  0249               	subwf	_counter,w	;volatile
   999  0086  1803               	skipnc
  1000  0087  2889               	goto	u551
  1001  0088  288A               	goto	u550
  1002  0089                     u551:
  1003  0089  288F               	goto	l1278
  1004  008A                     u550:
  1005  008A                     l1276:
  1006                           
  1007                           ;main.c: 338:                             {;main.c: 339:                                
      +                           counter++;
  1008  008A  3001               	movlw	1
  1009  008B  00C5               	movwf	??_main
  1010  008C  0845               	movf	??_main,w
  1011  008D  07C9               	addwf	_counter,f	;volatile
  1012                           
  1013                           ;main.c: 340:                             }
  1014  008E  289D               	goto	l1286
  1015  008F                     l1278:
  1016                           
  1017                           ;main.c: 342:                             {;main.c: 343:                                
      +                           counter = 4;
  1018  008F  3004               	movlw	4
  1019  0090  00C5               	movwf	??_main
  1020  0091  0845               	movf	??_main,w
  1021  0092  00C9               	movwf	_counter	;volatile
  1022  0093  289D               	goto	l1286
  1023  0094                     l1280:
  1024                           
  1025                           ;main.c: 347:                         {;main.c: 348:                             if(coun
      +                          ter > 0)
  1026  0094  0849               	movf	_counter,w	;volatile
  1027  0095  1903               	btfsc	3,2
  1028  0096  2898               	goto	u561
  1029  0097  2899               	goto	u560
  1030  0098                     u561:
  1031  0098  289C               	goto	l1284
  1032  0099                     u560:
  1033  0099                     l1282:
  1034                           
  1035                           ;main.c: 349:                             {;main.c: 350:                                
      +                           counter--;
  1036  0099  3001               	movlw	1
  1037  009A  02C9               	subwf	_counter,f	;volatile
  1038                           
  1039                           ;main.c: 351:                             }
  1040  009B  289D               	goto	l1286
  1041  009C                     l1284:
  1042                           
  1043                           ;main.c: 353:                             {;main.c: 354:                                
      +                           counter = 0;
  1044  009C  01C9               	clrf	_counter	;volatile
  1045  009D                     l1286:
  1046                           
  1047                           ;main.c: 358:                     lastCLK = currentCLK;
  1048  009D  0848               	movf	main@currentCLK,w
  1049  009E  00C5               	movwf	??_main
  1050  009F  0845               	movf	??_main,w
  1051  00A0  00C7               	movwf	main@lastCLK
  1052  00A1                     l1288:
  1053                           
  1054                           ;main.c: 359:                     if(RA2)
  1055  00A1  1D05               	btfss	5,2	;volatile
  1056  00A2  28A4               	goto	u571
  1057  00A3  28A5               	goto	u570
  1058  00A4                     u571:
  1059  00A4  28AA               	goto	l161
  1060  00A5                     u570:
  1061  00A5                     l1290:
  1062                           
  1063                           ;main.c: 360:                     {;main.c: 361:                         TMR1ON = 1;
  1064  00A5  1410               	bsf	16,0	;volatile
  1065  00A6                     l171:	
  1066                           ;main.c: 362:                         while(RA2);
  1067                           
  1068  00A6  1905               	btfsc	5,2	;volatile
  1069  00A7  28A9               	goto	u581
  1070  00A8  28AA               	goto	u580
  1071  00A9                     u581:
  1072  00A9  28A6               	goto	l171
  1073  00AA                     u580:
  1074  00AA                     l173:
  1075  00AA                     l161:	
  1076                           ;main.c: 363:                         if(TMR1IF == 0)
  1077                           ;main.c: 368:                 }
  1078                           
  1079                           
  1080                           ;main.c: 329:                 while(TMR1IF)
  1081  00AA  180C               	btfsc	12,0	;volatile
  1082  00AB  28AD               	goto	u591
  1083  00AC  28AE               	goto	u590
  1084  00AD                     u591:
  1085  00AD  2861               	goto	l1264
  1086  00AE                     u590:
  1087  00AE  2841               	goto	l153
  1088  00AF                     l1292:
  1089                           
  1090                           ;main.c: 372:             {;main.c: 373:                 Draw_main_display_p2();
  1091  00AF  118A  2243  118A   	fcall	_Draw_main_display_p2
  1092  00B2                     l177:	
  1093                           ;main.c: 374:                 while(!RA2);
  1094                           
  1095  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1096  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1097  00B4  1D05               	btfss	5,2	;volatile
  1098  00B5  28B7               	goto	u601
  1099  00B6  28B8               	goto	u600
  1100  00B7                     u601:
  1101  00B7  28B2               	goto	l177
  1102  00B8                     u600:
  1103  00B8                     l1294:
  1104                           
  1105                           ;main.c: 375:                 LCD_display_clear();
  1106  00B8  118A  2352  118A   	fcall	_LCD_display_clear
  1107  00BB  2841               	goto	l153
  1108  00BC  118A  280B         	ljmp	start
  1109  00BE                     __end_of_main:
  1110                           
  1111                           	psect	text1
  1112  02CC                     __ptext1:	
  1113 ;; *************** function _LCD_display_ctrl *****************
  1114 ;; Defined at:
  1115 ;;		line 103 in file "main.c"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;  display         1    wreg     unsigned char 
  1118 ;;  cursor          1    4[COMMON] unsigned char 
  1119 ;;  blink           1    5[COMMON] unsigned char 
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;  display         1    7[COMMON] unsigned char 
  1122 ;;  temp            1    8[COMMON] unsigned char 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		wreg, status,2, status,0, pclath, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1132 ;;      Params:         2       0       0       0
  1133 ;;      Locals:         2       0       0       0
  1134 ;;      Temps:          1       0       0       0
  1135 ;;      Totals:         5       0       0       0
  1136 ;;Total ram usage:        5 bytes
  1137 ;; Hardware stack levels used:    1
  1138 ;; Hardware stack levels required when called:    3
  1139 ;; This function calls:
  1140 ;;		___lcd_cmd
  1141 ;; This function is called by:
  1142 ;;		_main
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           
  1147                           ;psect for function _LCD_display_ctrl
  1148  02CC                     _LCD_display_ctrl:
  1149                           
  1150                           ;incstack = 0
  1151                           ; Regs used in _LCD_display_ctrl: [wreg+status,2+status,0+pclath+cstack]
  1152                           ;LCD_display_ctrl@display stored from wreg
  1153  02CC  00F7               	movwf	LCD_display_ctrl@display
  1154  02CD                     l1110:
  1155                           
  1156                           ;main.c: 103: void LCD_display_ctrl(uint8_t display, uint8_t cursor, uint8_t blink);main
      +                          .c: 104: {;main.c: 105:     __lcd_cmd(0x00);
  1157  02CD  3000               	movlw	0
  1158  02CE  118A  2388  118A   	fcall	___lcd_cmd
  1159  02D1                     l1112:
  1160                           
  1161                           ;main.c: 107:     uint8_t temp = 0x0C;
  1162  02D1  300C               	movlw	12
  1163  02D2  00F6               	movwf	??_LCD_display_ctrl
  1164  02D3  0876               	movf	??_LCD_display_ctrl,w
  1165  02D4  00F8               	movwf	LCD_display_ctrl@temp
  1166  02D5                     l1114:
  1167                           
  1168                           ;main.c: 108:     if(display == 1)
  1169  02D5  0377               	decf	LCD_display_ctrl@display,w
  1170  02D6  1D03               	btfss	3,2
  1171  02D7  2AD9               	goto	u401
  1172  02D8  2ADA               	goto	u400
  1173  02D9                     u401:
  1174  02D9  2AEB               	goto	l1126
  1175  02DA                     u400:
  1176  02DA                     l1116:
  1177                           
  1178                           ;main.c: 109:     {;main.c: 110:         if(cursor == 1)
  1179  02DA  0374               	decf	LCD_display_ctrl@cursor,w
  1180  02DB  1D03               	btfss	3,2
  1181  02DC  2ADE               	goto	u411
  1182  02DD  2ADF               	goto	u410
  1183  02DE                     u411:
  1184  02DE  2AE0               	goto	l1120
  1185  02DF                     u410:
  1186  02DF                     l1118:
  1187                           
  1188                           ;main.c: 111:         {;main.c: 112:             temp |= 1 << 1;
  1189  02DF  14F8               	bsf	LCD_display_ctrl@temp,1
  1190  02E0                     l1120:
  1191                           
  1192                           ;main.c: 114:         if(blink == 1)
  1193  02E0  0375               	decf	LCD_display_ctrl@blink,w
  1194  02E1  1D03               	btfss	3,2
  1195  02E2  2AE4               	goto	u421
  1196  02E3  2AE5               	goto	u420
  1197  02E4                     u421:
  1198  02E4  2AE6               	goto	l1124
  1199  02E5                     u420:
  1200  02E5                     l1122:
  1201                           
  1202                           ;main.c: 115:         {;main.c: 116:             temp |= 1 << 0;
  1203  02E5  1478               	bsf	LCD_display_ctrl@temp,0
  1204  02E6                     l1124:
  1205                           
  1206                           ;main.c: 118:         __lcd_cmd(temp);
  1207  02E6  0878               	movf	LCD_display_ctrl@temp,w
  1208  02E7  118A  2388  118A   	fcall	___lcd_cmd
  1209                           
  1210                           ;main.c: 119:     }
  1211  02EA  2AEF               	goto	l82
  1212  02EB                     l1126:
  1213                           
  1214                           ;main.c: 121:     {;main.c: 122:         __lcd_cmd(0x08);
  1215  02EB  3008               	movlw	8
  1216  02EC  118A  2388  118A   	fcall	___lcd_cmd
  1217  02EF                     l82:
  1218  02EF  0008               	return
  1219  02F0                     __end_of_LCD_display_ctrl:
  1220                           
  1221                           	psect	text2
  1222  0197                     __ptext2:	
  1223 ;; *************** function _LCD_Init *****************
  1224 ;; Defined at:
  1225 ;;		line 168 in file "main.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;		None
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;		None
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      void 
  1232 ;; Registers used:
  1233 ;;		wreg, status,2, status,0, pclath, cstack
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1239 ;;      Params:         0       0       0       0
  1240 ;;      Locals:         0       0       0       0
  1241 ;;      Temps:          2       0       0       0
  1242 ;;      Totals:         2       0       0       0
  1243 ;;Total ram usage:        2 bytes
  1244 ;; Hardware stack levels used:    1
  1245 ;; Hardware stack levels required when called:    3
  1246 ;; This function calls:
  1247 ;;		___lcd_cmd
  1248 ;; This function is called by:
  1249 ;;		_main
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252                           
  1253                           
  1254                           ;psect for function _LCD_Init
  1255  0197                     _LCD_Init:
  1256  0197                     l1128:	
  1257                           ;incstack = 0
  1258                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1259                           
  1260                           
  1261                           ;main.c: 170:     _delay((unsigned long)((50)*(4000000UL/4000.0)));
  1262  0197  3041               	movlw	65
  1263  0198  00F5               	movwf	??_LCD_Init+1
  1264  0199  30EE               	movlw	238
  1265  019A  00F4               	movwf	??_LCD_Init
  1266  019B                     u617:
  1267  019B  0BF4               	decfsz	??_LCD_Init,f
  1268  019C  299B               	goto	u617
  1269  019D  0BF5               	decfsz	??_LCD_Init+1,f
  1270  019E  299B               	goto	u617
  1271  019F  0000               	nop
  1272  01A0                     l1130:
  1273                           
  1274                           ;main.c: 172:     __lcd_cmd(0x03);
  1275  01A0  3003               	movlw	3
  1276  01A1  118A  2388  118A   	fcall	___lcd_cmd
  1277  01A4                     l1132:
  1278                           
  1279                           ;main.c: 173:     _delay((unsigned long)((5)*(4000000UL/4000.0)));
  1280  01A4  3007               	movlw	7
  1281  01A5  00F5               	movwf	??_LCD_Init+1
  1282  01A6  307D               	movlw	125
  1283  01A7  00F4               	movwf	??_LCD_Init
  1284  01A8                     u627:
  1285  01A8  0BF4               	decfsz	??_LCD_Init,f
  1286  01A9  29A8               	goto	u627
  1287  01AA  0BF5               	decfsz	??_LCD_Init+1,f
  1288  01AB  29A8               	goto	u627
  1289                           
  1290                           ;main.c: 176:     __lcd_cmd(0x03);
  1291  01AC  3003               	movlw	3
  1292  01AD  118A  2388  118A   	fcall	___lcd_cmd
  1293  01B0                     l1134:
  1294                           
  1295                           ;main.c: 177:     _delay((unsigned long)((120)*(4000000UL/4000000.0)));
  1296  01B0  3027               	movlw	39
  1297  01B1  00F4               	movwf	??_LCD_Init
  1298  01B2                     u637:
  1299  01B2  0BF4               	decfsz	??_LCD_Init,f
  1300  01B3  29B2               	goto	u637
  1301  01B4  29B5               	nop2
  1302  01B5                     l1136:
  1303                           
  1304                           ;main.c: 180:     __lcd_cmd(0x03);
  1305  01B5  3003               	movlw	3
  1306  01B6  118A  2388  118A   	fcall	___lcd_cmd
  1307  01B9                     l1138:
  1308                           
  1309                           ;main.c: 183:     __lcd_cmd(0x02);
  1310  01B9  3002               	movlw	2
  1311  01BA  118A  2388  118A   	fcall	___lcd_cmd
  1312  01BD                     l1140:
  1313                           
  1314                           ;main.c: 187:     __lcd_cmd(0x02);
  1315  01BD  3002               	movlw	2
  1316  01BE  118A  2388  118A   	fcall	___lcd_cmd
  1317  01C1                     l1142:
  1318                           
  1319                           ;main.c: 188:     __lcd_cmd(0x08);
  1320  01C1  3008               	movlw	8
  1321  01C2  118A  2388  118A   	fcall	___lcd_cmd
  1322  01C5                     l1144:
  1323                           
  1324                           ;main.c: 191:     __lcd_cmd(0x00);
  1325  01C5  3000               	movlw	0
  1326  01C6  118A  2388  118A   	fcall	___lcd_cmd
  1327  01C9                     l1146:
  1328                           
  1329                           ;main.c: 192:     __lcd_cmd(0x08);
  1330  01C9  3008               	movlw	8
  1331  01CA  118A  2388  118A   	fcall	___lcd_cmd
  1332  01CD                     l1148:
  1333                           
  1334                           ;main.c: 195:     __lcd_cmd(0x00);
  1335  01CD  3000               	movlw	0
  1336  01CE  118A  2388  118A   	fcall	___lcd_cmd
  1337  01D1                     l1150:
  1338                           
  1339                           ;main.c: 196:     __lcd_cmd(0x01);
  1340  01D1  3001               	movlw	1
  1341  01D2  118A  2388  118A   	fcall	___lcd_cmd
  1342  01D5                     l1152:
  1343                           
  1344                           ;main.c: 199:     __lcd_cmd(0x00);
  1345  01D5  3000               	movlw	0
  1346  01D6  118A  2388  118A   	fcall	___lcd_cmd
  1347  01D9                     l1154:
  1348                           
  1349                           ;main.c: 200:     __lcd_cmd(0x06);
  1350  01D9  3006               	movlw	6
  1351  01DA  118A  2388  118A   	fcall	___lcd_cmd
  1352  01DD                     l101:
  1353  01DD  0008               	return
  1354  01DE                     __end_of_LCD_Init:
  1355                           
  1356                           	psect	text3
  1357  00BE                     __ptext3:	
  1358 ;; *************** function _Draw_settings_display *****************
  1359 ;; Defined at:
  1360 ;;		line 252 in file "main.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;  ctr             2    0[BANK0 ] int 
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;		None
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      void 
  1367 ;; Registers used:
  1368 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1374 ;;      Params:         0       2       0       0
  1375 ;;      Locals:         0       0       0       0
  1376 ;;      Temps:          0       0       0       0
  1377 ;;      Totals:         0       2       0       0
  1378 ;;Total ram usage:        2 bytes
  1379 ;; Hardware stack levels used:    1
  1380 ;; Hardware stack levels required when called:    5
  1381 ;; This function calls:
  1382 ;;		_LCD_display_clear
  1383 ;;		_LCD_send_string
  1384 ;;		_LCD_set_cursor
  1385 ;; This function is called by:
  1386 ;;		_main
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           
  1391                           ;psect for function _Draw_settings_display
  1392  00BE                     _Draw_settings_display:
  1393  00BE                     l1184:	
  1394                           ;incstack = 0
  1395                           ; Regs used in _Draw_settings_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  1396                           
  1397                           
  1398                           ;main.c: 252: void Draw_settings_display(ctr);main.c: 253: {;main.c: 254:     if(ctr == 
      +                          0)
  1399  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1400  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1401  00C0  0843               	movf	Draw_settings_display@ctr,w
  1402  00C1  0444               	iorwf	Draw_settings_display@ctr+1,w
  1403  00C2  1D03               	btfss	3,2
  1404  00C3  28C5               	goto	u431
  1405  00C4  28C6               	goto	u430
  1406  00C5                     u431:
  1407  00C5  28E2               	goto	l1192
  1408  00C6                     u430:
  1409  00C6                     l1186:
  1410                           
  1411                           ;main.c: 255:     {;main.c: 256:         LCD_display_clear();
  1412  00C6  118A  2352  118A   	fcall	_LCD_display_clear
  1413                           
  1414                           ;main.c: 257:         LCD_set_cursor(0,0);
  1415  00C9  01F4               	clrf	LCD_set_cursor@column
  1416  00CA  3000               	movlw	0
  1417  00CB  118A  2335  118A   	fcall	_LCD_set_cursor
  1418  00CE                     l1188:
  1419                           
  1420                           ;main.c: 258:         LCD_send_string(s_time);
  1421  00CE  302F               	movlw	(low ((_s_time-__stringbase)| (0+32768)))& (0+255)
  1422  00CF  00F8               	movwf	LCD_send_string@string
  1423  00D0  3080               	movlw	128
  1424  00D1  00F9               	movwf	LCD_send_string@string+1
  1425  00D2  118A  2281  118A   	fcall	_LCD_send_string
  1426  00D5                     l1190:
  1427                           
  1428                           ;main.c: 259:         LCD_set_cursor(1,0);
  1429  00D5  01F4               	clrf	LCD_set_cursor@column
  1430  00D6  3001               	movlw	1
  1431  00D7  118A  2335  118A   	fcall	_LCD_set_cursor
  1432                           
  1433                           ;main.c: 260:         LCD_send_string(s_date);
  1434  00DA  302A               	movlw	(low ((_s_date-__stringbase)| (0+32768)))& (0+255)
  1435  00DB  00F8               	movwf	LCD_send_string@string
  1436  00DC  3080               	movlw	128
  1437  00DD  00F9               	movwf	LCD_send_string@string+1
  1438  00DE  118A  2281  118A   	fcall	_LCD_send_string
  1439                           
  1440                           ;main.c: 261:     }
  1441  00E1  294A               	goto	l147
  1442  00E2                     l1192:
  1443  00E2  0343               	decf	Draw_settings_display@ctr,w
  1444  00E3  0444               	iorwf	Draw_settings_display@ctr+1,w
  1445  00E4  1D03               	btfss	3,2
  1446  00E5  28E7               	goto	u441
  1447  00E6  28E8               	goto	u440
  1448  00E7                     u441:
  1449  00E7  2904               	goto	l1200
  1450  00E8                     u440:
  1451  00E8                     l1194:
  1452                           
  1453                           ;main.c: 263:     {;main.c: 264:         LCD_display_clear();
  1454  00E8  118A  2352  118A   	fcall	_LCD_display_clear
  1455                           
  1456                           ;main.c: 265:         LCD_set_cursor(0,0);
  1457  00EB  01F4               	clrf	LCD_set_cursor@column
  1458  00EC  3000               	movlw	0
  1459  00ED  118A  2335  118A   	fcall	_LCD_set_cursor
  1460  00F0                     l1196:
  1461                           
  1462                           ;main.c: 266:         LCD_send_string(s_date);
  1463  00F0  302A               	movlw	(low ((_s_date-__stringbase)| (0+32768)))& (0+255)
  1464  00F1  00F8               	movwf	LCD_send_string@string
  1465  00F2  3080               	movlw	128
  1466  00F3  00F9               	movwf	LCD_send_string@string+1
  1467  00F4  118A  2281  118A   	fcall	_LCD_send_string
  1468  00F7                     l1198:
  1469                           
  1470                           ;main.c: 267:         LCD_set_cursor(1,0);
  1471  00F7  01F4               	clrf	LCD_set_cursor@column
  1472  00F8  3001               	movlw	1
  1473  00F9  118A  2335  118A   	fcall	_LCD_set_cursor
  1474                           
  1475                           ;main.c: 268:         LCD_send_string(s_temp);
  1476  00FC  3001               	movlw	(low ((_s_temp-__stringbase)| (0+32768)))& (0+255)
  1477  00FD  00F8               	movwf	LCD_send_string@string
  1478  00FE  3080               	movlw	128
  1479  00FF  00F9               	movwf	LCD_send_string@string+1
  1480  0100  118A  2281  118A   	fcall	_LCD_send_string
  1481                           
  1482                           ;main.c: 269:     }
  1483  0103  294A               	goto	l147
  1484  0104                     l1200:
  1485  0104  3002               	movlw	2
  1486  0105  0643               	xorwf	Draw_settings_display@ctr,w
  1487  0106  0444               	iorwf	Draw_settings_display@ctr+1,w
  1488  0107  1D03               	btfss	3,2
  1489  0108  290A               	goto	u451
  1490  0109  290B               	goto	u450
  1491  010A                     u451:
  1492  010A  2927               	goto	l1208
  1493  010B                     u450:
  1494  010B                     l1202:
  1495                           
  1496                           ;main.c: 271:     {;main.c: 272:         LCD_display_clear();
  1497  010B  118A  2352  118A   	fcall	_LCD_display_clear
  1498                           
  1499                           ;main.c: 273:         LCD_set_cursor(0,0);
  1500  010E  01F4               	clrf	LCD_set_cursor@column
  1501  010F  3000               	movlw	0
  1502  0110  118A  2335  118A   	fcall	_LCD_set_cursor
  1503  0113                     l1204:
  1504                           
  1505                           ;main.c: 274:         LCD_send_string(s_temp);
  1506  0113  3001               	movlw	(low ((_s_temp-__stringbase)| (0+32768)))& (0+255)
  1507  0114  00F8               	movwf	LCD_send_string@string
  1508  0115  3080               	movlw	128
  1509  0116  00F9               	movwf	LCD_send_string@string+1
  1510  0117  118A  2281  118A   	fcall	_LCD_send_string
  1511  011A                     l1206:
  1512                           
  1513                           ;main.c: 275:         LCD_set_cursor(1,0);
  1514  011A  01F4               	clrf	LCD_set_cursor@column
  1515  011B  3001               	movlw	1
  1516  011C  118A  2335  118A   	fcall	_LCD_set_cursor
  1517                           
  1518                           ;main.c: 276:         LCD_send_string(s_humi);
  1519  011F  300D               	movlw	(low ((_s_humi-__stringbase)| (0+32768)))& (0+255)
  1520  0120  00F8               	movwf	LCD_send_string@string
  1521  0121  3080               	movlw	128
  1522  0122  00F9               	movwf	LCD_send_string@string+1
  1523  0123  118A  2281  118A   	fcall	_LCD_send_string
  1524                           
  1525                           ;main.c: 277:     }
  1526  0126  294A               	goto	l147
  1527  0127                     l1208:
  1528  0127  3003               	movlw	3
  1529  0128  0643               	xorwf	Draw_settings_display@ctr,w
  1530  0129  0444               	iorwf	Draw_settings_display@ctr+1,w
  1531  012A  1D03               	btfss	3,2
  1532  012B  292D               	goto	u461
  1533  012C  292E               	goto	u460
  1534  012D                     u461:
  1535  012D  294A               	goto	l143
  1536  012E                     u460:
  1537  012E                     l1210:
  1538                           
  1539                           ;main.c: 279:     {;main.c: 280:         LCD_display_clear();
  1540  012E  118A  2352  118A   	fcall	_LCD_display_clear
  1541                           
  1542                           ;main.c: 281:         LCD_set_cursor(0,0);
  1543  0131  01F4               	clrf	LCD_set_cursor@column
  1544  0132  3000               	movlw	0
  1545  0133  118A  2335  118A   	fcall	_LCD_set_cursor
  1546  0136                     l1212:
  1547                           
  1548                           ;main.c: 282:         LCD_send_string(s_humi);
  1549  0136  300D               	movlw	(low ((_s_humi-__stringbase)| (0+32768)))& (0+255)
  1550  0137  00F8               	movwf	LCD_send_string@string
  1551  0138  3080               	movlw	128
  1552  0139  00F9               	movwf	LCD_send_string@string+1
  1553  013A  118A  2281  118A   	fcall	_LCD_send_string
  1554  013D                     l1214:
  1555                           
  1556                           ;main.c: 283:         LCD_set_cursor(1,0);
  1557  013D  01F4               	clrf	LCD_set_cursor@column
  1558  013E  3001               	movlw	1
  1559  013F  118A  2335  118A   	fcall	_LCD_set_cursor
  1560                           
  1561                           ;main.c: 284:         LCD_send_string(s_time);
  1562  0142  302F               	movlw	(low ((_s_time-__stringbase)| (0+32768)))& (0+255)
  1563  0143  00F8               	movwf	LCD_send_string@string
  1564  0144  3080               	movlw	128
  1565  0145  00F9               	movwf	LCD_send_string@string+1
  1566  0146  118A  2281  118A   	fcall	_LCD_send_string
  1567  0149  294A               	goto	l147
  1568  014A                     l143:
  1569  014A                     l147:
  1570  014A  0008               	return
  1571  014B                     __end_of_Draw_settings_display:
  1572                           
  1573                           	psect	text4
  1574  0243                     __ptext4:	
  1575 ;; *************** function _Draw_main_display_p2 *****************
  1576 ;; Defined at:
  1577 ;;		line 239 in file "main.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;		None
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;		None
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  1    wreg      void 
  1584 ;; Registers used:
  1585 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1591 ;;      Params:         0       0       0       0
  1592 ;;      Locals:         0       0       0       0
  1593 ;;      Temps:          0       1       0       0
  1594 ;;      Totals:         0       1       0       0
  1595 ;;Total ram usage:        1 bytes
  1596 ;; Hardware stack levels used:    1
  1597 ;; Hardware stack levels required when called:    5
  1598 ;; This function calls:
  1599 ;;		_LCD_display_clear
  1600 ;;		_LCD_send_string
  1601 ;;		_LCD_set_cursor
  1602 ;; This function is called by:
  1603 ;;		_main
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           
  1608                           ;psect for function _Draw_main_display_p2
  1609  0243                     _Draw_main_display_p2:
  1610  0243                     l1172:	
  1611                           ;incstack = 0
  1612                           ; Regs used in _Draw_main_display_p2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  1613                           
  1614                           
  1615                           ;main.c: 241:     LCD_display_clear();
  1616  0243  118A  2352  118A   	fcall	_LCD_display_clear
  1617                           
  1618                           ;main.c: 242:     LCD_set_cursor(0,0);
  1619  0246  01F4               	clrf	LCD_set_cursor@column
  1620  0247  3000               	movlw	0
  1621  0248  118A  2335  118A   	fcall	_LCD_set_cursor
  1622  024B                     l1174:
  1623                           
  1624                           ;main.c: 243:     LCD_send_string(l_time);
  1625  024B  3025               	movlw	(low ((_l_time-__stringbase)| (0+32768)))& (0+255)
  1626  024C  00F8               	movwf	LCD_send_string@string
  1627  024D  3080               	movlw	128
  1628  024E  00F9               	movwf	LCD_send_string@string+1
  1629  024F  118A  2281  118A   	fcall	_LCD_send_string
  1630  0252                     l1176:
  1631                           
  1632                           ;main.c: 244:     LCD_set_cursor(0,10);
  1633  0252  300A               	movlw	10
  1634  0253  1283               	bcf	3,5	;RP0=0, select bank0
  1635  0254  1303               	bcf	3,6	;RP1=0, select bank0
  1636  0255  00C3               	movwf	??_Draw_main_display_p2
  1637  0256  0843               	movf	??_Draw_main_display_p2,w
  1638  0257  00F4               	movwf	LCD_set_cursor@column
  1639  0258  3000               	movlw	0
  1640  0259  118A  2335  118A   	fcall	_LCD_set_cursor
  1641                           
  1642                           ;main.c: 245:     LCD_send_string(time);
  1643  025C  3029               	movlw	(low (_time| 0))& (0+255)
  1644  025D  00F8               	movwf	LCD_send_string@string
  1645  025E  3000               	movlw	0
  1646  025F  00F9               	movwf	LCD_send_string@string+1
  1647  0260  118A  2281  118A   	fcall	_LCD_send_string
  1648  0263                     l1178:
  1649                           
  1650                           ;main.c: 246:     LCD_set_cursor(1,0);
  1651  0263  01F4               	clrf	LCD_set_cursor@column
  1652  0264  3001               	movlw	1
  1653  0265  118A  2335  118A   	fcall	_LCD_set_cursor
  1654  0268                     l1180:
  1655                           
  1656                           ;main.c: 247:     LCD_send_string(l_date);
  1657  0268  3020               	movlw	(low ((_l_date-__stringbase)| (0+32768)))& (0+255)
  1658  0269  00F8               	movwf	LCD_send_string@string
  1659  026A  3080               	movlw	128
  1660  026B  00F9               	movwf	LCD_send_string@string+1
  1661  026C  118A  2281  118A   	fcall	_LCD_send_string
  1662                           
  1663                           ;main.c: 248:     LCD_set_cursor(1,8);
  1664  026F  3008               	movlw	8
  1665  0270  1283               	bcf	3,5	;RP0=0, select bank0
  1666  0271  1303               	bcf	3,6	;RP1=0, select bank0
  1667  0272  00C3               	movwf	??_Draw_main_display_p2
  1668  0273  0843               	movf	??_Draw_main_display_p2,w
  1669  0274  00F4               	movwf	LCD_set_cursor@column
  1670  0275  3001               	movlw	1
  1671  0276  118A  2335  118A   	fcall	_LCD_set_cursor
  1672  0279                     l1182:
  1673                           
  1674                           ;main.c: 249:     LCD_send_string(date);
  1675  0279  3020               	movlw	(low (_date| 0))& (0+255)
  1676  027A  00F8               	movwf	LCD_send_string@string
  1677  027B  3000               	movlw	0
  1678  027C  00F9               	movwf	LCD_send_string@string+1
  1679  027D  118A  2281  118A   	fcall	_LCD_send_string
  1680  0280                     l137:
  1681  0280  0008               	return
  1682  0281                     __end_of_Draw_main_display_p2:
  1683                           
  1684                           	psect	text5
  1685  0352                     __ptext5:	
  1686 ;; *************** function _LCD_display_clear *****************
  1687 ;; Defined at:
  1688 ;;		line 156 in file "main.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;		None
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;  i               1    9[COMMON] unsigned char 
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  1    wreg      void 
  1695 ;; Registers used:
  1696 ;;		wreg, status,2, status,0, pclath, cstack
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1702 ;;      Params:         0       0       0       0
  1703 ;;      Locals:         1       0       0       0
  1704 ;;      Temps:          1       0       0       0
  1705 ;;      Totals:         2       0       0       0
  1706 ;;Total ram usage:        2 bytes
  1707 ;; Hardware stack levels used:    1
  1708 ;; Hardware stack levels required when called:    4
  1709 ;; This function calls:
  1710 ;;		_LCD_set_cursor
  1711 ;;		___lcd_send_char
  1712 ;; This function is called by:
  1713 ;;		_Draw_main_display_p2
  1714 ;;		_Draw_settings_display
  1715 ;;		_main
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           
  1720                           ;psect for function _LCD_display_clear
  1721  0352                     _LCD_display_clear:
  1722  0352                     l1094:	
  1723                           ;incstack = 0
  1724                           ; Regs used in _LCD_display_clear: [wreg+status,2+status,0+pclath+cstack]
  1725                           
  1726  0352                     l1096:
  1727                           
  1728                           ;main.c: 159:     LCD_set_cursor(0,0);
  1729  0352  01F4               	clrf	LCD_set_cursor@column
  1730  0353  3000               	movlw	0
  1731  0354  118A  2335  118A   	fcall	_LCD_set_cursor
  1732  0357                     l1098:
  1733                           
  1734                           ;main.c: 160:     for(i = 0;i < 80;i++)
  1735  0357  01F9               	clrf	LCD_display_clear@i
  1736  0358                     l1104:
  1737                           
  1738                           ;main.c: 161:     {;main.c: 162:         __lcd_send_char(0x20);
  1739  0358  3020               	movlw	32
  1740  0359  118A  22A7  118A   	fcall	___lcd_send_char
  1741  035C                     l1106:
  1742                           
  1743                           ;main.c: 163:     }
  1744  035C  3001               	movlw	1
  1745  035D  00F8               	movwf	??_LCD_display_clear
  1746  035E  0878               	movf	??_LCD_display_clear,w
  1747  035F  07F9               	addwf	LCD_display_clear@i,f
  1748  0360                     l1108:
  1749  0360  3050               	movlw	80
  1750  0361  0279               	subwf	LCD_display_clear@i,w
  1751  0362  1C03               	skipc
  1752  0363  2B65               	goto	u391
  1753  0364  2B66               	goto	u390
  1754  0365                     u391:
  1755  0365  2B58               	goto	l1104
  1756  0366                     u390:
  1757  0366                     l98:
  1758  0366  0008               	return
  1759  0367                     __end_of_LCD_display_clear:
  1760                           
  1761                           	psect	text6
  1762  014B                     __ptext6:	
  1763 ;; *************** function _Draw_main_display_p1 *****************
  1764 ;; Defined at:
  1765 ;;		line 223 in file "main.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;		None
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;		None
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  1    wreg      void 
  1772 ;; Registers used:
  1773 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1779 ;;      Params:         0       0       0       0
  1780 ;;      Locals:         0       0       0       0
  1781 ;;      Temps:          0       1       0       0
  1782 ;;      Totals:         0       1       0       0
  1783 ;;Total ram usage:        1 bytes
  1784 ;; Hardware stack levels used:    1
  1785 ;; Hardware stack levels required when called:    4
  1786 ;; This function calls:
  1787 ;;		_LCD_send_string
  1788 ;;		_LCD_set_cursor
  1789 ;;		___lcd_send_char
  1790 ;; This function is called by:
  1791 ;;		_main
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           
  1796                           ;psect for function _Draw_main_display_p1
  1797  014B                     _Draw_main_display_p1:
  1798  014B                     l1156:	
  1799                           ;incstack = 0
  1800                           ; Regs used in _Draw_main_display_p1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  1801                           
  1802                           
  1803                           ;main.c: 225:     LCD_send_string(l_temp);
  1804  014B  301B               	movlw	(low ((_l_temp-__stringbase)| (0+32768)))& (0+255)
  1805  014C  00F8               	movwf	LCD_send_string@string
  1806  014D  3080               	movlw	128
  1807  014E  00F9               	movwf	LCD_send_string@string+1
  1808  014F  118A  2281  118A   	fcall	_LCD_send_string
  1809  0152                     l1158:
  1810                           
  1811                           ;main.c: 226:     LCD_set_cursor(0,7);
  1812  0152  3007               	movlw	7
  1813  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1814  0154  1303               	bcf	3,6	;RP1=0, select bank0
  1815  0155  00C3               	movwf	??_Draw_main_display_p1
  1816  0156  0843               	movf	??_Draw_main_display_p1,w
  1817  0157  00F4               	movwf	LCD_set_cursor@column
  1818  0158  3000               	movlw	0
  1819  0159  118A  2335  118A   	fcall	_LCD_set_cursor
  1820  015C                     l1160:
  1821                           
  1822                           ;main.c: 227:     LCD_send_string(current_temp);
  1823  015C  3036               	movlw	(low (_current_temp| 0))& (0+255)
  1824  015D  00F8               	movwf	LCD_send_string@string
  1825  015E  3000               	movlw	0
  1826  015F  00F9               	movwf	LCD_send_string@string+1
  1827  0160  118A  2281  118A   	fcall	_LCD_send_string
  1828                           
  1829                           ;main.c: 228:     __lcd_send_char(0x7E);
  1830  0163  307E               	movlw	126
  1831  0164  118A  22A7  118A   	fcall	___lcd_send_char
  1832  0167                     l1162:
  1833                           
  1834                           ;main.c: 229:     LCD_send_string(update_temp);
  1835  0167  3031               	movlw	(low (_update_temp| 0))& (0+255)
  1836  0168  00F8               	movwf	LCD_send_string@string
  1837  0169  3000               	movlw	0
  1838  016A  00F9               	movwf	LCD_send_string@string+1
  1839  016B  118A  2281  118A   	fcall	_LCD_send_string
  1840  016E                     l1164:
  1841                           
  1842                           ;main.c: 231:     LCD_set_cursor(1,0);
  1843  016E  01F4               	clrf	LCD_set_cursor@column
  1844  016F  3001               	movlw	1
  1845  0170  118A  2335  118A   	fcall	_LCD_set_cursor
  1846                           
  1847                           ;main.c: 232:     LCD_send_string(l_humi);
  1848  0173  3016               	movlw	(low ((_l_humi-__stringbase)| (0+32768)))& (0+255)
  1849  0174  00F8               	movwf	LCD_send_string@string
  1850  0175  3080               	movlw	128
  1851  0176  00F9               	movwf	LCD_send_string@string+1
  1852  0177  118A  2281  118A   	fcall	_LCD_send_string
  1853  017A                     l1166:
  1854                           
  1855                           ;main.c: 233:     LCD_set_cursor(1,9);
  1856  017A  3009               	movlw	9
  1857  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1858  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1859  017D  00C3               	movwf	??_Draw_main_display_p1
  1860  017E  0843               	movf	??_Draw_main_display_p1,w
  1861  017F  00F4               	movwf	LCD_set_cursor@column
  1862  0180  3001               	movlw	1
  1863  0181  118A  2335  118A   	fcall	_LCD_set_cursor
  1864  0184                     l1168:
  1865                           
  1866                           ;main.c: 234:     LCD_send_string(current_humi);
  1867  0184  303F               	movlw	(low (_current_humi| 0))& (0+255)
  1868  0185  00F8               	movwf	LCD_send_string@string
  1869  0186  3000               	movlw	0
  1870  0187  00F9               	movwf	LCD_send_string@string+1
  1871  0188  118A  2281  118A   	fcall	_LCD_send_string
  1872                           
  1873                           ;main.c: 235:     __lcd_send_char(0x7E);
  1874  018B  307E               	movlw	126
  1875  018C  118A  22A7  118A   	fcall	___lcd_send_char
  1876  018F                     l1170:
  1877                           
  1878                           ;main.c: 236:     LCD_send_string(update_humi);
  1879  018F  303B               	movlw	(low (_update_humi| 0))& (0+255)
  1880  0190  00F8               	movwf	LCD_send_string@string
  1881  0191  3000               	movlw	0
  1882  0192  00F9               	movwf	LCD_send_string@string+1
  1883  0193  118A  2281  118A   	fcall	_LCD_send_string
  1884  0196                     l134:
  1885  0196  0008               	return
  1886  0197                     __end_of_Draw_main_display_p1:
  1887                           
  1888                           	psect	text7
  1889  0335                     __ptext7:	
  1890 ;; *************** function _LCD_set_cursor *****************
  1891 ;; Defined at:
  1892 ;;		line 142 in file "main.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;  row             1    wreg     unsigned char 
  1895 ;;  column          1    4[COMMON] unsigned char 
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;  row             1    7[COMMON] unsigned char 
  1898 ;;  temp            1    6[COMMON] unsigned char 
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  1    wreg      void 
  1901 ;; Registers used:
  1902 ;;		wreg, status,2, status,0, pclath, cstack
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1908 ;;      Params:         1       0       0       0
  1909 ;;      Locals:         2       0       0       0
  1910 ;;      Temps:          1       0       0       0
  1911 ;;      Totals:         4       0       0       0
  1912 ;;Total ram usage:        4 bytes
  1913 ;; Hardware stack levels used:    1
  1914 ;; Hardware stack levels required when called:    3
  1915 ;; This function calls:
  1916 ;;		___lcd_cmd
  1917 ;; This function is called by:
  1918 ;;		_LCD_display_clear
  1919 ;;		_Draw_main_display_p1
  1920 ;;		_Draw_main_display_p2
  1921 ;;		_Draw_settings_display
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           
  1926                           ;psect for function _LCD_set_cursor
  1927  0335                     _LCD_set_cursor:
  1928                           
  1929                           ;incstack = 0
  1930                           ; Regs used in _LCD_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1931                           ;LCD_set_cursor@row stored from wreg
  1932  0335  00F7               	movwf	LCD_set_cursor@row
  1933  0336                     l1074:
  1934                           
  1935                           ;main.c: 142: void LCD_set_cursor(uint8_t row, uint8_t column);main.c: 143: {;main.c: 14
      +                          4:     if(row == 0)
  1936  0336  0877               	movf	LCD_set_cursor@row,w
  1937  0337  1D03               	btfss	3,2
  1938  0338  2B3A               	goto	u361
  1939  0339  2B3B               	goto	u360
  1940  033A                     u361:
  1941  033A  2B40               	goto	l1078
  1942  033B                     u360:
  1943  033B                     l1076:
  1944                           
  1945                           ;main.c: 145:     {;main.c: 146:         __lcd_cmd(0x08);
  1946  033B  3008               	movlw	8
  1947  033C  118A  2388  118A   	fcall	___lcd_cmd
  1948                           
  1949                           ;main.c: 147:     }
  1950  033F  2B49               	goto	l1082
  1951  0340                     l1078:
  1952  0340  0377               	decf	LCD_set_cursor@row,w
  1953  0341  1D03               	btfss	3,2
  1954  0342  2B44               	goto	u371
  1955  0343  2B45               	goto	u370
  1956  0344                     u371:
  1957  0344  2B49               	goto	l1082
  1958  0345                     u370:
  1959  0345                     l1080:
  1960                           
  1961                           ;main.c: 149:     {;main.c: 150:         __lcd_cmd(0x0C);
  1962  0345  300C               	movlw	12
  1963  0346  118A  2388  118A   	fcall	___lcd_cmd
  1964  0349                     l1082:
  1965                           
  1966                           ;main.c: 152:     uint8_t temp = column;
  1967  0349  0874               	movf	LCD_set_cursor@column,w
  1968  034A  00F5               	movwf	??_LCD_set_cursor
  1969  034B  0875               	movf	??_LCD_set_cursor,w
  1970  034C  00F6               	movwf	LCD_set_cursor@temp
  1971  034D                     l1084:
  1972                           
  1973                           ;main.c: 153:     __lcd_cmd(temp);
  1974  034D  0876               	movf	LCD_set_cursor@temp,w
  1975  034E  118A  2388  118A   	fcall	___lcd_cmd
  1976  0351                     l93:
  1977  0351  0008               	return
  1978  0352                     __end_of_LCD_set_cursor:
  1979                           
  1980                           	psect	text8
  1981  0388                     __ptext8:	
  1982 ;; *************** function ___lcd_cmd *****************
  1983 ;; Defined at:
  1984 ;;		line 72 in file "main.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  cmd             1    wreg     unsigned char 
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;  cmd             1    3[COMMON] unsigned char 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      void 
  1991 ;; Registers used:
  1992 ;;		wreg, status,2, status,0, pclath, cstack
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1998 ;;      Params:         0       0       0       0
  1999 ;;      Locals:         1       0       0       0
  2000 ;;      Temps:          0       0       0       0
  2001 ;;      Totals:         1       0       0       0
  2002 ;;Total ram usage:        1 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; Hardware stack levels required when called:    2
  2005 ;; This function calls:
  2006 ;;		___lcd_en_pulse
  2007 ;;		___lcd_port_write
  2008 ;; This function is called by:
  2009 ;;		_LCD_display_ctrl
  2010 ;;		_LCD_set_cursor
  2011 ;;		_LCD_Init
  2012 ;;		___lcd_shift_display
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016                           
  2017                           ;psect for function ___lcd_cmd
  2018  0388                     ___lcd_cmd:
  2019                           
  2020                           ;incstack = 0
  2021                           ; Regs used in ___lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  2022                           ;___lcd_cmd@cmd stored from wreg
  2023  0388  00F3               	movwf	___lcd_cmd@cmd
  2024  0389                     l1054:
  2025                           
  2026                           ;main.c: 72: void __lcd_cmd(uint8_t cmd);main.c: 73: {;main.c: 74:     RA5 = 0;
  2027  0389  1283               	bcf	3,5	;RP0=0, select bank0
  2028  038A  1303               	bcf	3,6	;RP1=0, select bank0
  2029  038B  1285               	bcf	5,5	;volatile
  2030  038C                     l1056:
  2031                           
  2032                           ;main.c: 75:     __lcd_port_write(cmd);
  2033  038C  0873               	movf	___lcd_cmd@cmd,w
  2034  038D  118A  2313  118A   	fcall	___lcd_port_write
  2035                           
  2036                           ;main.c: 76:     __lcd_en_pulse();
  2037  0390  118A  2378  118A   	fcall	___lcd_en_pulse
  2038  0393                     l66:
  2039  0393  0008               	return
  2040  0394                     __end_of___lcd_cmd:
  2041                           
  2042                           	psect	text9
  2043  0281                     __ptext9:	
  2044 ;; *************** function _LCD_send_string *****************
  2045 ;; Defined at:
  2046 ;;		line 94 in file "main.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  string          2    8[COMMON] PTR unsigned char 
  2049 ;;		 -> s_humi(9), s_temp(12), s_date(5), s_time(5), 
  2050 ;;		 -> date(9), l_date(5), time(8), l_time(5), 
  2051 ;;		 -> update_humi(4), current_humi(4), l_humi(5), update_temp(5), 
  2052 ;;		 -> current_temp(5), l_temp(5), 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;  i               1   11[COMMON] unsigned char 
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  1    wreg      void 
  2057 ;; Registers used:
  2058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2064 ;;      Params:         2       0       0       0
  2065 ;;      Locals:         1       0       0       0
  2066 ;;      Temps:          1       0       0       0
  2067 ;;      Totals:         4       0       0       0
  2068 ;;Total ram usage:        4 bytes
  2069 ;; Hardware stack levels used:    1
  2070 ;; Hardware stack levels required when called:    3
  2071 ;; This function calls:
  2072 ;;		___lcd_send_char
  2073 ;; This function is called by:
  2074 ;;		_Draw_main_display_p1
  2075 ;;		_Draw_main_display_p2
  2076 ;;		_Draw_settings_display
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           
  2080                           
  2081                           ;psect for function _LCD_send_string
  2082  0281                     _LCD_send_string:
  2083  0281                     l1086:	
  2084                           ;incstack = 0
  2085                           ; Regs used in _LCD_send_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2086                           
  2087                           
  2088                           ;main.c: 94: void LCD_send_string(uint8_t string[]);main.c: 95: {;main.c: 96:     uint8_
      +                          t i = 0;
  2089  0281  01FB               	clrf	LCD_send_string@i
  2090                           
  2091                           ;main.c: 97:     for(i = 0;string[i]!='\0';i++)
  2092  0282  01FB               	clrf	LCD_send_string@i
  2093  0283  2A95               	goto	l1092
  2094  0284                     l1088:
  2095                           
  2096                           ;main.c: 98:     {;main.c: 99:         __lcd_send_char(string[i]);
  2097  0284  087B               	movf	LCD_send_string@i,w
  2098  0285  0778               	addwf	LCD_send_string@string,w
  2099  0286  0084               	movwf	4
  2100  0287  0879               	movf	LCD_send_string@string+1,w
  2101  0288  1803               	skipnc
  2102  0289  0A79               	incf	LCD_send_string@string+1,w
  2103  028A  00FF               	movwf	btemp+1
  2104  028B  118A  2200  118A   	fcall	stringtab
  2105  028E  118A  22A7  118A   	fcall	___lcd_send_char
  2106  0291                     l1090:
  2107                           
  2108                           ;main.c: 100:     }
  2109  0291  3001               	movlw	1
  2110  0292  00FA               	movwf	??_LCD_send_string
  2111  0293  087A               	movf	??_LCD_send_string,w
  2112  0294  07FB               	addwf	LCD_send_string@i,f
  2113  0295                     l1092:
  2114  0295  087B               	movf	LCD_send_string@i,w
  2115  0296  0778               	addwf	LCD_send_string@string,w
  2116  0297  0084               	movwf	4
  2117  0298  0879               	movf	LCD_send_string@string+1,w
  2118  0299  1803               	skipnc
  2119  029A  0A79               	incf	LCD_send_string@string+1,w
  2120  029B  1283               	bcf	3,5	;RP0=0, select bank0
  2121  029C  1303               	bcf	3,6	;RP1=0, select bank0
  2122  029D  00FF               	movwf	btemp+1
  2123  029E  118A  2200  118A   	fcall	stringtab
  2124  02A1  3A00               	xorlw	0
  2125  02A2  1D03               	skipz
  2126  02A3  2AA5               	goto	u381
  2127  02A4  2AA6               	goto	u380
  2128  02A5                     u381:
  2129  02A5  2A84               	goto	l1088
  2130  02A6                     u380:
  2131  02A6                     l75:
  2132  02A6  0008               	return
  2133  02A7                     __end_of_LCD_send_string:
  2134                           
  2135                           	psect	text10
  2136  02A7                     __ptext10:	
  2137 ;; *************** function ___lcd_send_char *****************
  2138 ;; Defined at:
  2139 ;;		line 79 in file "main.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;  ascii           1    wreg     unsigned char 
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;  ascii           1    7[COMMON] unsigned char 
  2144 ;;  low             1    6[COMMON] unsigned char 
  2145 ;;  high            1    5[COMMON] unsigned char 
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  1    wreg      void 
  2148 ;; Registers used:
  2149 ;;		wreg, status,2, status,0, pclath, cstack
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2155 ;;      Params:         0       0       0       0
  2156 ;;      Locals:         3       0       0       0
  2157 ;;      Temps:          2       0       0       0
  2158 ;;      Totals:         5       0       0       0
  2159 ;;Total ram usage:        5 bytes
  2160 ;; Hardware stack levels used:    1
  2161 ;; Hardware stack levels required when called:    2
  2162 ;; This function calls:
  2163 ;;		___lcd_en_pulse
  2164 ;;		___lcd_port_write
  2165 ;; This function is called by:
  2166 ;;		_LCD_send_string
  2167 ;;		_LCD_display_clear
  2168 ;;		_Draw_main_display_p1
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           
  2173                           ;psect for function ___lcd_send_char
  2174  02A7                     ___lcd_send_char:
  2175                           
  2176                           ;incstack = 0
  2177                           ; Regs used in ___lcd_send_char: [wreg+status,2+status,0+pclath+cstack]
  2178                           ;___lcd_send_char@ascii stored from wreg
  2179  02A7  00F7               	movwf	___lcd_send_char@ascii
  2180  02A8                     l1058:
  2181                           
  2182                           ;main.c: 79: void __lcd_send_char(uint8_t ascii);main.c: 80: {;main.c: 81:     RA5 = 1;
  2183  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  2184  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  2185  02AA  1685               	bsf	5,5	;volatile
  2186  02AB                     l1060:
  2187                           
  2188                           ;main.c: 84:     uint8_t low = 0;
  2189  02AB  01F6               	clrf	___lcd_send_char@low
  2190  02AC                     l1062:
  2191                           
  2192                           ;main.c: 85:     high = ascii >> 4;
  2193  02AC  0877               	movf	___lcd_send_char@ascii,w
  2194  02AD  00F3               	movwf	??___lcd_send_char
  2195  02AE  3004               	movlw	4
  2196  02AF                     u355:
  2197  02AF  1003               	clrc
  2198  02B0  0CF3               	rrf	??___lcd_send_char,f
  2199  02B1  3EFF               	addlw	-1
  2200  02B2  1D03               	skipz
  2201  02B3  2AAF               	goto	u355
  2202  02B4  0873               	movf	??___lcd_send_char,w
  2203  02B5  00F4               	movwf	??___lcd_send_char+1
  2204  02B6  0874               	movf	??___lcd_send_char+1,w
  2205  02B7  00F5               	movwf	___lcd_send_char@high
  2206  02B8                     l1064:
  2207                           
  2208                           ;main.c: 86:     low = ascii & 0x0F;
  2209  02B8  0877               	movf	___lcd_send_char@ascii,w
  2210  02B9  390F               	andlw	15
  2211  02BA  00F3               	movwf	??___lcd_send_char
  2212  02BB  0873               	movf	??___lcd_send_char,w
  2213  02BC  00F6               	movwf	___lcd_send_char@low
  2214  02BD                     l1066:
  2215                           
  2216                           ;main.c: 88:     __lcd_port_write(high);
  2217  02BD  0875               	movf	___lcd_send_char@high,w
  2218  02BE  118A  2313  118A   	fcall	___lcd_port_write
  2219  02C1                     l1068:
  2220                           
  2221                           ;main.c: 89:     __lcd_en_pulse();
  2222  02C1  118A  2378  118A   	fcall	___lcd_en_pulse
  2223  02C4                     l1070:
  2224                           
  2225                           ;main.c: 90:     __lcd_port_write(low);
  2226  02C4  0876               	movf	___lcd_send_char@low,w
  2227  02C5  118A  2313  118A   	fcall	___lcd_port_write
  2228  02C8                     l1072:
  2229                           
  2230                           ;main.c: 91:     __lcd_en_pulse();
  2231  02C8  118A  2378  118A   	fcall	___lcd_en_pulse
  2232  02CB                     l69:
  2233  02CB  0008               	return
  2234  02CC                     __end_of___lcd_send_char:
  2235                           
  2236                           	psect	text11
  2237  0313                     __ptext11:	
  2238 ;; *************** function ___lcd_port_write *****************
  2239 ;; Defined at:
  2240 ;;		line 49 in file "main.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;  data            1    wreg     unsigned char 
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;  data            1    2[COMMON] unsigned char 
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  1    wreg      void 
  2247 ;; Registers used:
  2248 ;;		wreg
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2254 ;;      Params:         0       0       0       0
  2255 ;;      Locals:         1       0       0       0
  2256 ;;      Temps:          0       0       0       0
  2257 ;;      Totals:         1       0       0       0
  2258 ;;Total ram usage:        1 bytes
  2259 ;; Hardware stack levels used:    1
  2260 ;; Hardware stack levels required when called:    1
  2261 ;; This function calls:
  2262 ;;		Nothing
  2263 ;; This function is called by:
  2264 ;;		___lcd_cmd
  2265 ;;		___lcd_send_char
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           
  2270                           ;psect for function ___lcd_port_write
  2271  0313                     ___lcd_port_write:
  2272                           
  2273                           ;incstack = 0
  2274                           ; Regs used in ___lcd_port_write: [wreg]
  2275                           ;___lcd_port_write@data stored from wreg
  2276  0313  00F2               	movwf	___lcd_port_write@data
  2277  0314                     l1044:
  2278                           
  2279                           ;main.c: 49: void __lcd_port_write(uint8_t data);main.c: 50: {;main.c: 51:     if(data &
      +                           0x01)
  2280  0314  1C72               	btfss	___lcd_port_write@data,0
  2281  0315  2B17               	goto	u311
  2282  0316  2B18               	goto	u310
  2283  0317                     u311:
  2284  0317  2B1C               	goto	l55
  2285  0318                     u310:
  2286  0318                     l1046:
  2287                           
  2288                           ;main.c: 52:   RC0 = 1;
  2289  0318  1283               	bcf	3,5	;RP0=0, select bank0
  2290  0319  1303               	bcf	3,6	;RP1=0, select bank0
  2291  031A  1407               	bsf	7,0	;volatile
  2292  031B  2B1F               	goto	l56
  2293  031C                     l55:	
  2294                           ;main.c: 53:  else
  2295                           
  2296                           
  2297                           ;main.c: 54:   RC0 = 0;
  2298  031C  1283               	bcf	3,5	;RP0=0, select bank0
  2299  031D  1303               	bcf	3,6	;RP1=0, select bank0
  2300  031E  1007               	bcf	7,0	;volatile
  2301  031F                     l56:
  2302                           
  2303                           ;main.c: 56:  if(data & 0x02)
  2304  031F  1CF2               	btfss	___lcd_port_write@data,1
  2305  0320  2B22               	goto	u321
  2306  0321  2B23               	goto	u320
  2307  0322                     u321:
  2308  0322  2B25               	goto	l57
  2309  0323                     u320:
  2310  0323                     l1048:
  2311                           
  2312                           ;main.c: 57:   RC1 = 1;
  2313  0323  1487               	bsf	7,1	;volatile
  2314  0324  2B26               	goto	l58
  2315  0325                     l57:	
  2316                           ;main.c: 58:  else
  2317                           
  2318                           
  2319                           ;main.c: 59:   RC1 = 0;
  2320  0325  1087               	bcf	7,1	;volatile
  2321  0326                     l58:
  2322                           
  2323                           ;main.c: 61:  if(data & 0x04)
  2324  0326  1D72               	btfss	___lcd_port_write@data,2
  2325  0327  2B29               	goto	u331
  2326  0328  2B2A               	goto	u330
  2327  0329                     u331:
  2328  0329  2B2C               	goto	l59
  2329  032A                     u330:
  2330  032A                     l1050:
  2331                           
  2332                           ;main.c: 62:   RC2 = 1;
  2333  032A  1507               	bsf	7,2	;volatile
  2334  032B  2B2D               	goto	l60
  2335  032C                     l59:	
  2336                           ;main.c: 63:  else
  2337                           
  2338                           
  2339                           ;main.c: 64:   RC2 = 0;
  2340  032C  1107               	bcf	7,2	;volatile
  2341  032D                     l60:
  2342                           
  2343                           ;main.c: 66:  if(data & 0x08)
  2344  032D  1DF2               	btfss	___lcd_port_write@data,3
  2345  032E  2B30               	goto	u341
  2346  032F  2B31               	goto	u340
  2347  0330                     u341:
  2348  0330  2B33               	goto	l61
  2349  0331                     u340:
  2350  0331                     l1052:
  2351                           
  2352                           ;main.c: 67:   RC3 = 1;
  2353  0331  1587               	bsf	7,3	;volatile
  2354  0332  2B34               	goto	l63
  2355  0333                     l61:	
  2356                           ;main.c: 68:  else
  2357                           
  2358                           
  2359                           ;main.c: 69:   RC3 = 0;
  2360  0333  1187               	bcf	7,3	;volatile
  2361  0334                     l63:
  2362  0334  0008               	return
  2363  0335                     __end_of___lcd_port_write:
  2364                           
  2365                           	psect	text12
  2366  0378                     __ptext12:	
  2367 ;; *************** function ___lcd_en_pulse *****************
  2368 ;; Defined at:
  2369 ;;		line 41 in file "main.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;		None
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;		None
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  1    wreg      void 
  2376 ;; Registers used:
  2377 ;;		wreg
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2383 ;;      Params:         0       0       0       0
  2384 ;;      Locals:         0       0       0       0
  2385 ;;      Temps:          1       0       0       0
  2386 ;;      Totals:         1       0       0       0
  2387 ;;Total ram usage:        1 bytes
  2388 ;; Hardware stack levels used:    1
  2389 ;; Hardware stack levels required when called:    1
  2390 ;; This function calls:
  2391 ;;		Nothing
  2392 ;; This function is called by:
  2393 ;;		___lcd_cmd
  2394 ;;		___lcd_send_char
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           
  2399                           ;psect for function ___lcd_en_pulse
  2400  0378                     ___lcd_en_pulse:
  2401  0378                     l1038:	
  2402                           ;incstack = 0
  2403                           ; Regs used in ___lcd_en_pulse: [wreg]
  2404                           
  2405                           
  2406                           ;main.c: 43:     _delay((unsigned long)((10)*(4000000UL/4000000.0)));
  2407  0378  3003               	movlw	3
  2408  0379  00F2               	movwf	??___lcd_en_pulse
  2409  037A                     u647:
  2410  037A  0BF2               	decfsz	??___lcd_en_pulse,f
  2411  037B  2B7A               	goto	u647
  2412  037C                     l1040:
  2413                           
  2414                           ;main.c: 44:     PORTAbits.RA4 = 1;
  2415  037C  1283               	bcf	3,5	;RP0=0, select bank0
  2416  037D  1303               	bcf	3,6	;RP1=0, select bank0
  2417  037E  1605               	bsf	5,4	;volatile
  2418                           
  2419                           ;main.c: 45:     _delay((unsigned long)((500)*(4000000UL/4000000.0)));
  2420  037F  30A6               	movlw	166
  2421  0380  00F2               	movwf	??___lcd_en_pulse
  2422  0381                     u657:
  2423  0381  0BF2               	decfsz	??___lcd_en_pulse,f
  2424  0382  2B81               	goto	u657
  2425  0383  0000               	nop
  2426  0384                     l1042:
  2427                           
  2428                           ;main.c: 46:     PORTAbits.RA4 = 0;
  2429  0384  1283               	bcf	3,5	;RP0=0, select bank0
  2430  0385  1303               	bcf	3,6	;RP1=0, select bank0
  2431  0386  1205               	bcf	5,4	;volatile
  2432  0387                     l52:
  2433  0387  0008               	return
  2434  0388                     __end_of___lcd_en_pulse:
  2435                           
  2436                           	psect	text13
  2437  0394                     __ptext13:	
  2438 ;; *************** function _isr *****************
  2439 ;; Defined at:
  2440 ;;		line 23 in file "interrupts.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;		None
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;		None
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  1    wreg      void 
  2447 ;; Registers used:
  2448 ;;		None
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2454 ;;      Params:         0       0       0       0
  2455 ;;      Locals:         0       0       0       0
  2456 ;;      Temps:          2       0       0       0
  2457 ;;      Totals:         2       0       0       0
  2458 ;;Total ram usage:        2 bytes
  2459 ;; Hardware stack levels used:    1
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		Interrupt level 1
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           
  2468                           ;psect for function _isr
  2469  0394                     _isr:
  2470  0394                     i1l5:
  2471  0394  0871               	movf	??_isr+1,w
  2472  0395  008A               	movwf	10
  2473  0396  0E70               	swapf	??_isr,w
  2474  0397  0083               	movwf	3
  2475  0398  0EFE               	swapf	btemp,f
  2476  0399  0E7E               	swapf	btemp,w
  2477  039A  0009               	retfie
  2478  039B                     __end_of_isr:
  2479  007E                     btemp	set	126	;btemp
  2480  007E                     wtemp0	set	126
  2481                           
  2482                           	psect	intentry
  2483  0004                     __pintentry:	
  2484                           ;incstack = 0
  2485                           ; Regs used in _isr: []
  2486                           
  2487  0004                     interrupt_function:
  2488  007E                     saved_w	set	btemp
  2489  0004  00FE               	movwf	btemp
  2490  0005  0E03               	swapf	3,w
  2491  0006  00F0               	movwf	??_isr
  2492  0007  080A               	movf	10,w
  2493  0008  00F1               	movwf	??_isr+1
  2494  0009  118A  2B94         	ljmp	_isr
  2495                           
  2496                           	psect	config
  2497                           
  2498                           ;Config register CONFIG @ 0x2007
  2499                           ;	Oscillator Selection bits
  2500                           ;	FOSC = INTOSCIO, INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O functio
      +                          n on RA5/OSC1/CLKIN
  2501                           ;	Watchdog Timer Enable bit
  2502                           ;	WDTE = OFF, WDT disabled
  2503                           ;	Power-up Timer Enable bit
  2504                           ;	PWRTE = OFF, PWRT disabled
  2505                           ;	MCLR Pin Function Select bit
  2506                           ;	MCLRE = ON, MCLR pin function is MCLR
  2507                           ;	Code Protection bit
  2508                           ;	CP = OFF, Program memory code protection is disabled
  2509                           ;	Data Code Protection bit
  2510                           ;	CPD = OFF, Data memory code protection is disabled
  2511                           ;	Brown Out Detect
  2512                           ;	BOREN = OFF, BOR disabled
  2513                           ;	Internal External Switchover bit
  2514                           ;	IESO = OFF, Internal External Switchover mode is disabled
  2515                           ;	Fail-Safe Clock Monitor Enabled bit
  2516                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2517  2007                     	org	8199
  2518  2007  30F4               	dw	12532

Data Sizes:
    Strings     0
    Constant    51
    Data        35
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      6      42
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    LCD_send_string@string	PTR unsigned char  size(2) Largest target is 12
		 -> s_humi(CODE[9]), s_temp(CODE[12]), s_date(CODE[5]), s_time(CODE[5]), 
		 -> date(BANK0[9]), l_date(CODE[5]), time(BANK0[8]), l_time(CODE[5]), 
		 -> update_humi(BANK0[4]), current_humi(BANK0[4]), l_humi(CODE[5]), update_temp(BANK0[5]), 
		 -> current_temp(BANK0[5]), l_temp(CODE[5]), 


Critical Paths under _main in COMMON

    _LCD_display_ctrl->___lcd_cmd
    _LCD_Init->___lcd_cmd
    _Draw_settings_display->_LCD_send_string
    _Draw_main_display_p2->_LCD_send_string
    _LCD_display_clear->_LCD_set_cursor
    _LCD_display_clear->___lcd_send_char
    _Draw_main_display_p1->_LCD_send_string
    _LCD_set_cursor->___lcd_cmd
    ___lcd_cmd->___lcd_en_pulse
    ___lcd_cmd->___lcd_port_write
    _LCD_send_string->___lcd_send_char
    ___lcd_send_char->___lcd_en_pulse
    ___lcd_send_char->___lcd_port_write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Draw_settings_display

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   15007
                                              2 BANK0      4     4      0
               _Draw_main_display_p1
               _Draw_main_display_p2
              _Draw_settings_display
                           _LCD_Init
                  _LCD_display_clear
                   _LCD_display_ctrl
 ---------------------------------------------------------------------------------
 (1) _LCD_display_ctrl                                     5     3      2     353
                                              4 COMMON     5     3      2
                          ___lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     110
                                              4 COMMON     2     2      0
                          ___lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _Draw_settings_display                                2     0      2    4860
                                              0 BANK0      2     0      2
                  _LCD_display_clear
                    _LCD_send_string
                     _LCD_set_cursor
 ---------------------------------------------------------------------------------
 (1) _Draw_main_display_p2                                 1     1      0    4696
                                              0 BANK0      1     1      0
                  _LCD_display_clear
                    _LCD_send_string
                     _LCD_set_cursor
 ---------------------------------------------------------------------------------
 (1) _LCD_display_clear                                    2     2      0    1642
                                              8 COMMON     2     2      0
                     _LCD_set_cursor
                    ___lcd_send_char
 ---------------------------------------------------------------------------------
 (1) _Draw_main_display_p1                                 1     1      0    3234
                                              0 BANK0      1     1      0
                    _LCD_send_string
                     _LCD_set_cursor
                    ___lcd_send_char
 ---------------------------------------------------------------------------------
 (2) _LCD_set_cursor                                       4     3      1    1415
                                              4 COMMON     4     3      1
                          ___lcd_cmd
 ---------------------------------------------------------------------------------
 (2) ___lcd_cmd                                            1     1      0     110
                                              3 COMMON     1     1      0
                     ___lcd_en_pulse
                   ___lcd_port_write
 ---------------------------------------------------------------------------------
 (2) _LCD_send_string                                      4     2      2    1639
                                              8 COMMON     4     2      2
                    ___lcd_send_char
 ---------------------------------------------------------------------------------
 (2) ___lcd_send_char                                      5     5      0     180
                                              3 COMMON     5     5      0
                     ___lcd_en_pulse
                   ___lcd_port_write
 ---------------------------------------------------------------------------------
 (3) ___lcd_port_write                                     1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lcd_en_pulse                                       1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Draw_main_display_p1
     _LCD_send_string
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_set_cursor
       ___lcd_cmd
         ___lcd_en_pulse
         ___lcd_port_write
     ___lcd_send_char
       ___lcd_en_pulse
       ___lcd_port_write
   _Draw_main_display_p2
     _LCD_display_clear
       _LCD_set_cursor
         ___lcd_cmd
           ___lcd_en_pulse
           ___lcd_port_write
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_send_string
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_set_cursor
       ___lcd_cmd
         ___lcd_en_pulse
         ___lcd_port_write
   _Draw_settings_display
     _LCD_display_clear
       _LCD_set_cursor
         ___lcd_cmd
           ___lcd_en_pulse
           ___lcd_port_write
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_send_string
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_set_cursor
       ___lcd_cmd
         ___lcd_en_pulse
         ___lcd_port_write
   _LCD_Init
     ___lcd_cmd
       ___lcd_en_pulse
       ___lcd_port_write
   _LCD_display_clear
     _LCD_set_cursor
       ___lcd_cmd
         ___lcd_en_pulse
         ___lcd_port_write
     ___lcd_send_char
       ___lcd_en_pulse
       ___lcd_port_write
   _LCD_display_ctrl
     ___lcd_cmd
       ___lcd_en_pulse
       ___lcd_port_write

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       5        0.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      6      2A       3       52.5%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      36      10        0.0%
ABS                  0      0      36       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Fri Oct 23 19:48:21 2020

                   _update_humi 003B                     _update_temp 0031                               pc 0002  
                            l52 0387                              l60 032D                              l61 0333  
                            l63 0334                              l55 031C                              l56 031F  
                            l57 0325                              l58 0326                              l66 0393  
                            l82 02EF                              l59 032C                              l75 02A6  
                            l69 02CB                              l93 0351                              l98 0366  
                            fsr 0004                   ___lcd_cmd@cmd 0073                             l101 01DD  
                           l134 0196                             l143 014A                             l137 0280  
                           l161 00AA                             l153 0041                             l147 014A  
                           l171 00A6                             l155 0047                             l173 00AA  
                           l157 0055                             l159 0059                             l177 00B2  
                           _RA2 002A                             _RC0 0038                             _RC1 0039  
                           _RA5 002D                             _RC2 003A                             _RC3 003B  
                           _RC4 003C                             _RC5 003D                             u310 0318  
                           u311 0317                             u320 0323                             u400 02DA  
                           u321 0322                             u401 02D9                             u330 032A  
                           u410 02DF                             u331 0329                             u411 02DE  
                           u340 0331                             u420 02E5                             u500 0059  
                           u341 0330                             u421 02E4                             u501 0058  
                           u430 00C6                             u510 005D                             u431 00C5  
                           u511 005C                             u360 033B                             u440 00E8  
                           u600 00B8                             u520 0077                             u361 033A  
                           u441 00E7                             u601 00B7                             u521 0076  
                           u370 0345                             u450 010B                             u530 007C  
                           u355 02AF                             u371 0344                             u451 010A  
                           u531 007B                             u380 02A6                             u460 012E  
                           u540 0084                             u381 02A5                             u461 012D  
                           u541 0083                             u390 0366                             u550 008A  
                           u391 0365                             u551 0089                             u560 0099  
                           u480 0047                             i1l5 0394                             u617 019B  
                           u561 0098                             u481 0046                             u570 00A5  
                           u490 0054                             u627 01A8                             u571 00A4  
                           u491 0053                             u580 00AA                             u637 01B2  
                           u581 00A9                             u590 00AE                             u647 037A  
                           u591 00AD                             u657 0381                             _isr 0394  
                           fsr0 0004                             indf 0000   __size_of_Draw_main_display_p1 004C  
 __size_of_Draw_main_display_p2 003E                            l1110 02CD                            l1040 037C  
                          l1104 0358                            l1200 0104                            l1120 02E0  
                          l1112 02D1                            l1042 0384                            l1050 032A  
                          l1106 035C                            l1210 012E                            l1202 010B  
                          l1130 01A0                            l1122 02E5                            l1114 02D5  
                          l1052 0331                            l1044 0314                            l1060 02AB  
                          l1108 0360                            l1212 0136                            l1204 0113  
                          l1140 01BD                            l1132 01A4                            l1124 02E6  
                          l1116 02DA                            l1038 0378                            l1046 0318  
                          l1070 02C4                            l1062 02AC                            l1054 0389  
                          l1214 013D                            l1206 011A                            l1150 01D1  
                          l1142 01C1                            l1134 01B0                            l1118 02DF  
                          l1126 02EB                            l1230 0020                            l1048 0323  
                          l1072 02C8                            l1064 02B8                            l1056 038C  
                          l1080 0345                            l1160 015C                            l1208 0127  
                          l1152 01D5                            l1144 01C5                            l1136 01B5  
                          l1128 0197                            l1240 0033                            l1232 0024  
                          l1066 02BD                            l1058 02A8                            l1090 0291  
                          l1082 0349                            l1074 0336                            l1170 018F  
                          l1162 0167                            l1154 01D9                            l1146 01C9  
                          l1138 01B9                            l1250 0048                            l1242 0034  
                          l1234 002B                            l1068 02C1                            l1092 0295  
                          l1084 034D                            l1076 033B                            l1164 016E  
                          l1156 014B                            l1180 0268                            l1172 0243  
                          l1148 01CD                            l1260 005D                            l1252 004A  
                          l1244 0037                            l1236 002F                            l1228 001D  
                          l1086 0281                            l1078 0340                            l1166 017A  
                          l1158 0152                            l1094 0352                            l1182 0279  
                          l1174 024B                            l1190 00D5                            l1270 0077  
                          l1262 005E                            l1254 004B                            l1246 0038  
                          l1238 0032                            l1088 0284                            l1168 0184  
                          l1096 0352                            l1176 0252                            l1192 00E2  
                          l1184 00BE                            l1280 0094                            l1272 007C  
                          l1264 0061                            l1256 004E                            l1248 003B  
                          l1098 0357                            l1178 0263                            l1194 00E8  
                          l1186 00C6                            l1290 00A5                            l1282 0099  
                          l1274 0084                            l1266 006B                            l1258 0054  
                          l1196 00F0                            l1188 00CE                            l1284 009C  
                          l1276 008A                            l1268 0071                            l1292 00AF  
                          l1198 00F7                            l1294 00B8                            l1278 008F  
                          l1286 009D                            l1288 00A1                     main@lastCLK 0047  
                          ?_isr 0070                  ___lcd_en_pulse 0378                            _date 0020  
                          _main 001D                            _time 0029                            btemp 007E  
    __size_of_LCD_display_clear 0015         ??_Draw_settings_display 007C                            start 000B  
                         ??_isr 0070                __end_of_LCD_Init 01DE                           ?_main 0070  
                         _ANSEL 0091                           _T1CON 0010                           _TMR1H 000F  
                         _TMR1L 000E                           _PORTA 0005                           _PORTC 0007  
                         _TRISA 0085                           _TRISC 0087              LCD_display_clear@i 0079  
        __end_of___lcd_en_pulse 0388                           pclath 000A                           status 0003  
                         wtemp0 007E       __size_of___lcd_port_write 0022         __size_of_LCD_set_cursor 001D  
               __initialization 000D                 ___lcd_send_char 02A7                    __end_of_main 00BE  
                        ??_main 0045              LCD_set_cursor@temp 0076        __end_of_LCD_display_ctrl 02F0  
               ?___lcd_en_pulse 0070                          _CMCON0 0019                          _TMR1IF 0060  
                        _TMR1ON 0080             ___lcd_send_char@low 0076                          _l_date 022F  
                        _l_humi 0225                          _l_temp 022A                          _l_time 0234  
                        _s_date 0239                          _s_humi 021C                          _s_temp 0210  
                        _s_time 023E                          saved_w 007E        __size_of_LCD_send_string 0026  
            __size_of___lcd_cmd 000C         __end_of__initialization 001A                       ?_LCD_Init 0070  
       __end_of___lcd_send_char 02CC                  __pcstackCOMMON 0070                    __pidataBANK0 02F0  
                    __pbssBANK0 0049                      ??_LCD_Init 0074                ___lcd_port_write 0313  
  __end_of_Draw_main_display_p1 0197    __end_of_Draw_main_display_p2 0281                  _LCD_set_cursor 0335  
__size_of_Draw_settings_display 008D   __end_of_Draw_settings_display 014B                      __pmaintext 001D  
                    __pintentry 0004               __end_of___lcd_cmd 0394           ___lcd_port_write@data 0072  
                main@currentCLK 0048                      __stringtab 0200          __end_of_LCD_set_cursor 0352  
          ___lcd_send_char@high 0075                ?___lcd_send_char 0070               ??_LCD_send_string 007A  
                       __ptext1 02CC                         __ptext2 0197                         __ptext3 00BE  
                       __ptext4 0243                         __ptext5 0352                         __ptext6 014B  
                       __ptext7 0335                         __ptext8 0388                         __ptext9 0281  
                     _T1CONbits 0010                         _counter 0049                ??___lcd_en_pulse 0072  
                  __size_of_isr 0007            LCD_display_ctrl@temp 0078               ?_LCD_display_ctrl 0074  
          end_of_initialization 001A              ??_LCD_display_ctrl 0076                 ?_LCD_set_cursor 0074  
       LCD_display_ctrl@display 0077                       _PORTAbits 0005            _Draw_main_display_p1 014B  
          _Draw_main_display_p2 0243               __size_of_LCD_Init 0047                  __end_of_l_date 0234  
                __end_of_l_humi 022A                  __end_of_l_temp 022F                  __end_of_l_time 0239  
                __end_of_s_date 023E                  __end_of_s_humi 0225                  __end_of_s_temp 021C  
                __end_of_s_time 0243        __end_of___lcd_port_write 0335           ?_Draw_main_display_p1 0070  
         ?_Draw_main_display_p2 0070             start_initialization 000D                     __end_of_isr 039B  
             LCD_set_cursor@row 0077            LCD_set_cursor@column 0074                      init_fetch0 0367  
                   __pdataBANK0 0020                       ___lcd_cmd 0388                       ___latbits 0001  
                 __pcstackBANK0 0043                 _LCD_send_string 0281                    _current_humi 003F  
                  _current_temp 0036           LCD_send_string@string 0078           _Draw_settings_display 00BE  
                     __pstrings 0200          ??_Draw_main_display_p1 0043          ??_Draw_main_display_p2 0043  
                    ?___lcd_cmd 0070                ??_LCD_set_cursor 0075                LCD_send_string@i 007B  
             interrupt_function 0004                        _LCD_Init 0197          LCD_display_ctrl@cursor 0074  
     __size_of_LCD_display_ctrl 0024        __size_of___lcd_send_char 0025                     __stringbase 020F  
       __end_of_LCD_send_string 02A7           ___lcd_send_char@ascii 0077          ?_Draw_settings_display 0043  
            __end_of__stringtab 0210                     ??___lcd_cmd 0073               ?___lcd_port_write 0070  
            ??___lcd_port_write 0072                        __ptext10 02A7                        __ptext11 0313  
                      __ptext12 0378                        __ptext13 0394         __size_of___lcd_en_pulse 0010  
                 __size_of_main 00A1           LCD_display_ctrl@blink 0075               _LCD_display_clear 0352  
            ?_LCD_display_clear 0070             ??_LCD_display_clear 0078                ?_LCD_send_string 0078  
             ??___lcd_send_char 0073                        init_ram0 036B        Draw_settings_display@ctr 0043  
                      intlevel1 0000       __end_of_LCD_display_clear 0367                       stringcode 020A  
              _LCD_display_ctrl 02CC                        stringdir 020A                        stringtab 0200  
