

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat Oct 24 01:30:55 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F688
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.30
    40                           ; Generated 26/08/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F688 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0007                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0087                     	;# 
   103  008C                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0095                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0000                     	;# 
   123  0001                     	;# 
   124  0002                     	;# 
   125  0003                     	;# 
   126  0004                     	;# 
   127  0005                     	;# 
   128  0007                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000E                     	;# 
   133  000E                     	;# 
   134  000F                     	;# 
   135  0010                     	;# 
   136  0011                     	;# 
   137  0012                     	;# 
   138  0013                     	;# 
   139  0014                     	;# 
   140  0015                     	;# 
   141  0016                     	;# 
   142  0017                     	;# 
   143  0018                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001E                     	;# 
   147  001F                     	;# 
   148  0081                     	;# 
   149  0085                     	;# 
   150  0087                     	;# 
   151  008C                     	;# 
   152  008E                     	;# 
   153  008F                     	;# 
   154  0090                     	;# 
   155  0091                     	;# 
   156  0095                     	;# 
   157  0095                     	;# 
   158  0096                     	;# 
   159  0096                     	;# 
   160  0097                     	;# 
   161  0098                     	;# 
   162  0099                     	;# 
   163  009A                     	;# 
   164  009A                     	;# 
   165  009B                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0007                     	;# 
   177  000A                     	;# 
   178  000B                     	;# 
   179  000C                     	;# 
   180  000E                     	;# 
   181  000E                     	;# 
   182  000F                     	;# 
   183  0010                     	;# 
   184  0011                     	;# 
   185  0012                     	;# 
   186  0013                     	;# 
   187  0014                     	;# 
   188  0015                     	;# 
   189  0016                     	;# 
   190  0017                     	;# 
   191  0018                     	;# 
   192  0019                     	;# 
   193  001A                     	;# 
   194  001E                     	;# 
   195  001F                     	;# 
   196  0081                     	;# 
   197  0085                     	;# 
   198  0087                     	;# 
   199  008C                     	;# 
   200  008E                     	;# 
   201  008F                     	;# 
   202  0090                     	;# 
   203  0091                     	;# 
   204  0095                     	;# 
   205  0095                     	;# 
   206  0096                     	;# 
   207  0096                     	;# 
   208  0097                     	;# 
   209  0098                     	;# 
   210  0099                     	;# 
   211  009A                     	;# 
   212  009A                     	;# 
   213  009B                     	;# 
   214  009C                     	;# 
   215  009D                     	;# 
   216  009E                     	;# 
   217  009F                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0007                     	;# 
   225  000A                     	;# 
   226  000B                     	;# 
   227  000C                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0087                     	;# 
   247  008C                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0095                     	;# 
   253  0095                     	;# 
   254  0096                     	;# 
   255  0096                     	;# 
   256  0097                     	;# 
   257  0098                     	;# 
   258  0099                     	;# 
   259  009A                     	;# 
   260  009A                     	;# 
   261  009B                     	;# 
   262  009C                     	;# 
   263  009D                     	;# 
   264  009E                     	;# 
   265  009F                     	;# 
   266  0000                     	;# 
   267  0001                     	;# 
   268  0002                     	;# 
   269  0003                     	;# 
   270  0004                     	;# 
   271  0005                     	;# 
   272  0007                     	;# 
   273  000A                     	;# 
   274  000B                     	;# 
   275  000C                     	;# 
   276  000E                     	;# 
   277  000E                     	;# 
   278  000F                     	;# 
   279  0010                     	;# 
   280  0011                     	;# 
   281  0012                     	;# 
   282  0013                     	;# 
   283  0014                     	;# 
   284  0015                     	;# 
   285  0016                     	;# 
   286  0017                     	;# 
   287  0018                     	;# 
   288  0019                     	;# 
   289  001A                     	;# 
   290  001E                     	;# 
   291  001F                     	;# 
   292  0081                     	;# 
   293  0085                     	;# 
   294  0087                     	;# 
   295  008C                     	;# 
   296  008E                     	;# 
   297  008F                     	;# 
   298  0090                     	;# 
   299  0091                     	;# 
   300  0095                     	;# 
   301  0095                     	;# 
   302  0096                     	;# 
   303  0096                     	;# 
   304  0097                     	;# 
   305  0098                     	;# 
   306  0099                     	;# 
   307  009A                     	;# 
   308  009A                     	;# 
   309  009B                     	;# 
   310  009C                     	;# 
   311  009D                     	;# 
   312  009E                     	;# 
   313  009F                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0007                     	;# 
   321  000A                     	;# 
   322  000B                     	;# 
   323  000C                     	;# 
   324  000E                     	;# 
   325  000E                     	;# 
   326  000F                     	;# 
   327  0010                     	;# 
   328  0011                     	;# 
   329  0012                     	;# 
   330  0013                     	;# 
   331  0014                     	;# 
   332  0015                     	;# 
   333  0016                     	;# 
   334  0017                     	;# 
   335  0018                     	;# 
   336  0019                     	;# 
   337  001A                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0087                     	;# 
   343  008C                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0095                     	;# 
   349  0095                     	;# 
   350  0096                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362                           
   363                           	psect	idataBANK0
   364  06DC                     __pidataBANK0:
   365                           
   366                           ;initializer for _time_minutes
   367  06DC  341E               	retlw	30
   368                           
   369                           ;initializer for _time_hours
   370  06DD  340A               	retlw	10
   371                           
   372                           ;initializer for _humi_integer
   373  06DE  342D               	retlw	45
   374                           
   375                           ;initializer for _temp_decimal
   376  06DF  3405               	retlw	5
   377                           
   378                           ;initializer for _temp_integer
   379  06E0  3417               	retlw	23
   380                           
   381                           ;initializer for _time
   382  06E1  3431               	retlw	49
   383  06E2  3432               	retlw	50
   384  06E3  343A               	retlw	58
   385  06E4  3430               	retlw	48
   386  06E5  3430               	retlw	48
   387  06E6  3450               	retlw	80
   388  06E7  344D               	retlw	77
   389  06E8  3400               	retlw	0
   390                           
   391                           ;initializer for _update_temp
   392  06E9  3432               	retlw	50
   393  06EA  3433               	retlw	51
   394  06EB  342E               	retlw	46
   395  06EC  3435               	retlw	53
   396  06ED  3400               	retlw	0
   397                           
   398                           ;initializer for _l_time
   399  06EE  3454               	retlw	84
   400  06EF  3469               	retlw	105
   401  06F0  346D               	retlw	109
   402  06F1  3465               	retlw	101
   403  06F2  3400               	retlw	0
   404                           
   405                           ;initializer for _s_date
   406  06F3  3444               	retlw	68
   407  06F4  3461               	retlw	97
   408  06F5  3474               	retlw	116
   409  06F6  3465               	retlw	101
   410  06F7  3400               	retlw	0
   411                           
   412                           ;initializer for _s_time
   413  06F8  3454               	retlw	84
   414  06F9  3469               	retlw	105
   415  06FA  346D               	retlw	109
   416  06FB  3465               	retlw	101
   417  06FC  3400               	retlw	0
   418                           
   419                           ;initializer for _update_humi
   420  06FD  3434               	retlw	52
   421  06FE  3435               	retlw	53
   422  06FF  3425               	retlw	37
   423  0700  3400               	retlw	0
   424                           
   425                           ;initializer for _current_humi
   426  0701  3433               	retlw	51
   427  0702  3438               	retlw	56
   428  0703  3425               	retlw	37
   429  0704  3400               	retlw	0
   430                           
   431                           	psect	idataBANK1
   432  05B1                     __pidataBANK1:
   433                           
   434                           ;initializer for _s_end
   435  05B1  342D               	retlw	45
   436  05B2  342D               	retlw	45
   437  05B3  342D               	retlw	45
   438  05B4  342D               	retlw	45
   439  05B5  342D               	retlw	45
   440  05B6  342D               	retlw	45
   441  05B7  342D               	retlw	45
   442  05B8  342D               	retlw	45
   443  05B9  342D               	retlw	45
   444  05BA  342D               	retlw	45
   445  05BB  342D               	retlw	45
   446  05BC  342D               	retlw	45
   447  05BD  342D               	retlw	45
   448  05BE  342D               	retlw	45
   449  05BF  342D               	retlw	45
   450  05C0  342D               	retlw	45
   451  05C1  3400               	retlw	0
   452                           
   453                           ;initializer for _s_temp
   454  05C2  3454               	retlw	84
   455  05C3  3465               	retlw	101
   456  05C4  346D               	retlw	109
   457  05C5  3470               	retlw	112
   458  05C6  3465               	retlw	101
   459  05C7  3472               	retlw	114
   460  05C8  3461               	retlw	97
   461  05C9  3474               	retlw	116
   462  05CA  3475               	retlw	117
   463  05CB  3472               	retlw	114
   464  05CC  3465               	retlw	101
   465  05CD  3400               	retlw	0
   466                           
   467                           ;initializer for _date
   468  05CE  3433               	retlw	51
   469  05CF  3430               	retlw	48
   470  05D0  342F               	retlw	47
   471  05D1  3430               	retlw	48
   472  05D2  3437               	retlw	55
   473  05D3  342F               	retlw	47
   474  05D4  3439               	retlw	57
   475  05D5  3432               	retlw	50
   476  05D6  3400               	retlw	0
   477                           
   478                           ;initializer for _s_humi
   479  05D7  3448               	retlw	72
   480  05D8  3475               	retlw	117
   481  05D9  346D               	retlw	109
   482  05DA  3469               	retlw	105
   483  05DB  3464               	retlw	100
   484  05DC  3469               	retlw	105
   485  05DD  3474               	retlw	116
   486  05DE  3479               	retlw	121
   487  05DF  3400               	retlw	0
   488                           
   489                           ;initializer for _current_temp
   490  05E0  3432               	retlw	50
   491  05E1  3431               	retlw	49
   492  05E2  342E               	retlw	46
   493  05E3  3435               	retlw	53
   494  05E4  3400               	retlw	0
   495                           
   496                           ;initializer for _l_humi
   497  05E5  3448               	retlw	72
   498  05E6  3475               	retlw	117
   499  05E7  346D               	retlw	109
   500  05E8  3469               	retlw	105
   501  05E9  3400               	retlw	0
   502                           
   503                           ;initializer for _l_temp
   504  05EA  3454               	retlw	84
   505  05EB  3465               	retlw	101
   506  05EC  346D               	retlw	109
   507  05ED  3470               	retlw	112
   508  05EE  3400               	retlw	0
   509                           
   510                           ;initializer for _l_date
   511  05EF  3444               	retlw	68
   512  05F0  3461               	retlw	97
   513  05F1  3474               	retlw	116
   514  05F2  3465               	retlw	101
   515  05F3  3400               	retlw	0
   516                           
   517                           	psect	strings
   518  0600                     __pstrings:
   519  0600                     stringtab:
   520  0600                     __stringtab:
   521                           
   522                           ;	String table - string pointers are 1 byte each
   523  0600  1BFF               	btfsc	btemp+1,7
   524  0601  2E0A               	ljmp	stringcode
   525  0602  1383               	bcf	3,7
   526  0603  187F               	btfsc	btemp+1,0
   527  0604  1783               	bsf	3,7
   528  0605  0800               	movf	0,w
   529  0606  0A84               	incf	4,f
   530  0607  1903               	skipnz
   531  0608  0AFF               	incf	btemp+1,f
   532  0609  0008               	return
   533  060A                     stringcode:
   534  060A                     stringdir:
   535  060A  3006               	movlw	high stringdir
   536  060B  008A               	movwf	10
   537  060C  0804               	movf	4,w
   538  060D  0A84               	incf	4,f
   539  060E  0782               	addwf	2,f
   540  060F                     __stringbase:
   541  060F  3400               	retlw	0
   542  0610                     __end_of__stringtab:
   543  0610                     _dpowers:
   544  0610  3401               	retlw	1
   545  0611  3400               	retlw	0
   546  0612  340A               	retlw	10
   547  0613  3400               	retlw	0
   548  0614  3464               	retlw	100
   549  0615  3400               	retlw	0
   550  0616  34E8               	retlw	232
   551  0617  3403               	retlw	3
   552  0618  3410               	retlw	16
   553  0619  3427               	retlw	39
   554  061A                     __end_of_dpowers:
   555  0010                     _T1CON	set	16
   556  000F                     _TMR1H	set	15
   557  000E                     _TMR1L	set	14
   558  0010                     _T1CONbits	set	16
   559  0007                     _PORTC	set	7
   560  0005                     _PORTA	set	5
   561  0019                     _CMCON0	set	25
   562  0005                     _PORTAbits	set	5
   563  0080                     _TMR1ON	set	128
   564  0060                     _TMR1IF	set	96
   565  002A                     _RA2	set	42
   566  003D                     _RC5	set	61
   567  003C                     _RC4	set	60
   568  002D                     _RA5	set	45
   569  003B                     _RC3	set	59
   570  003A                     _RC2	set	58
   571  0039                     _RC1	set	57
   572  0038                     _RC0	set	56
   573  0087                     _TRISC	set	135
   574  0085                     _TRISA	set	133
   575  0091                     _ANSEL	set	145
   576  061A                     STR_4:
   577  061A  3425               	retlw	37	;'%'
   578  061B  3464               	retlw	100	;'d'
   579  061C  343A               	retlw	58	;':'
   580  061D  3425               	retlw	37	;'%'
   581  061E  3464               	retlw	100	;'d'
   582  061F  345B               	retlw	91	;'['
   583  0620  3425               	retlw	37	;'%'
   584  0621  3473               	retlw	115	;'s'
   585  0622  345D               	retlw	93	;']'
   586  0623  3400               	retlw	0
   587  0624                     STR_9:
   588  0624  3428               	retlw	40	;'('
   589  0625  346E               	retlw	110	;'n'
   590  0626  3475               	retlw	117	;'u'
   591  0627  346C               	retlw	108	;'l'
   592  0628  346C               	retlw	108	;'l'
   593  0629  3429               	retlw	41	;')'
   594  062A  3400               	retlw	0
   595  062B                     STR_1:
   596  062B  3425               	retlw	37	;'%'
   597  062C  3464               	retlw	100	;'d'
   598  062D  342E               	retlw	46	;'.'
   599  062E  3425               	retlw	37	;'%'
   600  062F  3464               	retlw	100	;'d'
   601  0630  3400               	retlw	0
   602  0631                     STR_2:
   603  0631  3425               	retlw	37	;'%'
   604  0632  3464               	retlw	100	;'d'
   605  0633  3425               	retlw	37	;'%'
   606  0634  3425               	retlw	37	;'%'
   607  0635  3400               	retlw	0
   608  0636                     STR_6:
   609  0636  3441               	retlw	65	;'A'
   610  0637  344D               	retlw	77	;'M'
   611  0638  3400               	retlw	0
   612  0639                     STR_3:
   613  0639  3450               	retlw	80	;'P'
   614  063A  344D               	retlw	77	;'M'
   615  063B  3400               	retlw	0
   616  0639                     
   617                           	psect	cinit
   618  000D                     start_initialization:	
   619                           ; #config settings
   620                           
   621  000D                     __initialization:
   622                           
   623                           ; Initialize objects allocated to BANK1
   624  000D  1383               	bcf	3,7	;select IRP bank0
   625  000E  30E3               	movlw	low (__pdataBANK1+67)
   626  000F  00FD               	movwf	btemp+-1
   627  0010  3005               	movlw	high __pidataBANK1
   628  0011  00FE               	movwf	btemp
   629  0012  30B1               	movlw	low __pidataBANK1
   630  0013  00FF               	movwf	btemp+1
   631  0014  30A0               	movlw	low __pdataBANK1
   632  0015  0084               	movwf	4
   633  0016  118A  27D9  118A   	fcall	init_ram0
   634                           
   635                           ; Initialize objects allocated to BANK0
   636  0019  3049               	movlw	low (__pdataBANK0+41)
   637  001A  00FD               	movwf	btemp+-1
   638  001B  3006               	movlw	high __pidataBANK0
   639  001C  00FE               	movwf	btemp
   640  001D  30DC               	movlw	low __pidataBANK0
   641  001E  00FF               	movwf	btemp+1
   642  001F  3020               	movlw	low __pdataBANK0
   643  0020  0084               	movwf	4
   644  0021  118A  27D9  118A   	fcall	init_ram0
   645                           
   646                           ; Clear objects allocated to BANK0
   647  0024  01ED               	clrf	__pbssBANK0& (0+127)
   648  0025  01EE               	clrf	(__pbssBANK0+1)& (0+127)
   649  0026  01EF               	clrf	(__pbssBANK0+2)& (0+127)
   650  0027                     end_of_initialization:	
   651                           ;End of C runtime variable initialization code
   652                           
   653  0027                     __end_of__initialization:
   654  0027  0183               	clrf	3
   655  0028  118A  2AC1         	ljmp	_main	;jump to C main() function
   656                           
   657                           	psect	bssBANK0
   658  006D                     __pbssBANK0:
   659  006D                     _counter:
   660  006D                     	ds	1
   661  006E                     _s_lastCLK:
   662  006E                     	ds	1
   663  006F                     _s_currentCLK:
   664  006F                     	ds	1
   665                           
   666                           	psect	dataBANK0
   667  0020                     __pdataBANK0:
   668  0020                     _time_minutes:
   669  0020                     	ds	1
   670  0021                     _time_hours:
   671  0021                     	ds	1
   672  0022                     _humi_integer:
   673  0022                     	ds	1
   674  0023                     _temp_decimal:
   675  0023                     	ds	1
   676  0024                     _temp_integer:
   677  0024                     	ds	1
   678  0025                     _time:
   679  0025                     	ds	8
   680  002D                     _update_temp:
   681  002D                     	ds	5
   682  0032                     _l_time:
   683  0032                     	ds	5
   684  0037                     _s_date:
   685  0037                     	ds	5
   686  003C                     _s_time:
   687  003C                     	ds	5
   688  0041                     _update_humi:
   689  0041                     	ds	4
   690  0045                     _current_humi:
   691  0045                     	ds	4
   692                           
   693                           	psect	dataBANK1
   694  00A0                     __pdataBANK1:
   695  00A0                     _s_end:
   696  00A0                     	ds	17
   697  00B1                     _s_temp:
   698  00B1                     	ds	12
   699  00BD                     _date:
   700  00BD                     	ds	9
   701  00C6                     _s_humi:
   702  00C6                     	ds	9
   703  00CF                     _current_temp:
   704  00CF                     	ds	5
   705  00D4                     _l_humi:
   706  00D4                     	ds	5
   707  00D9                     _l_temp:
   708  00D9                     	ds	5
   709  00DE                     _l_date:
   710  00DE                     	ds	5
   711                           
   712                           	psect	inittext
   713  07D5                     init_fetch0:	
   714                           ;	Called with low address in FSR and high address in W
   715                           
   716  07D5  087E               	movf	btemp,w
   717  07D6  008A               	movwf	10
   718  07D7  087F               	movf	btemp+1,w
   719  07D8  0082               	movwf	2
   720  07D9                     init_ram0:	
   721                           ;Called with:
   722                           ;	high address of idata address in btemp 
   723                           ;	low address of idata address in btemp+1 
   724                           ;	low address of data in FSR
   725                           ;	high address + 1 of data in btemp-1
   726                           
   727  07D9  118A  27D5  118A   	fcall	init_fetch0
   728  07DC  0080               	movwf	0
   729  07DD  0A84               	incf	4,f
   730  07DE  0804               	movf	4,w
   731  07DF  067D               	xorwf	btemp+-1,w
   732  07E0  1903               	btfsc	3,2
   733  07E1  3400               	retlw	0
   734  07E2  0AFF               	incf	btemp+1,f
   735  07E3  1903               	btfsc	3,2
   736  07E4  0AFE               	incf	btemp,f
   737  07E5  2FD9               	goto	init_ram0
   738                           
   739                           	psect	cstackCOMMON
   740  0070                     __pcstackCOMMON:
   741  0070                     ?_isr:
   742  0070                     ??_isr:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     ?___lcd_en_pulse:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0070                     ?___lcd_port_write:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0070                     ?___lcd_cmd:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0070                     ?___lcd_send_char:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0070                     ?_LCD_send_string:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     ?_LCD_display_clear:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     ?_LCD_Init:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     ?_Draw_main_display_p1:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     ?_Draw_main_display_p2:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     ?_set_temp:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     ?_set_humi:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0070                     ?_set_time:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0070                     ?_set_date:	
   782                           ; 1 bytes @ 0x0
   783                           
   784  0070                     ?_main:	
   785                           ; 1 bytes @ 0x0
   786                           
   787                           
   788                           ; 1 bytes @ 0x0
   789  0070                     	ds	2
   790  0072                     ??___lcd_en_pulse:
   791  0072                     ??___lcd_port_write:	
   792                           ; 1 bytes @ 0x2
   793                           
   794  0072                     ??_set_date:	
   795                           ; 1 bytes @ 0x2
   796                           
   797  0072                     ?___lwdiv:	
   798                           ; 1 bytes @ 0x2
   799                           
   800  0072                     ___lcd_port_write@data:	
   801                           ; 2 bytes @ 0x2
   802                           
   803  0072                     ___lwdiv@divisor:	
   804                           ; 1 bytes @ 0x2
   805                           
   806                           
   807                           ; 2 bytes @ 0x2
   808  0072                     	ds	1
   809  0073                     ??___lcd_cmd:
   810  0073                     ??___lcd_send_char:	
   811                           ; 1 bytes @ 0x3
   812                           
   813  0073                     ___lcd_cmd@cmd:	
   814                           ; 1 bytes @ 0x3
   815                           
   816                           
   817                           ; 1 bytes @ 0x3
   818  0073                     	ds	1
   819  0074                     ?_LCD_display_ctrl:
   820  0074                     ?_LCD_set_cursor:	
   821                           ; 1 bytes @ 0x4
   822                           
   823  0074                     ??_LCD_Init:	
   824                           ; 1 bytes @ 0x4
   825                           
   826  0074                     LCD_display_ctrl@cursor:	
   827                           ; 1 bytes @ 0x4
   828                           
   829  0074                     LCD_set_cursor@column:	
   830                           ; 1 bytes @ 0x4
   831                           
   832  0074                     ___lwdiv@dividend:	
   833                           ; 1 bytes @ 0x4
   834                           
   835                           
   836                           ; 2 bytes @ 0x4
   837  0074                     	ds	1
   838  0075                     ??_LCD_set_cursor:
   839  0075                     ___lcd_send_char@high:	
   840                           ; 1 bytes @ 0x5
   841                           
   842  0075                     LCD_display_ctrl@blink:	
   843                           ; 1 bytes @ 0x5
   844                           
   845                           
   846                           ; 1 bytes @ 0x5
   847  0075                     	ds	1
   848  0076                     ??_LCD_display_ctrl:
   849  0076                     ??___lwdiv:	
   850                           ; 1 bytes @ 0x6
   851                           
   852  0076                     ___lcd_send_char@low:	
   853                           ; 1 bytes @ 0x6
   854                           
   855  0076                     LCD_set_cursor@temp:	
   856                           ; 1 bytes @ 0x6
   857                           
   858                           
   859                           ; 1 bytes @ 0x6
   860  0076                     	ds	1
   861  0077                     ___lcd_send_char@ascii:
   862  0077                     LCD_display_ctrl@display:	
   863                           ; 1 bytes @ 0x7
   864                           
   865  0077                     LCD_set_cursor@row:	
   866                           ; 1 bytes @ 0x7
   867                           
   868  0077                     ___lwdiv@quotient:	
   869                           ; 1 bytes @ 0x7
   870                           
   871                           
   872                           ; 2 bytes @ 0x7
   873  0077                     	ds	1
   874  0078                     ??_LCD_send_string:
   875  0078                     ??_LCD_display_clear:	
   876                           ; 1 bytes @ 0x8
   877                           
   878  0078                     LCD_display_ctrl@temp:	
   879                           ; 1 bytes @ 0x8
   880                           
   881                           
   882                           ; 1 bytes @ 0x8
   883  0078                     	ds	1
   884  0079                     LCD_send_string@i:
   885  0079                     LCD_display_clear@i:	
   886                           ; 1 bytes @ 0x9
   887                           
   888  0079                     ___lwdiv@counter:	
   889                           ; 1 bytes @ 0x9
   890                           
   891                           
   892                           ; 1 bytes @ 0x9
   893  0079                     	ds	1
   894  007A                     ??___lwmod:
   895  007A                     LCD_send_string@string:	
   896                           ; 1 bytes @ 0xA
   897                           
   898                           
   899                           ; 1 bytes @ 0xA
   900  007A                     	ds	1
   901  007B                     ??_Draw_main_display_p1:
   902  007B                     ??_Draw_main_display_p2:	
   903                           ; 1 bytes @ 0xB
   904                           
   905  007B                     ??_Draw_settings_display:	
   906                           ; 1 bytes @ 0xB
   907                           
   908  007B                     ___lwmod@counter:	
   909                           ; 1 bytes @ 0xB
   910                           
   911                           
   912                           ; 1 bytes @ 0xB
   913  007B                     	ds	1
   914                           
   915                           	psect	cstackBANK0
   916  0049                     __pcstackBANK0:
   917  0049                     ?_Draw_settings_display:
   918  0049                     ?___lwmod:	
   919                           ; 1 bytes @ 0x0
   920                           
   921  0049                     Draw_settings_display@ctr:	
   922                           ; 2 bytes @ 0x0
   923                           
   924  0049                     ___lwmod@divisor:	
   925                           ; 2 bytes @ 0x0
   926                           
   927                           
   928                           ; 2 bytes @ 0x0
   929  0049                     	ds	2
   930  004B                     ___lwmod@dividend:
   931                           
   932                           ; 2 bytes @ 0x2
   933  004B                     	ds	2
   934  004D                     ?_sprintf:
   935  004D                     sprintf@sp:	
   936                           ; 2 bytes @ 0x4
   937                           
   938                           
   939                           ; 2 bytes @ 0x4
   940  004D                     	ds	2
   941  004F                     sprintf@f:
   942                           
   943                           ; 1 bytes @ 0x6
   944  004F                     	ds	7
   945  0056                     ??_sprintf:
   946                           
   947                           ; 1 bytes @ 0xD
   948  0056                     	ds	3
   949  0059                     sprintf@flag:
   950                           
   951                           ; 1 bytes @ 0x10
   952  0059                     	ds	1
   953  005A                     sprintf@prec:
   954                           
   955                           ; 1 bytes @ 0x11
   956  005A                     	ds	1
   957  005B                     sprintf@ap:
   958                           
   959                           ; 1 bytes @ 0x12
   960  005B                     	ds	1
   961  005C                     sprintf@cp:
   962                           
   963                           ; 2 bytes @ 0x13
   964  005C                     	ds	2
   965  005E                     sprintf@val:
   966                           
   967                           ; 2 bytes @ 0x15
   968  005E                     	ds	2
   969  0060                     sprintf@c:
   970                           
   971                           ; 1 bytes @ 0x17
   972  0060                     	ds	1
   973  0061                     ??_set_temp:
   974  0061                     ??_set_humi:	
   975                           ; 1 bytes @ 0x18
   976                           
   977  0061                     ??_set_time:	
   978                           ; 1 bytes @ 0x18
   979                           
   980                           
   981                           ; 1 bytes @ 0x18
   982  0061                     	ds	7
   983  0068                     set_time@am_pm:
   984                           
   985                           ; 1 bytes @ 0x1F
   986  0068                     	ds	1
   987  0069                     ??_main:
   988                           
   989                           ; 1 bytes @ 0x20
   990  0069                     	ds	2
   991  006B                     main@lastCLK:
   992                           
   993                           ; 1 bytes @ 0x22
   994  006B                     	ds	1
   995  006C                     main@currentCLK:
   996                           
   997                           ; 1 bytes @ 0x23
   998  006C                     	ds	1
   999                           
  1000                           	psect	maintext
  1001  02C1                     __pmaintext:	
  1002 ;;
  1003 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1004 ;;
  1005 ;; *************** function _main *****************
  1006 ;; Defined at:
  1007 ;;		line 510 in file "main.c"
  1008 ;; Parameters:    Size  Location     Type
  1009 ;;		None
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;  currentCLK      1   35[BANK0 ] unsigned char 
  1012 ;;  lastCLK         1   34[BANK0 ] unsigned char 
  1013 ;; Return value:  Size  Location     Type
  1014 ;;                  1    wreg      void 
  1015 ;; Registers used:
  1016 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1017 ;; Tracked objects:
  1018 ;;		On entry : B00/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1022 ;;      Params:         0       0       0       0
  1023 ;;      Locals:         0       2       0       0
  1024 ;;      Temps:          0       2       0       0
  1025 ;;      Totals:         0       4       0       0
  1026 ;;Total ram usage:        4 bytes
  1027 ;; Hardware stack levels required when called:    6
  1028 ;; This function calls:
  1029 ;;		_Draw_main_display_p1
  1030 ;;		_Draw_main_display_p2
  1031 ;;		_Draw_settings_display
  1032 ;;		_LCD_Init
  1033 ;;		_LCD_display_clear
  1034 ;;		_LCD_display_ctrl
  1035 ;;		_set_date
  1036 ;;		_set_humi
  1037 ;;		_set_temp
  1038 ;;		_set_time
  1039 ;; This function is called by:
  1040 ;;		Startup code after reset
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           
  1045                           ;psect for function _main
  1046  02C1                     _main:
  1047  02C1                     l2012:	
  1048                           ;incstack = 0
  1049                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1050                           
  1051                           
  1052                           ;main.c: 512:     ANSEL = 0x00;
  1053  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  1054  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  1055  02C3  0191               	clrf	17	;volatile
  1056  02C4                     l2014:
  1057                           
  1058                           ;main.c: 513:     CMCON0 = 0x07;
  1059  02C4  3007               	movlw	7
  1060  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  1061  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  1062  02C7  0099               	movwf	25	;volatile
  1063  02C8                     l2016:
  1064                           
  1065                           ;main.c: 515:     TRISA = 0x04;
  1066  02C8  3004               	movlw	4
  1067  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  1068  02CA  1303               	bcf	3,6	;RP1=0, select bank1
  1069  02CB  0085               	movwf	5	;volatile
  1070                           
  1071                           ;main.c: 516:     PORTA = 0x00;
  1072  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  1073  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  1074  02CE  0185               	clrf	5	;volatile
  1075  02CF                     l2018:
  1076                           
  1077                           ;main.c: 518:     TRISC = 0x30;
  1078  02CF  3030               	movlw	48
  1079  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  1080  02D1  1303               	bcf	3,6	;RP1=0, select bank1
  1081  02D2  0087               	movwf	7	;volatile
  1082  02D3                     l2020:
  1083                           
  1084                           ;main.c: 519:     PORTC = 0x00;
  1085  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  1086  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  1087  02D5  0187               	clrf	7	;volatile
  1088  02D6                     l2022:
  1089                           
  1090                           ;main.c: 521:     T1CONbits.TMR1ON = 0;
  1091  02D6  1010               	bcf	16,0	;volatile
  1092  02D7                     l2024:
  1093                           
  1094                           ;main.c: 522:     TMR1L = 0x00;
  1095  02D7  018E               	clrf	14	;volatile
  1096  02D8                     l2026:
  1097                           
  1098                           ;main.c: 523:     TMR1H = 0x00;
  1099  02D8  018F               	clrf	15	;volatile
  1100                           
  1101                           ;main.c: 524:     T1CON = 0x30;
  1102  02D9  3030               	movlw	48
  1103  02DA  0090               	movwf	16	;volatile
  1104  02DB                     l2028:
  1105                           
  1106                           ;main.c: 525:     TMR1IF = 0;
  1107  02DB  100C               	bcf	12,0	;volatile
  1108  02DC                     l2030:
  1109                           
  1110                           ;main.c: 527:     LCD_Init();
  1111  02DC  118A  2526  118A   	fcall	_LCD_Init
  1112  02DF                     l2032:
  1113                           
  1114                           ;main.c: 529:     LCD_display_ctrl(1,0,0);
  1115  02DF  01F4               	clrf	LCD_display_ctrl@cursor
  1116  02E0  01F5               	clrf	LCD_display_ctrl@blink
  1117  02E1  3001               	movlw	1
  1118  02E2  118A  272A  118A   	fcall	_LCD_display_ctrl
  1119  02E5                     l240:
  1120  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  1121  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  1122  02E7  1905               	btfsc	5,2	;volatile
  1123  02E8  2AEA               	goto	u1661
  1124  02E9  2AEB               	goto	u1660
  1125  02EA                     u1661:
  1126  02EA  2AE5               	goto	l240
  1127  02EB                     u1660:
  1128  02EB                     l242:
  1129                           
  1130                           ;main.c: 536:         TMR1ON = 0;
  1131  02EB  1010               	bcf	16,0	;volatile
  1132  02EC                     l2034:
  1133                           
  1134                           ;main.c: 537:         TMR1L = 0x00;
  1135  02EC  018E               	clrf	14	;volatile
  1136                           
  1137                           ;main.c: 538:         TMR1H = 0x00;
  1138  02ED  018F               	clrf	15	;volatile
  1139  02EE                     l2036:
  1140                           
  1141                           ;main.c: 539:         TMR1IF = 0;
  1142  02EE  100C               	bcf	12,0	;volatile
  1143  02EF                     l2038:
  1144                           
  1145                           ;main.c: 540:         Draw_main_display_p1();
  1146  02EF  118A  2678  118A   	fcall	_Draw_main_display_p1
  1147  02F2                     l2040:
  1148                           
  1149                           ;main.c: 541:         if(RA2)
  1150  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  1151  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  1152  02F4  1D05               	btfss	5,2	;volatile
  1153  02F5  2AF7               	goto	u1671
  1154  02F6  2AF8               	goto	u1670
  1155  02F7                     u1671:
  1156  02F7  2AE5               	goto	l240
  1157  02F8                     u1670:
  1158  02F8                     l2042:
  1159                           
  1160                           ;main.c: 542:         {;main.c: 543:             T1CONbits.TMR1ON = 1;
  1161  02F8  1410               	bsf	16,0	;volatile
  1162  02F9                     l244:	
  1163                           ;main.c: 544:             while(RA2);
  1164                           
  1165  02F9  1905               	btfsc	5,2	;volatile
  1166  02FA  2AFC               	goto	u1681
  1167  02FB  2AFD               	goto	u1680
  1168  02FC                     u1681:
  1169  02FC  2AF9               	goto	l244
  1170  02FD                     u1680:
  1171  02FD                     l246:
  1172                           
  1173                           ;main.c: 545:             if(TMR1IF)
  1174  02FD  1C0C               	btfss	12,0	;volatile
  1175  02FE  2B00               	goto	u1691
  1176  02FF  2B01               	goto	u1690
  1177  0300                     u1691:
  1178  0300  2B8A               	goto	l2102
  1179  0301                     u1690:
  1180  0301                     l2044:
  1181                           
  1182                           ;main.c: 546:             {;main.c: 547:                 TMR1ON = 0;
  1183  0301  1010               	bcf	16,0	;volatile
  1184  0302                     l2046:
  1185                           
  1186                           ;main.c: 548:                 TMR1L = 0x00;
  1187  0302  018E               	clrf	14	;volatile
  1188                           
  1189                           ;main.c: 549:                 TMR1H = 0x00;
  1190  0303  018F               	clrf	15	;volatile
  1191  0304                     l2048:
  1192                           
  1193                           ;main.c: 550:                 TMR1IF = 0;
  1194  0304  100C               	bcf	12,0	;volatile
  1195                           
  1196                           ;main.c: 551:                 while(!TMR1IF)
  1197  0305  2B82               	goto	l2098
  1198  0306                     l2050:
  1199                           
  1200                           ;main.c: 552:                 {;main.c: 553:                     currentCLK = RC4;
  1201  0306  3000               	movlw	0
  1202  0307  1A07               	btfsc	7,4	;volatile
  1203  0308  3001               	movlw	1
  1204  0309  00EC               	movwf	main@currentCLK
  1205  030A                     l2052:
  1206                           
  1207                           ;main.c: 554:                     if(currentCLK != lastCLK && currentCLK == 1)
  1208  030A  086C               	movf	main@currentCLK,w
  1209  030B  066B               	xorwf	main@lastCLK,w
  1210  030C  1903               	skipnz
  1211  030D  2B0F               	goto	u1701
  1212  030E  2B10               	goto	u1700
  1213  030F                     u1701:
  1214  030F  2B40               	goto	l250
  1215  0310                     u1700:
  1216  0310                     l2054:
  1217  0310  036C               	decf	main@currentCLK,w
  1218  0311  1D03               	btfss	3,2
  1219  0312  2B14               	goto	u1711
  1220  0313  2B15               	goto	u1710
  1221  0314                     u1711:
  1222  0314  2B40               	goto	l250
  1223  0315                     u1710:
  1224  0315                     l2056:
  1225                           
  1226                           ;main.c: 555:                     {;main.c: 556:                         if (RC5 != curr
      +                          entCLK)
  1227  0315  3000               	movlw	0
  1228  0316  1A87               	btfsc	7,5	;volatile
  1229  0317  3001               	movlw	1
  1230  0318  066C               	xorwf	main@currentCLK,w
  1231  0319  1903               	skipnz
  1232  031A  2B1C               	goto	u1721
  1233  031B  2B1D               	goto	u1720
  1234  031C                     u1721:
  1235  031C  2B31               	goto	l2066
  1236  031D                     u1720:
  1237  031D                     l2058:
  1238                           
  1239                           ;main.c: 557:                         {;main.c: 558:                             if(coun
      +                          ter > 0)
  1240  031D  086D               	movf	_counter,w	;volatile
  1241  031E  1903               	btfsc	3,2
  1242  031F  2B21               	goto	u1731
  1243  0320  2B22               	goto	u1730
  1244  0321                     u1731:
  1245  0321  2B2F               	goto	l2064
  1246  0322                     u1730:
  1247  0322                     l2060:
  1248                           
  1249                           ;main.c: 559:                             {;main.c: 560:                                
      +                           counter--;
  1250  0322  3001               	movlw	1
  1251  0323  02ED               	subwf	_counter,f	;volatile
  1252  0324                     l2062:
  1253                           
  1254                           ;main.c: 561:                                 Draw_settings_display(counter);
  1255  0324  086D               	movf	_counter,w	;volatile
  1256  0325  00E9               	movwf	??_main
  1257  0326  01EA               	clrf	??_main+1
  1258  0327  0869               	movf	??_main,w
  1259  0328  00C9               	movwf	Draw_settings_display@ctr
  1260  0329  086A               	movf	??_main+1,w
  1261  032A  00CA               	movwf	Draw_settings_display@ctr+1
  1262  032B  118A  242B  118A   	fcall	_Draw_settings_display
  1263                           
  1264                           ;main.c: 562:                             }
  1265  032E  2B40               	goto	l250
  1266  032F                     l2064:
  1267                           
  1268                           ;main.c: 564:                             {;main.c: 565:                                
      +                           counter = 0;
  1269  032F  01ED               	clrf	_counter	;volatile
  1270  0330  2B40               	goto	l250
  1271  0331                     l2066:
  1272                           
  1273                           ;main.c: 569:                         {;main.c: 570:                             if(coun
      +                          ter < 3)
  1274  0331  3003               	movlw	3
  1275  0332  026D               	subwf	_counter,w	;volatile
  1276  0333  1803               	skipnc
  1277  0334  2B36               	goto	u1741
  1278  0335  2B37               	goto	u1740
  1279  0336                     u1741:
  1280  0336  2B3C               	goto	l2072
  1281  0337                     u1740:
  1282  0337                     l2068:
  1283                           
  1284                           ;main.c: 571:                             {;main.c: 572:                                
      +                           counter++;
  1285  0337  3001               	movlw	1
  1286  0338  00E9               	movwf	??_main
  1287  0339  0869               	movf	??_main,w
  1288  033A  07ED               	addwf	_counter,f	;volatile
  1289  033B  2B24               	goto	l2062
  1290  033C                     l2072:
  1291                           
  1292                           ;main.c: 576:                             {;main.c: 577:                                
      +                           counter = 3;
  1293  033C  3003               	movlw	3
  1294  033D  00E9               	movwf	??_main
  1295  033E  0869               	movf	??_main,w
  1296  033F  00ED               	movwf	_counter	;volatile
  1297  0340                     l250:	
  1298                           ;main.c: 580:                     }
  1299                           
  1300                           
  1301                           ;main.c: 581:                     lastCLK = currentCLK;
  1302  0340  1283               	bcf	3,5	;RP0=0, select bank0
  1303  0341  1303               	bcf	3,6	;RP1=0, select bank0
  1304  0342  086C               	movf	main@currentCLK,w
  1305  0343  00E9               	movwf	??_main
  1306  0344  0869               	movf	??_main,w
  1307  0345  00EB               	movwf	main@lastCLK
  1308  0346                     l2074:
  1309                           
  1310                           ;main.c: 582:                     if(RA2)
  1311  0346  1D05               	btfss	5,2	;volatile
  1312  0347  2B49               	goto	u1751
  1313  0348  2B4A               	goto	u1750
  1314  0349                     u1751:
  1315  0349  2B82               	goto	l2098
  1316  034A                     u1750:
  1317  034A                     l2076:
  1318                           
  1319                           ;main.c: 583:                     {;main.c: 584:                         TMR1ON = 1;
  1320  034A  1410               	bsf	16,0	;volatile
  1321  034B                     l258:	
  1322                           ;main.c: 585:                         while(RA2 && TMR1IF == 0);
  1323                           
  1324  034B  1D05               	btfss	5,2	;volatile
  1325  034C  2B4E               	goto	u1761
  1326  034D  2B4F               	goto	u1760
  1327  034E                     u1761:
  1328  034E  2B53               	goto	l262
  1329  034F                     u1760:
  1330  034F                     l2078:
  1331  034F  1C0C               	btfss	12,0	;volatile
  1332  0350  2B52               	goto	u1771
  1333  0351  2B53               	goto	u1770
  1334  0352                     u1771:
  1335  0352  2B4B               	goto	l258
  1336  0353                     u1770:
  1337  0353                     l262:
  1338                           
  1339                           ;main.c: 586:                         if(TMR1IF == 0)
  1340  0353  180C               	btfsc	12,0	;volatile
  1341  0354  2B56               	goto	u1781
  1342  0355  2B57               	goto	u1780
  1343  0356                     u1781:
  1344  0356  2B7D               	goto	l271
  1345  0357                     u1780:
  1346  0357                     l2080:
  1347                           
  1348                           ;main.c: 587:                         {;main.c: 588:                             if(coun
      +                          ter == 0)
  1349  0357  086D               	movf	_counter,w	;volatile
  1350  0358  1D03               	btfss	3,2
  1351  0359  2B5B               	goto	u1791
  1352  035A  2B5C               	goto	u1790
  1353  035B                     u1791:
  1354  035B  2B60               	goto	l2084
  1355  035C                     u1790:
  1356  035C                     l2082:
  1357                           
  1358                           ;main.c: 589:                             {;main.c: 590:                                
      +                           set_time();
  1359  035C  118A  202A  118A   	fcall	_set_time
  1360                           
  1361                           ;main.c: 591:                             }
  1362  035F  2B7D               	goto	l271
  1363  0360                     l2084:
  1364  0360  036D               	decf	_counter,w	;volatile
  1365  0361  1D03               	btfss	3,2
  1366  0362  2B64               	goto	u1801
  1367  0363  2B65               	goto	u1800
  1368  0364                     u1801:
  1369  0364  2B69               	goto	l2088
  1370  0365                     u1800:
  1371  0365                     l2086:
  1372                           
  1373                           ;main.c: 593:                             {;main.c: 594:                                
      +                           set_date();
  1374  0365  118A  27AA  118A   	fcall	_set_date
  1375                           
  1376                           ;main.c: 595:                             }
  1377  0368  2B7D               	goto	l271
  1378  0369                     l2088:
  1379  0369  3002               	movlw	2
  1380  036A  066D               	xorwf	_counter,w	;volatile
  1381  036B  1D03               	btfss	3,2
  1382  036C  2B6E               	goto	u1811
  1383  036D  2B6F               	goto	u1810
  1384  036E                     u1811:
  1385  036E  2B73               	goto	l2092
  1386  036F                     u1810:
  1387  036F                     l2090:
  1388                           
  1389                           ;main.c: 597:                             {;main.c: 598:                                
      +                           set_temp();
  1390  036F  118A  2396  118A   	fcall	_set_temp
  1391                           
  1392                           ;main.c: 599:                             }
  1393  0372  2B7D               	goto	l271
  1394  0373                     l2092:
  1395  0373  3003               	movlw	3
  1396  0374  066D               	xorwf	_counter,w	;volatile
  1397  0375  1D03               	btfss	3,2
  1398  0376  2B78               	goto	u1821
  1399  0377  2B79               	goto	u1820
  1400  0378                     u1821:
  1401  0378  2B7D               	goto	l267
  1402  0379                     u1820:
  1403  0379                     l2094:
  1404                           
  1405                           ;main.c: 601:                             {;main.c: 602:                                
      +                           set_humi();
  1406  0379  118A  24B0  118A   	fcall	_set_humi
  1407  037C  2B7D               	goto	l271
  1408  037D                     l267:
  1409  037D                     l271:	
  1410                           ;main.c: 606:                         {;main.c: 608:                         }
  1411                           
  1412                           
  1413                           ;main.c: 609:                         TMR1ON = 0;
  1414  037D  1283               	bcf	3,5	;RP0=0, select bank0
  1415  037E  1303               	bcf	3,6	;RP1=0, select bank0
  1416  037F  1010               	bcf	16,0	;volatile
  1417  0380                     l2096:
  1418                           
  1419                           ;main.c: 610:                         TMR1L = 0x00;
  1420  0380  018E               	clrf	14	;volatile
  1421                           
  1422                           ;main.c: 611:                         TMR1H = 0x00;
  1423  0381  018F               	clrf	15	;volatile
  1424  0382                     l2098:
  1425                           
  1426                           ;main.c: 551:                 while(!TMR1IF)
  1427  0382  1C0C               	btfss	12,0	;volatile
  1428  0383  2B85               	goto	u1831
  1429  0384  2B86               	goto	u1830
  1430  0385                     u1831:
  1431  0385  2B06               	goto	l2050
  1432  0386                     u1830:
  1433  0386                     l2100:
  1434                           
  1435                           ;main.c: 614:                 LCD_display_clear();
  1436  0386  118A  27C0  118A   	fcall	_LCD_display_clear
  1437                           
  1438                           ;main.c: 615:             }
  1439  0389  2AE5               	goto	l240
  1440  038A                     l2102:
  1441                           
  1442                           ;main.c: 617:             {;main.c: 618:                 Draw_main_display_p2();
  1443  038A  118A  26AE  118A   	fcall	_Draw_main_display_p2
  1444  038D                     l274:	
  1445                           ;main.c: 619:                 while(!RA2);
  1446                           
  1447  038D  1283               	bcf	3,5	;RP0=0, select bank0
  1448  038E  1303               	bcf	3,6	;RP1=0, select bank0
  1449  038F  1D05               	btfss	5,2	;volatile
  1450  0390  2B92               	goto	u1841
  1451  0391  2B93               	goto	u1840
  1452  0392                     u1841:
  1453  0392  2B8D               	goto	l274
  1454  0393                     u1840:
  1455  0393  2B86               	goto	l2100
  1456  0394  118A  280B         	ljmp	start
  1457  0396                     __end_of_main:
  1458                           
  1459                           	psect	text1
  1460  002A                     __ptext1:	
  1461 ;; *************** function _set_time *****************
  1462 ;; Defined at:
  1463 ;;		line 391 in file "main.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;		None
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;  am_pm           1   31[BANK0 ] unsigned char 
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      void 
  1470 ;; Registers used:
  1471 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1477 ;;      Params:         0       0       0       0
  1478 ;;      Locals:         0       1       0       0
  1479 ;;      Temps:          0       7       0       0
  1480 ;;      Totals:         0       8       0       0
  1481 ;;Total ram usage:        8 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; Hardware stack levels required when called:    5
  1484 ;; This function calls:
  1485 ;;		_LCD_display_clear
  1486 ;;		_LCD_send_string
  1487 ;;		_LCD_set_cursor
  1488 ;;		_sprintf
  1489 ;; This function is called by:
  1490 ;;		_main
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494                           
  1495                           ;psect for function _set_time
  1496  002A                     _set_time:
  1497  002A                     l1900:	
  1498                           ;incstack = 0
  1499                           ; Regs used in _set_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1500                           
  1501                           
  1502                           ;main.c: 393:     uint8_t am_pm = {"PM"};
  1503  002A  302A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1504  002B  1283               	bcf	3,5	;RP0=0, select bank0
  1505  002C  1303               	bcf	3,6	;RP1=0, select bank0
  1506  002D  00E1               	movwf	??_set_time
  1507  002E  0861               	movf	??_set_time,w
  1508  002F  00E8               	movwf	set_time@am_pm
  1509  0030                     l1902:
  1510                           
  1511                           ;main.c: 395:     LCD_display_clear();
  1512  0030  118A  27C0  118A   	fcall	_LCD_display_clear
  1513  0033                     l1904:
  1514                           
  1515                           ;main.c: 397:     LCD_set_cursor(0,0);
  1516  0033  01F4               	clrf	LCD_set_cursor@column
  1517  0034  3000               	movlw	0
  1518  0035  118A  2770  118A   	fcall	_LCD_set_cursor
  1519  0038                     l1906:
  1520                           
  1521                           ;main.c: 398:     LCD_send_string(s_time);
  1522  0038  303C               	movlw	(low (_s_time| 0))& (0+255)
  1523  0039  118A  278D  118A   	fcall	_LCD_send_string
  1524  003C                     l1908:
  1525                           
  1526                           ;main.c: 400:     LCD_set_cursor(0,9);
  1527  003C  3009               	movlw	9
  1528  003D  1283               	bcf	3,5	;RP0=0, select bank0
  1529  003E  1303               	bcf	3,6	;RP1=0, select bank0
  1530  003F  00E1               	movwf	??_set_time
  1531  0040  0861               	movf	??_set_time,w
  1532  0041  00F4               	movwf	LCD_set_cursor@column
  1533  0042  3000               	movlw	0
  1534  0043  118A  2770  118A   	fcall	_LCD_set_cursor
  1535  0046                     l1910:
  1536                           
  1537                           ;main.c: 401:     LCD_send_string(time);
  1538  0046  3025               	movlw	(low (_time| 0))& (0+255)
  1539  0047  118A  278D  118A   	fcall	_LCD_send_string
  1540                           
  1541                           ;main.c: 402:     while(!RA2)
  1542  004A  28AF               	goto	l1936
  1543  004B                     l1912:
  1544                           
  1545                           ;main.c: 403:     {;main.c: 404:         s_currentCLK = RC4;
  1546  004B  3000               	movlw	0
  1547  004C  1A07               	btfsc	7,4	;volatile
  1548  004D  3001               	movlw	1
  1549  004E  00EF               	movwf	_s_currentCLK
  1550  004F                     l1914:
  1551                           
  1552                           ;main.c: 405:         if(s_currentCLK != s_lastCLK && s_currentCLK == 1)
  1553  004F  086F               	movf	_s_currentCLK,w
  1554  0050  066E               	xorwf	_s_lastCLK,w
  1555  0051  1903               	skipnz
  1556  0052  2854               	goto	u1451
  1557  0053  2855               	goto	u1450
  1558  0054                     u1451:
  1559  0054  287D               	goto	l198
  1560  0055                     u1450:
  1561  0055                     l1916:
  1562  0055  036F               	decf	_s_currentCLK,w
  1563  0056  1D03               	btfss	3,2
  1564  0057  2859               	goto	u1461
  1565  0058  285A               	goto	u1460
  1566  0059                     u1461:
  1567  0059  287D               	goto	l198
  1568  005A                     u1460:
  1569  005A                     l1918:
  1570                           
  1571                           ;main.c: 406:         {;main.c: 407:             if(RC5 != s_currentCLK)
  1572  005A  3000               	movlw	0
  1573  005B  1A87               	btfsc	7,5	;volatile
  1574  005C  3001               	movlw	1
  1575  005D  066F               	xorwf	_s_currentCLK,w
  1576  005E  1903               	skipnz
  1577  005F  2861               	goto	u1471
  1578  0060  2862               	goto	u1470
  1579  0061                     u1471:
  1580  0061  286E               	goto	l1924
  1581  0062                     u1470:
  1582  0062                     l1920:
  1583                           
  1584                           ;main.c: 408:             {;main.c: 409:                 if(time_hours > 1)
  1585  0062  3002               	movlw	2
  1586  0063  0221               	subwf	_time_hours,w
  1587  0064  1C03               	skipc
  1588  0065  2867               	goto	u1481
  1589  0066  2868               	goto	u1480
  1590  0067                     u1481:
  1591  0067  286B               	goto	l200
  1592  0068                     u1480:
  1593  0068                     l1922:
  1594                           
  1595                           ;main.c: 410:                 {;main.c: 411:                     time_hours -= 1;
  1596  0068  3001               	movlw	1
  1597  0069  02A1               	subwf	_time_hours,f
  1598                           
  1599                           ;main.c: 412:                 }
  1600  006A  287D               	goto	l198
  1601  006B                     l200:	
  1602                           ;main.c: 413:                 else
  1603                           
  1604                           
  1605                           ;main.c: 414:                 {;main.c: 415:                     time_hours = 1;
  1606  006B  01A1               	clrf	_time_hours
  1607  006C  0AA1               	incf	_time_hours,f
  1608  006D  287D               	goto	l198
  1609  006E                     l1924:
  1610                           
  1611                           ;main.c: 419:             {;main.c: 420:                 if(time_hours < 12)
  1612  006E  300C               	movlw	12
  1613  006F  0221               	subwf	_time_hours,w
  1614  0070  1803               	skipnc
  1615  0071  2873               	goto	u1491
  1616  0072  2874               	goto	u1490
  1617  0073                     u1491:
  1618  0073  2879               	goto	l1928
  1619  0074                     u1490:
  1620  0074                     l1926:
  1621                           
  1622                           ;main.c: 421:                 {;main.c: 422:                     time_hours += 1;
  1623  0074  3001               	movlw	1
  1624  0075  00E1               	movwf	??_set_time
  1625  0076  0861               	movf	??_set_time,w
  1626  0077  07A1               	addwf	_time_hours,f
  1627                           
  1628                           ;main.c: 423:                 }
  1629  0078  287D               	goto	l198
  1630  0079                     l1928:
  1631                           
  1632                           ;main.c: 425:                 {;main.c: 426:                     time_hours = 12;
  1633  0079  300C               	movlw	12
  1634  007A  00E1               	movwf	??_set_time
  1635  007B  0861               	movf	??_set_time,w
  1636  007C  00A1               	movwf	_time_hours
  1637  007D                     l198:	
  1638                           ;main.c: 429:         }
  1639                           
  1640                           
  1641                           ;main.c: 430:         s_lastCLK = s_currentCLK;
  1642  007D  086F               	movf	_s_currentCLK,w
  1643  007E  00E1               	movwf	??_set_time
  1644  007F  0861               	movf	??_set_time,w
  1645  0080  00EE               	movwf	_s_lastCLK
  1646  0081                     l1930:
  1647                           
  1648                           ;main.c: 431:         sprintf(time,"%d:%d[%s]",time_hours,time_minutes,am_pm);
  1649  0081  3025               	movlw	(low (_time| 0))& (0+255)
  1650  0082  00CD               	movwf	sprintf@sp
  1651  0083  3000               	movlw	0
  1652  0084  00CE               	movwf	sprintf@sp+1
  1653  0085  300B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1654  0086  00E1               	movwf	??_set_time
  1655  0087  0861               	movf	??_set_time,w
  1656  0088  00CF               	movwf	sprintf@f
  1657  0089  0821               	movf	_time_hours,w
  1658  008A  00E2               	movwf	??_set_time+1
  1659  008B  01E3               	clrf	??_set_time+2
  1660  008C  0862               	movf	??_set_time+1,w
  1661  008D  00D0               	movwf	?_sprintf+3
  1662  008E  0863               	movf	??_set_time+2,w
  1663  008F  00D1               	movwf	?_sprintf+4
  1664  0090  0820               	movf	_time_minutes,w
  1665  0091  00E4               	movwf	??_set_time+3
  1666  0092  01E5               	clrf	??_set_time+4
  1667  0093  0864               	movf	??_set_time+3,w
  1668  0094  00D2               	movwf	?_sprintf+5
  1669  0095  0865               	movf	??_set_time+4,w
  1670  0096  00D3               	movwf	?_sprintf+6
  1671  0097  0868               	movf	set_time@am_pm,w
  1672  0098  00E6               	movwf	??_set_time+5
  1673  0099  01E7               	clrf	??_set_time+6
  1674  009A  0866               	movf	??_set_time+5,w
  1675  009B  00D4               	movwf	?_sprintf+7
  1676  009C  0867               	movf	??_set_time+6,w
  1677  009D  00D5               	movwf	?_sprintf+8
  1678  009E  118A  2196  118A   	fcall	_sprintf
  1679  00A1                     l1932:
  1680                           
  1681                           ;main.c: 432:         LCD_set_cursor(0,9);
  1682  00A1  3009               	movlw	9
  1683  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  1684  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  1685  00A4  00E1               	movwf	??_set_time
  1686  00A5  0861               	movf	??_set_time,w
  1687  00A6  00F4               	movwf	LCD_set_cursor@column
  1688  00A7  3000               	movlw	0
  1689  00A8  118A  2770  118A   	fcall	_LCD_set_cursor
  1690  00AB                     l1934:
  1691                           
  1692                           ;main.c: 433:         LCD_send_string(time);
  1693  00AB  3025               	movlw	(low (_time| 0))& (0+255)
  1694  00AC  118A  278D  118A   	fcall	_LCD_send_string
  1695  00AF                     l1936:
  1696                           
  1697                           ;main.c: 402:     while(!RA2)
  1698  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1699  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  1700  00B1  1D05               	btfss	5,2	;volatile
  1701  00B2  28B4               	goto	u1501
  1702  00B3  28B5               	goto	u1500
  1703  00B4                     u1501:
  1704  00B4  284B               	goto	l1912
  1705  00B5                     u1500:
  1706  00B5                     l206:
  1707  00B5  1905               	btfsc	5,2	;volatile
  1708  00B6  28B8               	goto	u1511
  1709  00B7  28B9               	goto	u1510
  1710  00B8                     u1511:
  1711  00B8  28B5               	goto	l206
  1712  00B9                     u1510:
  1713  00B9  291C               	goto	l1964
  1714  00BA                     l1938:
  1715                           
  1716                           ;main.c: 438:     {;main.c: 439:         s_currentCLK = RC4;
  1717  00BA  3000               	movlw	0
  1718  00BB  1A07               	btfsc	7,4	;volatile
  1719  00BC  3001               	movlw	1
  1720  00BD  00EF               	movwf	_s_currentCLK
  1721  00BE                     l1940:
  1722                           
  1723                           ;main.c: 440:         if(s_currentCLK != s_lastCLK && s_currentCLK == 1)
  1724  00BE  086F               	movf	_s_currentCLK,w
  1725  00BF  066E               	xorwf	_s_lastCLK,w
  1726  00C0  1903               	skipnz
  1727  00C1  28C3               	goto	u1521
  1728  00C2  28C4               	goto	u1520
  1729  00C3                     u1521:
  1730  00C3  28EA               	goto	l211
  1731  00C4                     u1520:
  1732  00C4                     l1942:
  1733  00C4  036F               	decf	_s_currentCLK,w
  1734  00C5  1D03               	btfss	3,2
  1735  00C6  28C8               	goto	u1531
  1736  00C7  28C9               	goto	u1530
  1737  00C8                     u1531:
  1738  00C8  28EA               	goto	l211
  1739  00C9                     u1530:
  1740  00C9                     l1944:
  1741                           
  1742                           ;main.c: 441:         {;main.c: 442:             if(RC5 != s_currentCLK)
  1743  00C9  3000               	movlw	0
  1744  00CA  1A87               	btfsc	7,5	;volatile
  1745  00CB  3001               	movlw	1
  1746  00CC  066F               	xorwf	_s_currentCLK,w
  1747  00CD  1903               	skipnz
  1748  00CE  28D0               	goto	u1541
  1749  00CF  28D1               	goto	u1540
  1750  00D0                     u1541:
  1751  00D0  28DB               	goto	l1952
  1752  00D1                     u1540:
  1753  00D1                     l1946:
  1754                           
  1755                           ;main.c: 443:             {;main.c: 444:                 if(time_minutes > 0)
  1756  00D1  0820               	movf	_time_minutes,w
  1757  00D2  1903               	btfsc	3,2
  1758  00D3  28D5               	goto	u1551
  1759  00D4  28D6               	goto	u1550
  1760  00D5                     u1551:
  1761  00D5  28D9               	goto	l1950
  1762  00D6                     u1550:
  1763  00D6                     l1948:
  1764                           
  1765                           ;main.c: 445:                 {;main.c: 446:                     time_minutes -= 1;
  1766  00D6  3001               	movlw	1
  1767  00D7  02A0               	subwf	_time_minutes,f
  1768                           
  1769                           ;main.c: 447:                 }
  1770  00D8  28EA               	goto	l211
  1771  00D9                     l1950:
  1772                           
  1773                           ;main.c: 449:                 {;main.c: 450:                     time_minutes = 0;
  1774  00D9  01A0               	clrf	_time_minutes
  1775  00DA  28EA               	goto	l211
  1776  00DB                     l1952:
  1777                           
  1778                           ;main.c: 454:             {;main.c: 455:                 if(time_minutes < 59)
  1779  00DB  303B               	movlw	59
  1780  00DC  0220               	subwf	_time_minutes,w
  1781  00DD  1803               	skipnc
  1782  00DE  28E0               	goto	u1561
  1783  00DF  28E1               	goto	u1560
  1784  00E0                     u1561:
  1785  00E0  28E6               	goto	l1956
  1786  00E1                     u1560:
  1787  00E1                     l1954:
  1788                           
  1789                           ;main.c: 456:                 {;main.c: 457:                     time_minutes += 1;
  1790  00E1  3001               	movlw	1
  1791  00E2  00E1               	movwf	??_set_time
  1792  00E3  0861               	movf	??_set_time,w
  1793  00E4  07A0               	addwf	_time_minutes,f
  1794                           
  1795                           ;main.c: 458:                 }
  1796  00E5  28EA               	goto	l211
  1797  00E6                     l1956:
  1798                           
  1799                           ;main.c: 460:                 {;main.c: 461:                     time_minutes = 59;
  1800  00E6  303B               	movlw	59
  1801  00E7  00E1               	movwf	??_set_time
  1802  00E8  0861               	movf	??_set_time,w
  1803  00E9  00A0               	movwf	_time_minutes
  1804  00EA                     l211:	
  1805                           ;main.c: 464:         }
  1806                           
  1807                           
  1808                           ;main.c: 465:         s_lastCLK = s_currentCLK;
  1809  00EA  086F               	movf	_s_currentCLK,w
  1810  00EB  00E1               	movwf	??_set_time
  1811  00EC  0861               	movf	??_set_time,w
  1812  00ED  00EE               	movwf	_s_lastCLK
  1813  00EE                     l1958:
  1814                           
  1815                           ;main.c: 466:         sprintf(time,"%d:%d[%s]",time_hours,time_minutes,am_pm);
  1816  00EE  3025               	movlw	(low (_time| 0))& (0+255)
  1817  00EF  00CD               	movwf	sprintf@sp
  1818  00F0  3000               	movlw	0
  1819  00F1  00CE               	movwf	sprintf@sp+1
  1820  00F2  300B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1821  00F3  00E1               	movwf	??_set_time
  1822  00F4  0861               	movf	??_set_time,w
  1823  00F5  00CF               	movwf	sprintf@f
  1824  00F6  0821               	movf	_time_hours,w
  1825  00F7  00E2               	movwf	??_set_time+1
  1826  00F8  01E3               	clrf	??_set_time+2
  1827  00F9  0862               	movf	??_set_time+1,w
  1828  00FA  00D0               	movwf	?_sprintf+3
  1829  00FB  0863               	movf	??_set_time+2,w
  1830  00FC  00D1               	movwf	?_sprintf+4
  1831  00FD  0820               	movf	_time_minutes,w
  1832  00FE  00E4               	movwf	??_set_time+3
  1833  00FF  01E5               	clrf	??_set_time+4
  1834  0100  0864               	movf	??_set_time+3,w
  1835  0101  00D2               	movwf	?_sprintf+5
  1836  0102  0865               	movf	??_set_time+4,w
  1837  0103  00D3               	movwf	?_sprintf+6
  1838  0104  0868               	movf	set_time@am_pm,w
  1839  0105  00E6               	movwf	??_set_time+5
  1840  0106  01E7               	clrf	??_set_time+6
  1841  0107  0866               	movf	??_set_time+5,w
  1842  0108  00D4               	movwf	?_sprintf+7
  1843  0109  0867               	movf	??_set_time+6,w
  1844  010A  00D5               	movwf	?_sprintf+8
  1845  010B  118A  2196  118A   	fcall	_sprintf
  1846  010E                     l1960:
  1847                           
  1848                           ;main.c: 467:         LCD_set_cursor(0,9);
  1849  010E  3009               	movlw	9
  1850  010F  1283               	bcf	3,5	;RP0=0, select bank0
  1851  0110  1303               	bcf	3,6	;RP1=0, select bank0
  1852  0111  00E1               	movwf	??_set_time
  1853  0112  0861               	movf	??_set_time,w
  1854  0113  00F4               	movwf	LCD_set_cursor@column
  1855  0114  3000               	movlw	0
  1856  0115  118A  2770  118A   	fcall	_LCD_set_cursor
  1857  0118                     l1962:
  1858                           
  1859                           ;main.c: 468:         LCD_send_string(time);
  1860  0118  3025               	movlw	(low (_time| 0))& (0+255)
  1861  0119  118A  278D  118A   	fcall	_LCD_send_string
  1862  011C                     l1964:
  1863                           
  1864                           ;main.c: 437:     while(!RA2)
  1865  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1866  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1867  011E  1D05               	btfss	5,2	;volatile
  1868  011F  2921               	goto	u1571
  1869  0120  2922               	goto	u1570
  1870  0121                     u1571:
  1871  0121  28BA               	goto	l1938
  1872  0122                     u1570:
  1873  0122                     l219:
  1874  0122  1905               	btfsc	5,2	;volatile
  1875  0123  2925               	goto	u1581
  1876  0124  2926               	goto	u1580
  1877  0125                     u1581:
  1878  0125  2922               	goto	l219
  1879  0126                     u1580:
  1880  0126  298F               	goto	l1986
  1881  0127                     l1966:
  1882                           
  1883                           ;main.c: 472:     {;main.c: 473:         s_currentCLK = RC4;
  1884  0127  3000               	movlw	0
  1885  0128  1A07               	btfsc	7,4	;volatile
  1886  0129  3001               	movlw	1
  1887  012A  00EF               	movwf	_s_currentCLK
  1888  012B                     l1968:
  1889                           
  1890                           ;main.c: 474:         if(s_currentCLK != s_lastCLK && s_currentCLK == 1)
  1891  012B  086F               	movf	_s_currentCLK,w
  1892  012C  066E               	xorwf	_s_lastCLK,w
  1893  012D  1903               	skipnz
  1894  012E  2930               	goto	u1591
  1895  012F  2931               	goto	u1590
  1896  0130                     u1591:
  1897  0130  295B               	goto	l1978
  1898  0131                     u1590:
  1899  0131                     l1970:
  1900  0131  036F               	decf	_s_currentCLK,w
  1901  0132  1D03               	btfss	3,2
  1902  0133  2935               	goto	u1601
  1903  0134  2936               	goto	u1600
  1904  0135                     u1601:
  1905  0135  295B               	goto	l1978
  1906  0136                     u1600:
  1907  0136                     l1972:
  1908                           
  1909                           ;main.c: 475:         {;main.c: 476:             if(RC5 != s_currentCLK)
  1910  0136  3000               	movlw	0
  1911  0137  1A87               	btfsc	7,5	;volatile
  1912  0138  3001               	movlw	1
  1913  0139  066F               	xorwf	_s_currentCLK,w
  1914  013A  1903               	skipnz
  1915  013B  293D               	goto	u1611
  1916  013C  293E               	goto	u1610
  1917  013D                     u1611:
  1918  013D  294D               	goto	l1976
  1919  013E                     u1610:
  1920  013E                     l1974:
  1921                           
  1922                           ;main.c: 477:             {;main.c: 478:                 sprintf(am_pm,"AM");
  1923  013E  0868               	movf	set_time@am_pm,w
  1924  013F  00E1               	movwf	??_set_time
  1925  0140  01E2               	clrf	??_set_time+1
  1926  0141  0861               	movf	??_set_time,w
  1927  0142  00CD               	movwf	sprintf@sp
  1928  0143  0862               	movf	??_set_time+1,w
  1929  0144  00CE               	movwf	sprintf@sp+1
  1930  0145  3027               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1931  0146  00E3               	movwf	??_set_time+2
  1932  0147  0863               	movf	??_set_time+2,w
  1933  0148  00CF               	movwf	sprintf@f
  1934  0149  118A  2196  118A   	fcall	_sprintf
  1935                           
  1936                           ;main.c: 479:             }
  1937  014C  295B               	goto	l1978
  1938  014D                     l1976:
  1939                           
  1940                           ;main.c: 481:             {;main.c: 482:                 sprintf(am_pm,"PM");
  1941  014D  0868               	movf	set_time@am_pm,w
  1942  014E  00E1               	movwf	??_set_time
  1943  014F  01E2               	clrf	??_set_time+1
  1944  0150  0861               	movf	??_set_time,w
  1945  0151  00CD               	movwf	sprintf@sp
  1946  0152  0862               	movf	??_set_time+1,w
  1947  0153  00CE               	movwf	sprintf@sp+1
  1948  0154  302A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1949  0155  00E3               	movwf	??_set_time+2
  1950  0156  0863               	movf	??_set_time+2,w
  1951  0157  00CF               	movwf	sprintf@f
  1952  0158  118A  2196  118A   	fcall	_sprintf
  1953  015B                     l1978:
  1954                           
  1955                           ;main.c: 485:         s_lastCLK = s_currentCLK;
  1956  015B  1283               	bcf	3,5	;RP0=0, select bank0
  1957  015C  1303               	bcf	3,6	;RP1=0, select bank0
  1958  015D  086F               	movf	_s_currentCLK,w
  1959  015E  00E1               	movwf	??_set_time
  1960  015F  0861               	movf	??_set_time,w
  1961  0160  00EE               	movwf	_s_lastCLK
  1962  0161                     l1980:
  1963                           
  1964                           ;main.c: 486:         sprintf(time,"%d:%d[%s]",time_hours,time_minutes,am_pm);
  1965  0161  3025               	movlw	(low (_time| 0))& (0+255)
  1966  0162  00CD               	movwf	sprintf@sp
  1967  0163  3000               	movlw	0
  1968  0164  00CE               	movwf	sprintf@sp+1
  1969  0165  300B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1970  0166  00E1               	movwf	??_set_time
  1971  0167  0861               	movf	??_set_time,w
  1972  0168  00CF               	movwf	sprintf@f
  1973  0169  0821               	movf	_time_hours,w
  1974  016A  00E2               	movwf	??_set_time+1
  1975  016B  01E3               	clrf	??_set_time+2
  1976  016C  0862               	movf	??_set_time+1,w
  1977  016D  00D0               	movwf	?_sprintf+3
  1978  016E  0863               	movf	??_set_time+2,w
  1979  016F  00D1               	movwf	?_sprintf+4
  1980  0170  0820               	movf	_time_minutes,w
  1981  0171  00E4               	movwf	??_set_time+3
  1982  0172  01E5               	clrf	??_set_time+4
  1983  0173  0864               	movf	??_set_time+3,w
  1984  0174  00D2               	movwf	?_sprintf+5
  1985  0175  0865               	movf	??_set_time+4,w
  1986  0176  00D3               	movwf	?_sprintf+6
  1987  0177  0868               	movf	set_time@am_pm,w
  1988  0178  00E6               	movwf	??_set_time+5
  1989  0179  01E7               	clrf	??_set_time+6
  1990  017A  0866               	movf	??_set_time+5,w
  1991  017B  00D4               	movwf	?_sprintf+7
  1992  017C  0867               	movf	??_set_time+6,w
  1993  017D  00D5               	movwf	?_sprintf+8
  1994  017E  118A  2196  118A   	fcall	_sprintf
  1995  0181                     l1982:
  1996                           
  1997                           ;main.c: 487:         LCD_set_cursor(0,9);
  1998  0181  3009               	movlw	9
  1999  0182  1283               	bcf	3,5	;RP0=0, select bank0
  2000  0183  1303               	bcf	3,6	;RP1=0, select bank0
  2001  0184  00E1               	movwf	??_set_time
  2002  0185  0861               	movf	??_set_time,w
  2003  0186  00F4               	movwf	LCD_set_cursor@column
  2004  0187  3000               	movlw	0
  2005  0188  118A  2770  118A   	fcall	_LCD_set_cursor
  2006  018B                     l1984:
  2007                           
  2008                           ;main.c: 488:         LCD_send_string(time);
  2009  018B  3025               	movlw	(low (_time| 0))& (0+255)
  2010  018C  118A  278D  118A   	fcall	_LCD_send_string
  2011  018F                     l1986:
  2012                           
  2013                           ;main.c: 471:     while(!RA2)
  2014  018F  1283               	bcf	3,5	;RP0=0, select bank0
  2015  0190  1303               	bcf	3,6	;RP1=0, select bank0
  2016  0191  1D05               	btfss	5,2	;volatile
  2017  0192  2994               	goto	u1621
  2018  0193  2995               	goto	u1620
  2019  0194                     u1621:
  2020  0194  2927               	goto	l1966
  2021  0195                     u1620:
  2022  0195                     l228:
  2023  0195  0008               	return
  2024  0196                     __end_of_set_time:
  2025                           
  2026                           	psect	text2
  2027  0396                     __ptext2:	
  2028 ;; *************** function _set_temp *****************
  2029 ;; Defined at:
  2030 ;;		line 291 in file "main.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;		None
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;		None
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  1    wreg      void 
  2037 ;; Registers used:
  2038 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2044 ;;      Params:         0       0       0       0
  2045 ;;      Locals:         0       0       0       0
  2046 ;;      Temps:          0       5       0       0
  2047 ;;      Totals:         0       5       0       0
  2048 ;;Total ram usage:        5 bytes
  2049 ;; Hardware stack levels used:    1
  2050 ;; Hardware stack levels required when called:    5
  2051 ;; This function calls:
  2052 ;;		_LCD_display_clear
  2053 ;;		_LCD_send_string
  2054 ;;		_LCD_set_cursor
  2055 ;;		_sprintf
  2056 ;; This function is called by:
  2057 ;;		_main
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061                           
  2062                           ;psect for function _set_temp
  2063  0396                     _set_temp:
  2064  0396                     l1824:	
  2065                           ;incstack = 0
  2066                           ; Regs used in _set_temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2067                           
  2068                           
  2069                           ;main.c: 293:     LCD_display_clear();
  2070  0396  118A  27C0  118A   	fcall	_LCD_display_clear
  2071                           
  2072                           ;main.c: 295:     LCD_set_cursor(0,0);
  2073  0399  01F4               	clrf	LCD_set_cursor@column
  2074  039A  3000               	movlw	0
  2075  039B  118A  2770  118A   	fcall	_LCD_set_cursor
  2076  039E                     l1826:
  2077                           
  2078                           ;main.c: 296:     LCD_send_string(s_temp);
  2079  039E  30B1               	movlw	(low (_s_temp| 0))& (0+255)
  2080  039F  118A  278D  118A   	fcall	_LCD_send_string
  2081  03A2                     l1828:
  2082                           
  2083                           ;main.c: 298:     LCD_set_cursor(0,12);
  2084  03A2  300C               	movlw	12
  2085  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  2086  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  2087  03A5  00E1               	movwf	??_set_temp
  2088  03A6  0861               	movf	??_set_temp,w
  2089  03A7  00F4               	movwf	LCD_set_cursor@column
  2090  03A8  3000               	movlw	0
  2091  03A9  118A  2770  118A   	fcall	_LCD_set_cursor
  2092                           
  2093                           ;main.c: 299:     LCD_send_string(update_temp);
  2094  03AC  302D               	movlw	(low (_update_temp| 0))& (0+255)
  2095  03AD  118A  278D  118A   	fcall	_LCD_send_string
  2096                           
  2097                           ;main.c: 301:     while(!RA2)
  2098  03B0  2C24               	goto	l1864
  2099  03B1                     l1830:
  2100                           
  2101                           ;main.c: 302:     {;main.c: 303:         s_currentCLK = RC4;
  2102  03B1  3000               	movlw	0
  2103  03B2  1A07               	btfsc	7,4	;volatile
  2104  03B3  3001               	movlw	1
  2105  03B4  00EF               	movwf	_s_currentCLK
  2106  03B5                     l1832:
  2107                           
  2108                           ;main.c: 304:         if(s_currentCLK != s_lastCLK && s_currentCLK == 1)
  2109  03B5  086F               	movf	_s_currentCLK,w
  2110  03B6  066E               	xorwf	_s_lastCLK,w
  2111  03B7  1903               	skipnz
  2112  03B8  2BBA               	goto	u1311
  2113  03B9  2BBB               	goto	u1310
  2114  03BA                     u1311:
  2115  03BA  2BF9               	goto	l170
  2116  03BB                     u1310:
  2117  03BB                     l1834:
  2118  03BB  036F               	decf	_s_currentCLK,w
  2119  03BC  1D03               	btfss	3,2
  2120  03BD  2BBF               	goto	u1321
  2121  03BE  2BC0               	goto	u1320
  2122  03BF                     u1321:
  2123  03BF  2BF9               	goto	l170
  2124  03C0                     u1320:
  2125  03C0                     l1836:
  2126                           
  2127                           ;main.c: 305:         {;main.c: 306:             if(RC5 != s_currentCLK)
  2128  03C0  3000               	movlw	0
  2129  03C1  1A87               	btfsc	7,5	;volatile
  2130  03C2  3001               	movlw	1
  2131  03C3  066F               	xorwf	_s_currentCLK,w
  2132  03C4  1903               	skipnz
  2133  03C5  2BC7               	goto	u1331
  2134  03C6  2BC8               	goto	u1330
  2135  03C7                     u1331:
  2136  03C7  2BDE               	goto	l1848
  2137  03C8                     u1330:
  2138  03C8                     l1838:
  2139                           
  2140                           ;main.c: 307:             {;main.c: 308:                 temp_decimal = temp_decimal + 5
      +                          ;
  2141  03C8  0823               	movf	_temp_decimal,w
  2142  03C9  3E05               	addlw	5
  2143  03CA  00E1               	movwf	??_set_temp
  2144  03CB  0861               	movf	??_set_temp,w
  2145  03CC  00A3               	movwf	_temp_decimal
  2146                           
  2147                           ;main.c: 309:                 if(temp_decimal == 10)
  2148  03CD  300A               	movlw	10
  2149  03CE  0623               	xorwf	_temp_decimal,w
  2150  03CF  1D03               	btfss	3,2
  2151  03D0  2BD2               	goto	u1341
  2152  03D1  2BD3               	goto	u1340
  2153  03D2                     u1341:
  2154  03D2  2BF9               	goto	l170
  2155  03D3                     u1340:
  2156  03D3                     l1840:
  2157                           
  2158                           ;main.c: 310:                 {;main.c: 311:                     temp_decimal = 0;
  2159  03D3  01A3               	clrf	_temp_decimal
  2160  03D4                     l1842:
  2161                           
  2162                           ;main.c: 312:                     if(temp_integer > 0)
  2163  03D4  0824               	movf	_temp_integer,w
  2164  03D5  1903               	btfsc	3,2
  2165  03D6  2BD8               	goto	u1351
  2166  03D7  2BD9               	goto	u1350
  2167  03D8                     u1351:
  2168  03D8  2BDC               	goto	l1846
  2169  03D9                     u1350:
  2170  03D9                     l1844:
  2171                           
  2172                           ;main.c: 313:                     {;main.c: 314:                         temp_integer -=
      +                           1;
  2173  03D9  3001               	movlw	1
  2174  03DA  02A4               	subwf	_temp_integer,f
  2175                           
  2176                           ;main.c: 315:                     }
  2177  03DB  2BF9               	goto	l170
  2178  03DC                     l1846:
  2179                           
  2180                           ;main.c: 317:                     {;main.c: 318:                         temp_integer = 
      +                          0;
  2181  03DC  01A4               	clrf	_temp_integer
  2182  03DD  2BF9               	goto	l170
  2183  03DE                     l1848:
  2184                           
  2185                           ;main.c: 323:             {;main.c: 324:                 temp_decimal = temp_decimal + 5
      +                          ;
  2186  03DE  0823               	movf	_temp_decimal,w
  2187  03DF  3E05               	addlw	5
  2188  03E0  00E1               	movwf	??_set_temp
  2189  03E1  0861               	movf	??_set_temp,w
  2190  03E2  00A3               	movwf	_temp_decimal
  2191                           
  2192                           ;main.c: 325:                 if(temp_decimal == 10)
  2193  03E3  300A               	movlw	10
  2194  03E4  0623               	xorwf	_temp_decimal,w
  2195  03E5  1D03               	btfss	3,2
  2196  03E6  2BE8               	goto	u1361
  2197  03E7  2BE9               	goto	u1360
  2198  03E8                     u1361:
  2199  03E8  2BF9               	goto	l170
  2200  03E9                     u1360:
  2201  03E9                     l1850:
  2202                           
  2203                           ;main.c: 326:                 {;main.c: 327:                     temp_decimal = 0;
  2204  03E9  01A3               	clrf	_temp_decimal
  2205  03EA                     l1852:
  2206                           
  2207                           ;main.c: 328:                     if(temp_integer < 100)
  2208  03EA  3064               	movlw	100
  2209  03EB  0224               	subwf	_temp_integer,w
  2210  03EC  1803               	skipnc
  2211  03ED  2BEF               	goto	u1371
  2212  03EE  2BF0               	goto	u1370
  2213  03EF                     u1371:
  2214  03EF  2BF5               	goto	l1856
  2215  03F0                     u1370:
  2216  03F0                     l1854:
  2217                           
  2218                           ;main.c: 329:                     {;main.c: 330:                         temp_integer +=
      +                           1;
  2219  03F0  3001               	movlw	1
  2220  03F1  00E1               	movwf	??_set_temp
  2221  03F2  0861               	movf	??_set_temp,w
  2222  03F3  07A4               	addwf	_temp_integer,f
  2223                           
  2224                           ;main.c: 331:                     }
  2225  03F4  2BF9               	goto	l170
  2226  03F5                     l1856:
  2227                           
  2228                           ;main.c: 333:                     {;main.c: 334:                         temp_integer = 
      +                          99;
  2229  03F5  3063               	movlw	99
  2230  03F6  00E1               	movwf	??_set_temp
  2231  03F7  0861               	movf	??_set_temp,w
  2232  03F8  00A4               	movwf	_temp_integer
  2233  03F9                     l170:	
  2234                           ;main.c: 338:         }
  2235                           
  2236                           
  2237                           ;main.c: 339:         s_lastCLK = s_currentCLK;
  2238  03F9  086F               	movf	_s_currentCLK,w
  2239  03FA  00E1               	movwf	??_set_temp
  2240  03FB  0861               	movf	??_set_temp,w
  2241  03FC  00EE               	movwf	_s_lastCLK
  2242  03FD                     l1858:
  2243                           
  2244                           ;main.c: 340:         sprintf(update_temp,"%d.%d",temp_integer,temp_decimal);
  2245  03FD  302D               	movlw	(low (_update_temp| 0))& (0+255)
  2246  03FE  00CD               	movwf	sprintf@sp
  2247  03FF  3000               	movlw	0
  2248  0400  00CE               	movwf	sprintf@sp+1
  2249  0401  301C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2250  0402  00E1               	movwf	??_set_temp
  2251  0403  0861               	movf	??_set_temp,w
  2252  0404  00CF               	movwf	sprintf@f
  2253  0405  0824               	movf	_temp_integer,w
  2254  0406  00E2               	movwf	??_set_temp+1
  2255  0407  01E3               	clrf	??_set_temp+2
  2256  0408  0862               	movf	??_set_temp+1,w
  2257  0409  00D0               	movwf	?_sprintf+3
  2258  040A  0863               	movf	??_set_temp+2,w
  2259  040B  00D1               	movwf	?_sprintf+4
  2260  040C  0823               	movf	_temp_decimal,w
  2261  040D  00E4               	movwf	??_set_temp+3
  2262  040E  01E5               	clrf	??_set_temp+4
  2263  040F  0864               	movf	??_set_temp+3,w
  2264  0410  00D2               	movwf	?_sprintf+5
  2265  0411  0865               	movf	??_set_temp+4,w
  2266  0412  00D3               	movwf	?_sprintf+6
  2267  0413  118A  2196  118A   	fcall	_sprintf
  2268  0416                     l1860:
  2269                           
  2270                           ;main.c: 341:         LCD_set_cursor(0,12);
  2271  0416  300C               	movlw	12
  2272  0417  1283               	bcf	3,5	;RP0=0, select bank0
  2273  0418  1303               	bcf	3,6	;RP1=0, select bank0
  2274  0419  00E1               	movwf	??_set_temp
  2275  041A  0861               	movf	??_set_temp,w
  2276  041B  00F4               	movwf	LCD_set_cursor@column
  2277  041C  3000               	movlw	0
  2278  041D  118A  2770  118A   	fcall	_LCD_set_cursor
  2279  0420                     l1862:
  2280                           
  2281                           ;main.c: 342:         LCD_send_string(update_temp);
  2282  0420  302D               	movlw	(low (_update_temp| 0))& (0+255)
  2283  0421  118A  278D  118A   	fcall	_LCD_send_string
  2284  0424                     l1864:
  2285                           
  2286                           ;main.c: 301:     while(!RA2)
  2287  0424  1283               	bcf	3,5	;RP0=0, select bank0
  2288  0425  1303               	bcf	3,6	;RP1=0, select bank0
  2289  0426  1D05               	btfss	5,2	;volatile
  2290  0427  2C29               	goto	u1381
  2291  0428  2C2A               	goto	u1380
  2292  0429                     u1381:
  2293  0429  2BB1               	goto	l1830
  2294  042A                     u1380:
  2295  042A                     l180:
  2296  042A  0008               	return
  2297  042B                     __end_of_set_temp:
  2298                           
  2299                           	psect	text3
  2300  04B0                     __ptext3:	
  2301 ;; *************** function _set_humi *****************
  2302 ;; Defined at:
  2303 ;;		line 346 in file "main.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;		None
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;		None
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  1    wreg      void 
  2310 ;; Registers used:
  2311 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2317 ;;      Params:         0       0       0       0
  2318 ;;      Locals:         0       0       0       0
  2319 ;;      Temps:          0       3       0       0
  2320 ;;      Totals:         0       3       0       0
  2321 ;;Total ram usage:        3 bytes
  2322 ;; Hardware stack levels used:    1
  2323 ;; Hardware stack levels required when called:    5
  2324 ;; This function calls:
  2325 ;;		_LCD_display_clear
  2326 ;;		_LCD_send_string
  2327 ;;		_LCD_set_cursor
  2328 ;;		_sprintf
  2329 ;; This function is called by:
  2330 ;;		_main
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334                           
  2335                           ;psect for function _set_humi
  2336  04B0                     _set_humi:
  2337  04B0                     l1866:	
  2338                           ;incstack = 0
  2339                           ; Regs used in _set_humi: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2340                           
  2341                           
  2342                           ;main.c: 348:     LCD_display_clear();
  2343  04B0  118A  27C0  118A   	fcall	_LCD_display_clear
  2344                           
  2345                           ;main.c: 350:     LCD_set_cursor(0,0);
  2346  04B3  01F4               	clrf	LCD_set_cursor@column
  2347  04B4  3000               	movlw	0
  2348  04B5  118A  2770  118A   	fcall	_LCD_set_cursor
  2349  04B8                     l1868:
  2350                           
  2351                           ;main.c: 351:     LCD_send_string(s_humi);
  2352  04B8  30C6               	movlw	(low (_s_humi| 0))& (0+255)
  2353  04B9  118A  278D  118A   	fcall	_LCD_send_string
  2354  04BC                     l1870:
  2355                           
  2356                           ;main.c: 353:     LCD_set_cursor(0,13);
  2357  04BC  300D               	movlw	13
  2358  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  2359  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  2360  04BF  00E1               	movwf	??_set_humi
  2361  04C0  0861               	movf	??_set_humi,w
  2362  04C1  00F4               	movwf	LCD_set_cursor@column
  2363  04C2  3000               	movlw	0
  2364  04C3  118A  2770  118A   	fcall	_LCD_set_cursor
  2365                           
  2366                           ;main.c: 354:     LCD_send_string(update_humi);
  2367  04C6  3041               	movlw	(low (_update_humi| 0))& (0+255)
  2368  04C7  118A  278D  118A   	fcall	_LCD_send_string
  2369                           
  2370                           ;main.c: 356:     while(!RA2)
  2371  04CA  2D1F               	goto	l1898
  2372  04CB                     l1872:
  2373                           
  2374                           ;main.c: 357:     {;main.c: 358:         s_currentCLK = RC4;
  2375  04CB  3000               	movlw	0
  2376  04CC  1A07               	btfsc	7,4	;volatile
  2377  04CD  3001               	movlw	1
  2378  04CE  00EF               	movwf	_s_currentCLK
  2379  04CF                     l1874:
  2380                           
  2381                           ;main.c: 359:         if(s_currentCLK != s_lastCLK && s_currentCLK == 1)
  2382  04CF  086F               	movf	_s_currentCLK,w
  2383  04D0  066E               	xorwf	_s_lastCLK,w
  2384  04D1  1903               	skipnz
  2385  04D2  2CD4               	goto	u1391
  2386  04D3  2CD5               	goto	u1390
  2387  04D4                     u1391:
  2388  04D4  2CFB               	goto	l185
  2389  04D5                     u1390:
  2390  04D5                     l1876:
  2391  04D5  036F               	decf	_s_currentCLK,w
  2392  04D6  1D03               	btfss	3,2
  2393  04D7  2CD9               	goto	u1401
  2394  04D8  2CDA               	goto	u1400
  2395  04D9                     u1401:
  2396  04D9  2CFB               	goto	l185
  2397  04DA                     u1400:
  2398  04DA                     l1878:
  2399                           
  2400                           ;main.c: 360:         {;main.c: 361:             if(RC5 != s_currentCLK)
  2401  04DA  3000               	movlw	0
  2402  04DB  1A87               	btfsc	7,5	;volatile
  2403  04DC  3001               	movlw	1
  2404  04DD  066F               	xorwf	_s_currentCLK,w
  2405  04DE  1903               	skipnz
  2406  04DF  2CE1               	goto	u1411
  2407  04E0  2CE2               	goto	u1410
  2408  04E1                     u1411:
  2409  04E1  2CEC               	goto	l1886
  2410  04E2                     u1410:
  2411  04E2                     l1880:
  2412                           
  2413                           ;main.c: 362:             {;main.c: 363:                 if(humi_integer > 0)
  2414  04E2  0822               	movf	_humi_integer,w
  2415  04E3  1903               	btfsc	3,2
  2416  04E4  2CE6               	goto	u1421
  2417  04E5  2CE7               	goto	u1420
  2418  04E6                     u1421:
  2419  04E6  2CEA               	goto	l1884
  2420  04E7                     u1420:
  2421  04E7                     l1882:
  2422                           
  2423                           ;main.c: 364:                 {;main.c: 365:                     humi_integer -= 1;
  2424  04E7  3001               	movlw	1
  2425  04E8  02A2               	subwf	_humi_integer,f
  2426                           
  2427                           ;main.c: 366:                 }
  2428  04E9  2CFB               	goto	l185
  2429  04EA                     l1884:
  2430                           
  2431                           ;main.c: 368:                 {;main.c: 369:                     humi_integer = 0;
  2432  04EA  01A2               	clrf	_humi_integer
  2433  04EB  2CFB               	goto	l185
  2434  04EC                     l1886:
  2435                           
  2436                           ;main.c: 373:             {;main.c: 374:                 if(humi_integer < 100)
  2437  04EC  3064               	movlw	100
  2438  04ED  0222               	subwf	_humi_integer,w
  2439  04EE  1803               	skipnc
  2440  04EF  2CF1               	goto	u1431
  2441  04F0  2CF2               	goto	u1430
  2442  04F1                     u1431:
  2443  04F1  2CF7               	goto	l1890
  2444  04F2                     u1430:
  2445  04F2                     l1888:
  2446                           
  2447                           ;main.c: 375:                 {;main.c: 376:                     humi_integer += 1;
  2448  04F2  3001               	movlw	1
  2449  04F3  00E1               	movwf	??_set_humi
  2450  04F4  0861               	movf	??_set_humi,w
  2451  04F5  07A2               	addwf	_humi_integer,f
  2452                           
  2453                           ;main.c: 377:                 }
  2454  04F6  2CFB               	goto	l185
  2455  04F7                     l1890:
  2456                           
  2457                           ;main.c: 379:                 {;main.c: 380:                     humi_integer = 99;
  2458  04F7  3063               	movlw	99
  2459  04F8  00E1               	movwf	??_set_humi
  2460  04F9  0861               	movf	??_set_humi,w
  2461  04FA  00A2               	movwf	_humi_integer
  2462  04FB                     l185:	
  2463                           ;main.c: 383:         }
  2464                           
  2465                           
  2466                           ;main.c: 384:         s_lastCLK = s_currentCLK;
  2467  04FB  086F               	movf	_s_currentCLK,w
  2468  04FC  00E1               	movwf	??_set_humi
  2469  04FD  0861               	movf	??_set_humi,w
  2470  04FE  00EE               	movwf	_s_lastCLK
  2471  04FF                     l1892:
  2472                           
  2473                           ;main.c: 385:         sprintf(update_humi,"%d%%",humi_integer);
  2474  04FF  3041               	movlw	(low (_update_humi| 0))& (0+255)
  2475  0500  00CD               	movwf	sprintf@sp
  2476  0501  3000               	movlw	0
  2477  0502  00CE               	movwf	sprintf@sp+1
  2478  0503  3022               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2479  0504  00E1               	movwf	??_set_humi
  2480  0505  0861               	movf	??_set_humi,w
  2481  0506  00CF               	movwf	sprintf@f
  2482  0507  0822               	movf	_humi_integer,w
  2483  0508  00E2               	movwf	??_set_humi+1
  2484  0509  01E3               	clrf	??_set_humi+2
  2485  050A  0862               	movf	??_set_humi+1,w
  2486  050B  00D0               	movwf	?_sprintf+3
  2487  050C  0863               	movf	??_set_humi+2,w
  2488  050D  00D1               	movwf	?_sprintf+4
  2489  050E  118A  2196  118A   	fcall	_sprintf
  2490  0511                     l1894:
  2491                           
  2492                           ;main.c: 386:         LCD_set_cursor(0,13);
  2493  0511  300D               	movlw	13
  2494  0512  1283               	bcf	3,5	;RP0=0, select bank0
  2495  0513  1303               	bcf	3,6	;RP1=0, select bank0
  2496  0514  00E1               	movwf	??_set_humi
  2497  0515  0861               	movf	??_set_humi,w
  2498  0516  00F4               	movwf	LCD_set_cursor@column
  2499  0517  3000               	movlw	0
  2500  0518  118A  2770  118A   	fcall	_LCD_set_cursor
  2501  051B                     l1896:
  2502                           
  2503                           ;main.c: 387:         LCD_send_string(update_humi);
  2504  051B  3041               	movlw	(low (_update_humi| 0))& (0+255)
  2505  051C  118A  278D  118A   	fcall	_LCD_send_string
  2506  051F                     l1898:
  2507                           
  2508                           ;main.c: 356:     while(!RA2)
  2509  051F  1283               	bcf	3,5	;RP0=0, select bank0
  2510  0520  1303               	bcf	3,6	;RP1=0, select bank0
  2511  0521  1D05               	btfss	5,2	;volatile
  2512  0522  2D24               	goto	u1441
  2513  0523  2D25               	goto	u1440
  2514  0524                     u1441:
  2515  0524  2CCB               	goto	l1872
  2516  0525                     u1440:
  2517  0525                     l193:
  2518  0525  0008               	return
  2519  0526                     __end_of_set_humi:
  2520                           
  2521                           	psect	text4
  2522  0196                     __ptext4:	
  2523 ;; *************** function _sprintf *****************
  2524 ;; Defined at:
  2525 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;  sp              2    4[BANK0 ] PTR unsigned char 
  2528 ;;		 -> RAM(512), time(8), update_humi(4), update_temp(5), 
  2529 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  2530 ;;		 -> STR_8(10), STR_7(3), STR_6(3), STR_5(10), 
  2531 ;;		 -> STR_4(10), STR_2(5), STR_1(6), 
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;  tmpval          4    0        struct .
  2534 ;;  val             2   21[BANK0 ] unsigned int 
  2535 ;;  cp              2   19[BANK0 ] PTR const unsigned char 
  2536 ;;		 -> STR_9(7), ?_sprintf(2), STR_3(3), 
  2537 ;;  len             2    0        unsigned int 
  2538 ;;  c               1   23[BANK0 ] unsigned char 
  2539 ;;  ap              1   18[BANK0 ] PTR void [1]
  2540 ;;		 -> ?_sprintf(2), 
  2541 ;;  prec            1   17[BANK0 ] char 
  2542 ;;  flag            1   16[BANK0 ] unsigned char 
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  2    4[BANK0 ] int 
  2545 ;; Registers used:
  2546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2552 ;;      Params:         0       9       0       0
  2553 ;;      Locals:         0       8       0       0
  2554 ;;      Temps:          0       3       0       0
  2555 ;;      Totals:         0      20       0       0
  2556 ;;Total ram usage:       20 bytes
  2557 ;; Hardware stack levels used:    1
  2558 ;; Hardware stack levels required when called:    2
  2559 ;; This function calls:
  2560 ;;		___lwdiv
  2561 ;;		___lwmod
  2562 ;; This function is called by:
  2563 ;;		_set_temp
  2564 ;;		_set_humi
  2565 ;;		_set_time
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           
  2570                           ;psect for function _sprintf
  2571  0196                     _sprintf:
  2572  0196                     l1638:	
  2573                           ;incstack = 0
  2574                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2575                           
  2576                           
  2577                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2578  0196  3050               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
  2579  0197  1283               	bcf	3,5	;RP0=0, select bank0
  2580  0198  1303               	bcf	3,6	;RP1=0, select bank0
  2581  0199  00D6               	movwf	??_sprintf
  2582  019A  0856               	movf	??_sprintf,w
  2583  019B  00DB               	movwf	sprintf@ap
  2584                           
  2585                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2586  019C  2AAA               	goto	l1708
  2587  019D                     l1640:
  2588                           
  2589                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2590  019D  3025               	movlw	37
  2591  019E  0660               	xorwf	sprintf@c,w
  2592  019F  1903               	btfsc	3,2
  2593  01A0  29A2               	goto	u1151
  2594  01A1  29A3               	goto	u1150
  2595  01A2                     u1151:
  2596  01A2  29B3               	goto	l1646
  2597  01A3                     u1150:
  2598  01A3                     l1642:
  2599                           
  2600                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2601  01A3  0860               	movf	sprintf@c,w
  2602  01A4  00D6               	movwf	??_sprintf
  2603  01A5  084D               	movf	sprintf@sp,w
  2604  01A6  0084               	movwf	4
  2605  01A7  1783               	bsf	3,7
  2606  01A8  1C4E               	btfss	sprintf@sp+1,0
  2607  01A9  1383               	bcf	3,7
  2608  01AA  0856               	movf	??_sprintf,w
  2609  01AB  0080               	movwf	0
  2610  01AC                     l1644:
  2611  01AC  3001               	movlw	1
  2612  01AD  07CD               	addwf	sprintf@sp,f
  2613  01AE  1803               	skipnc
  2614  01AF  0ACE               	incf	sprintf@sp+1,f
  2615  01B0  3000               	movlw	0
  2616  01B1  07CE               	addwf	sprintf@sp+1,f
  2617                           
  2618                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 559:    continue;
  2619  01B2  2AAA               	goto	l1708
  2620  01B3                     l1646:
  2621                           
  2622                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2623  01B3  01D9               	clrf	sprintf@flag
  2624                           
  2625                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2626  01B4  29F5               	goto	l1668
  2627  01B5                     l1648:
  2628                           
  2629                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 760:     cp = (*(
      +                          const char * *)__va_arg((*(const char * **)ap), (const char *)0));
  2630  01B5  085B               	movf	sprintf@ap,w
  2631  01B6  0084               	movwf	4
  2632  01B7  1383               	bcf	3,7	;select IRP bank0
  2633  01B8  0800               	movf	0,w
  2634  01B9  00DC               	movwf	sprintf@cp
  2635  01BA  0A84               	incf	4,f
  2636  01BB  0800               	movf	0,w
  2637  01BC  0384               	decf	4,f
  2638  01BD  00DD               	movwf	sprintf@cp+1
  2639  01BE                     l1650:
  2640  01BE  3002               	movlw	2
  2641  01BF  00D6               	movwf	??_sprintf
  2642  01C0  0856               	movf	??_sprintf,w
  2643  01C1  07DB               	addwf	sprintf@ap,f
  2644  01C2                     l1652:
  2645                           
  2646                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 766:    if(!cp)
  2647  01C2  085C               	movf	sprintf@cp,w
  2648  01C3  045D               	iorwf	sprintf@cp+1,w
  2649  01C4  1D03               	btfss	3,2
  2650  01C5  29C7               	goto	u1161
  2651  01C6  29C8               	goto	u1160
  2652  01C7                     u1161:
  2653  01C7  29E8               	goto	l387
  2654  01C8                     u1160:
  2655  01C8                     l1654:
  2656                           
  2657                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 767:     cp = "(n
      +                          ull)";
  2658  01C8  3015               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2659  01C9  00DC               	movwf	sprintf@cp
  2660  01CA  3080               	movlw	128
  2661  01CB  00DD               	movwf	sprintf@cp+1
  2662  01CC  29E8               	goto	l387
  2663  01CD                     l1656:
  2664                           
  2665                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 804:     ((*sp++ 
      +                          = (*cp++)));
  2666  01CD  085D               	movf	sprintf@cp+1,w
  2667  01CE  00FF               	movwf	btemp+1
  2668  01CF  085C               	movf	sprintf@cp,w
  2669  01D0  0084               	movwf	4
  2670  01D1  118A  2600  118A   	fcall	stringtab
  2671  01D4  00D6               	movwf	??_sprintf
  2672  01D5  084D               	movf	sprintf@sp,w
  2673  01D6  0084               	movwf	4
  2674  01D7  1783               	bsf	3,7
  2675  01D8  1C4E               	btfss	sprintf@sp+1,0
  2676  01D9  1383               	bcf	3,7
  2677  01DA  0856               	movf	??_sprintf,w
  2678  01DB  0080               	movwf	0
  2679  01DC                     l1658:
  2680  01DC  3001               	movlw	1
  2681  01DD  07DC               	addwf	sprintf@cp,f
  2682  01DE  1803               	skipnc
  2683  01DF  0ADD               	incf	sprintf@cp+1,f
  2684  01E0  3000               	movlw	0
  2685  01E1  07DD               	addwf	sprintf@cp+1,f
  2686  01E2                     l1660:
  2687  01E2  3001               	movlw	1
  2688  01E3  07CD               	addwf	sprintf@sp,f
  2689  01E4  1803               	skipnc
  2690  01E5  0ACE               	incf	sprintf@sp+1,f
  2691  01E6  3000               	movlw	0
  2692  01E7  07CE               	addwf	sprintf@sp+1,f
  2693  01E8                     l387:
  2694                           
  2695                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 803:    while(*cp
      +                          )
  2696  01E8  085D               	movf	sprintf@cp+1,w
  2697  01E9  00FF               	movwf	btemp+1
  2698  01EA  085C               	movf	sprintf@cp,w
  2699  01EB  0084               	movwf	4
  2700  01EC  118A  2600  118A   	fcall	stringtab
  2701  01EF  3A00               	xorlw	0
  2702  01F0  1D03               	skipz
  2703  01F1  29F3               	goto	u1171
  2704  01F2  29F4               	goto	u1170
  2705  01F3                     u1171:
  2706  01F3  29CD               	goto	l1656
  2707  01F4                     u1170:
  2708  01F4  2AAA               	goto	l1708
  2709  01F5                     l1668:
  2710  01F5  3001               	movlw	1
  2711  01F6  07CF               	addwf	sprintf@f,f
  2712  01F7  30FF               	movlw	-1
  2713  01F8  074F               	addwf	sprintf@f,w
  2714  01F9  0084               	movwf	4
  2715  01FA  118A  260A  118A   	fcall	stringdir
  2716  01FD  00E0               	movwf	sprintf@c
  2717  01FE  00D6               	movwf	??_sprintf
  2718  01FF  01D7               	clrf	??_sprintf+1
  2719                           
  2720                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2721                           ; Switch size 1, requested type "simple"
  2722                           ; Number of cases is 1, Range of values is 0 to 0
  2723                           ; switch strategies available:
  2724                           ; Name         Instructions Cycles
  2725                           ; simple_byte            4     3 (average)
  2726                           ; direct_byte            9     7 (fixed)
  2727                           ; jumptable            260     6 (fixed)
  2728                           ;	Chosen strategy is simple_byte
  2729  0200  0857               	movf	??_sprintf+1,w
  2730  0201  3A00               	xorlw	0	; case 0
  2731  0202  1903               	skipnz
  2732  0203  2A05               	goto	l2126
  2733  0204  29A3               	goto	l1642
  2734  0205                     l2126:
  2735                           
  2736                           ; Switch size 1, requested type "simple"
  2737                           ; Number of cases is 4, Range of values is 0 to 115
  2738                           ; switch strategies available:
  2739                           ; Name         Instructions Cycles
  2740                           ; simple_byte           13     7 (average)
  2741                           ; direct_byte          239     7 (fixed)
  2742                           ; jumptable            260     6 (fixed)
  2743                           ;	Chosen strategy is simple_byte
  2744  0205  0856               	movf	??_sprintf,w
  2745  0206  3A00               	xorlw	0	; case 0
  2746  0207  1903               	skipnz
  2747  0208  2ABA               	goto	l1710
  2748  0209  3A64               	xorlw	100	; case 100
  2749  020A  1903               	skipnz
  2750  020B  2A13               	goto	l1670
  2751  020C  3A0D               	xorlw	13	; case 105
  2752  020D  1903               	skipnz
  2753  020E  2A13               	goto	l1670
  2754  020F  3A1A               	xorlw	26	; case 115
  2755  0210  1903               	skipnz
  2756  0211  29B5               	goto	l1648
  2757  0212  29A3               	goto	l1642
  2758  0213                     l1670:
  2759                           
  2760                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2761  0213  085B               	movf	sprintf@ap,w
  2762  0214  0084               	movwf	4
  2763  0215  1383               	bcf	3,7	;select IRP bank0
  2764  0216  0800               	movf	0,w
  2765  0217  00DE               	movwf	sprintf@val
  2766  0218  0A84               	incf	4,f
  2767  0219  0800               	movf	0,w
  2768  021A  00DF               	movwf	sprintf@val+1
  2769  021B                     l1672:
  2770  021B  3002               	movlw	2
  2771  021C  00D6               	movwf	??_sprintf
  2772  021D  0856               	movf	??_sprintf,w
  2773  021E  07DB               	addwf	sprintf@ap,f
  2774  021F                     l1674:
  2775                           
  2776                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2777  021F  1FDF               	btfss	sprintf@val+1,7
  2778  0220  2A22               	goto	u1181
  2779  0221  2A23               	goto	u1180
  2780  0222                     u1181:
  2781  0222  2A2C               	goto	l1680
  2782  0223                     u1180:
  2783  0223                     l1676:
  2784                           
  2785                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2786  0223  3003               	movlw	3
  2787  0224  00D6               	movwf	??_sprintf
  2788  0225  0856               	movf	??_sprintf,w
  2789  0226  04D9               	iorwf	sprintf@flag,f
  2790  0227                     l1678:
  2791                           
  2792                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2793  0227  09DE               	comf	sprintf@val,f
  2794  0228  09DF               	comf	sprintf@val+1,f
  2795  0229  0ADE               	incf	sprintf@val,f
  2796  022A  1903               	skipnz
  2797  022B  0ADF               	incf	sprintf@val+1,f
  2798  022C                     l1680:
  2799                           
  2800                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2801  022C  01E0               	clrf	sprintf@c
  2802  022D  0AE0               	incf	sprintf@c,f
  2803  022E                     l1686:
  2804                           
  2805                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2806  022E  0860               	movf	sprintf@c,w
  2807  022F  00D6               	movwf	??_sprintf
  2808  0230  0756               	addwf	??_sprintf,w
  2809  0231  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2810  0232  0084               	movwf	4
  2811  0233  118A  260A  118A   	fcall	stringdir
  2812  0236  00D7               	movwf	??_sprintf+1
  2813  0237  118A  260A  118A   	fcall	stringdir
  2814  023A  00D8               	movwf	??_sprintf+2
  2815  023B  0858               	movf	??_sprintf+2,w
  2816  023C  025F               	subwf	sprintf@val+1,w
  2817  023D  1D03               	skipz
  2818  023E  2A41               	goto	u1195
  2819  023F  0857               	movf	??_sprintf+1,w
  2820  0240  025E               	subwf	sprintf@val,w
  2821  0241                     u1195:
  2822  0241  1803               	skipnc
  2823  0242  2A44               	goto	u1191
  2824  0243  2A45               	goto	u1190
  2825  0244                     u1191:
  2826  0244  2A46               	goto	l1690
  2827  0245                     u1190:
  2828  0245  2A50               	goto	l1692
  2829  0246                     l1690:
  2830  0246  3001               	movlw	1
  2831  0247  00D6               	movwf	??_sprintf
  2832  0248  0856               	movf	??_sprintf,w
  2833  0249  07E0               	addwf	sprintf@c,f
  2834  024A  3005               	movlw	5
  2835  024B  0660               	xorwf	sprintf@c,w
  2836  024C  1D03               	btfss	3,2
  2837  024D  2A4F               	goto	u1201
  2838  024E  2A50               	goto	u1200
  2839  024F                     u1201:
  2840  024F  2A2E               	goto	l1686
  2841  0250                     u1200:
  2842  0250                     l1692:
  2843                           
  2844                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2845  0250  0859               	movf	sprintf@flag,w
  2846  0251  3903               	andlw	3
  2847  0252  1903               	btfsc	3,2
  2848  0253  2A55               	goto	u1211
  2849  0254  2A56               	goto	u1210
  2850  0255                     u1211:
  2851  0255  2A65               	goto	l1698
  2852  0256                     u1210:
  2853  0256                     l1694:
  2854                           
  2855                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2856  0256  302D               	movlw	45
  2857  0257  00D6               	movwf	??_sprintf
  2858  0258  084D               	movf	sprintf@sp,w
  2859  0259  0084               	movwf	4
  2860  025A  1783               	bsf	3,7
  2861  025B  1C4E               	btfss	sprintf@sp+1,0
  2862  025C  1383               	bcf	3,7
  2863  025D  0856               	movf	??_sprintf,w
  2864  025E  0080               	movwf	0
  2865  025F                     l1696:
  2866  025F  3001               	movlw	1
  2867  0260  07CD               	addwf	sprintf@sp,f
  2868  0261  1803               	skipnc
  2869  0262  0ACE               	incf	sprintf@sp+1,f
  2870  0263  3000               	movlw	0
  2871  0264  07CE               	addwf	sprintf@sp+1,f
  2872  0265                     l1698:
  2873                           
  2874                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2875  0265  0860               	movf	sprintf@c,w
  2876  0266  00D6               	movwf	??_sprintf
  2877  0267  0856               	movf	??_sprintf,w
  2878  0268  00DA               	movwf	sprintf@prec
  2879                           
  2880                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2881  0269  2AA1               	goto	l1706
  2882  026A                     l1700:
  2883                           
  2884                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2885  026A  300A               	movlw	10
  2886  026B  00C9               	movwf	___lwmod@divisor
  2887  026C  3000               	movlw	0
  2888  026D  00CA               	movwf	___lwmod@divisor+1
  2889  026E  085A               	movf	sprintf@prec,w
  2890  026F  00D6               	movwf	??_sprintf
  2891  0270  0756               	addwf	??_sprintf,w
  2892  0271  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2893  0272  0084               	movwf	4
  2894  0273  118A  260A  118A   	fcall	stringdir
  2895  0276  00F2               	movwf	___lwdiv@divisor
  2896  0277  118A  260A  118A   	fcall	stringdir
  2897  027A  00F3               	movwf	___lwdiv@divisor+1
  2898  027B  085F               	movf	sprintf@val+1,w
  2899  027C  00F5               	movwf	___lwdiv@dividend+1
  2900  027D  085E               	movf	sprintf@val,w
  2901  027E  00F4               	movwf	___lwdiv@dividend
  2902  027F  118A  256D  118A   	fcall	___lwdiv
  2903  0282  0873               	movf	?___lwdiv+1,w
  2904  0283  1283               	bcf	3,5	;RP0=0, select bank0
  2905  0284  1303               	bcf	3,6	;RP1=0, select bank0
  2906  0285  00CC               	movwf	___lwmod@dividend+1
  2907  0286  0872               	movf	?___lwdiv,w
  2908  0287  00CB               	movwf	___lwmod@dividend
  2909  0288  118A  263C  118A   	fcall	___lwmod
  2910  028B  1283               	bcf	3,5	;RP0=0, select bank0
  2911  028C  1303               	bcf	3,6	;RP1=0, select bank0
  2912  028D  0849               	movf	?___lwmod,w
  2913  028E  3E30               	addlw	48
  2914  028F  00D7               	movwf	??_sprintf+1
  2915  0290  0857               	movf	??_sprintf+1,w
  2916  0291  00E0               	movwf	sprintf@c
  2917  0292                     l1702:
  2918                           
  2919                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2920  0292  0860               	movf	sprintf@c,w
  2921  0293  00D6               	movwf	??_sprintf
  2922  0294  084D               	movf	sprintf@sp,w
  2923  0295  0084               	movwf	4
  2924  0296  1783               	bsf	3,7
  2925  0297  1C4E               	btfss	sprintf@sp+1,0
  2926  0298  1383               	bcf	3,7
  2927  0299  0856               	movf	??_sprintf,w
  2928  029A  0080               	movwf	0
  2929  029B                     l1704:
  2930  029B  3001               	movlw	1
  2931  029C  07CD               	addwf	sprintf@sp,f
  2932  029D  1803               	skipnc
  2933  029E  0ACE               	incf	sprintf@sp+1,f
  2934  029F  3000               	movlw	0
  2935  02A0  07CE               	addwf	sprintf@sp+1,f
  2936  02A1                     l1706:
  2937                           
  2938                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2939  02A1  30FF               	movlw	255
  2940  02A2  00D6               	movwf	??_sprintf
  2941  02A3  0856               	movf	??_sprintf,w
  2942  02A4  07DA               	addwf	sprintf@prec,f
  2943  02A5  0A5A               	incf	sprintf@prec,w
  2944  02A6  1D03               	btfss	3,2
  2945  02A7  2AA9               	goto	u1221
  2946  02A8  2AAA               	goto	u1220
  2947  02A9                     u1221:
  2948  02A9  2A6A               	goto	l1700
  2949  02AA                     u1220:
  2950  02AA                     l1708:
  2951                           
  2952                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2953  02AA  3001               	movlw	1
  2954  02AB  07CF               	addwf	sprintf@f,f
  2955  02AC  30FF               	movlw	-1
  2956  02AD  074F               	addwf	sprintf@f,w
  2957  02AE  0084               	movwf	4
  2958  02AF  118A  260A  118A   	fcall	stringdir
  2959  02B2  00D6               	movwf	??_sprintf
  2960  02B3  0856               	movf	??_sprintf,w
  2961  02B4  00E0               	movwf	sprintf@c
  2962  02B5  0860               	movf	sprintf@c,w
  2963  02B6  1D03               	btfss	3,2
  2964  02B7  2AB9               	goto	u1231
  2965  02B8  2ABA               	goto	u1230
  2966  02B9                     u1231:
  2967  02B9  299D               	goto	l1640
  2968  02BA                     u1230:
  2969  02BA                     l1710:
  2970                           
  2971                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2972  02BA  084D               	movf	sprintf@sp,w
  2973  02BB  0084               	movwf	4
  2974  02BC  1783               	bsf	3,7
  2975  02BD  1C4E               	btfss	sprintf@sp+1,0
  2976  02BE  1383               	bcf	3,7
  2977  02BF  0180               	clrf	0
  2978  02C0                     l400:
  2979  02C0  0008               	return
  2980  02C1                     __end_of_sprintf:
  2981                           
  2982                           	psect	text5
  2983  063C                     __ptext5:	
  2984 ;; *************** function ___lwmod *****************
  2985 ;; Defined at:
  2986 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;  divisor         2    0[BANK0 ] unsigned int 
  2989 ;;  dividend        2    2[BANK0 ] unsigned int 
  2990 ;; Auto vars:     Size  Location     Type
  2991 ;;  counter         1   11[COMMON] unsigned char 
  2992 ;; Return value:  Size  Location     Type
  2993 ;;                  2    0[BANK0 ] unsigned int 
  2994 ;; Registers used:
  2995 ;;		wreg, status,2, status,0
  2996 ;; Tracked objects:
  2997 ;;		On entry : 0/0
  2998 ;;		On exit  : 0/0
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3001 ;;      Params:         0       4       0       0
  3002 ;;      Locals:         1       0       0       0
  3003 ;;      Temps:          1       0       0       0
  3004 ;;      Totals:         2       4       0       0
  3005 ;;Total ram usage:        6 bytes
  3006 ;; Hardware stack levels used:    1
  3007 ;; Hardware stack levels required when called:    1
  3008 ;; This function calls:
  3009 ;;		Nothing
  3010 ;; This function is called by:
  3011 ;;		_sprintf
  3012 ;; This function uses a non-reentrant model
  3013 ;;
  3014                           
  3015                           
  3016                           ;psect for function ___lwmod
  3017  063C                     ___lwmod:
  3018  063C                     l1592:	
  3019                           ;incstack = 0
  3020                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3021                           
  3022  063C  1283               	bcf	3,5	;RP0=0, select bank0
  3023  063D  1303               	bcf	3,6	;RP1=0, select bank0
  3024  063E  0849               	movf	___lwmod@divisor,w
  3025  063F  044A               	iorwf	___lwmod@divisor+1,w
  3026  0640  1903               	btfsc	3,2
  3027  0641  2E43               	goto	u1071
  3028  0642  2E44               	goto	u1070
  3029  0643                     u1071:
  3030  0643  2E73               	goto	l1610
  3031  0644                     u1070:
  3032  0644                     l1594:
  3033  0644  01FB               	clrf	___lwmod@counter
  3034  0645  0AFB               	incf	___lwmod@counter,f
  3035  0646  2E52               	goto	l1600
  3036  0647                     l1596:
  3037  0647  3001               	movlw	1
  3038  0648                     u1085:
  3039  0648  1003               	clrc
  3040  0649  0DC9               	rlf	___lwmod@divisor,f
  3041  064A  0DCA               	rlf	___lwmod@divisor+1,f
  3042  064B  3EFF               	addlw	-1
  3043  064C  1D03               	skipz
  3044  064D  2E48               	goto	u1085
  3045  064E                     l1598:
  3046  064E  3001               	movlw	1
  3047  064F  00FA               	movwf	??___lwmod
  3048  0650  087A               	movf	??___lwmod,w
  3049  0651  07FB               	addwf	___lwmod@counter,f
  3050  0652                     l1600:
  3051  0652  1FCA               	btfss	___lwmod@divisor+1,7
  3052  0653  2E55               	goto	u1091
  3053  0654  2E56               	goto	u1090
  3054  0655                     u1091:
  3055  0655  2E47               	goto	l1596
  3056  0656                     u1090:
  3057  0656                     l1602:
  3058  0656  084A               	movf	___lwmod@divisor+1,w
  3059  0657  024C               	subwf	___lwmod@dividend+1,w
  3060  0658  1D03               	skipz
  3061  0659  2E5C               	goto	u1105
  3062  065A  0849               	movf	___lwmod@divisor,w
  3063  065B  024B               	subwf	___lwmod@dividend,w
  3064  065C                     u1105:
  3065  065C  1C03               	skipc
  3066  065D  2E5F               	goto	u1101
  3067  065E  2E60               	goto	u1100
  3068  065F                     u1101:
  3069  065F  2E66               	goto	l1606
  3070  0660                     u1100:
  3071  0660                     l1604:
  3072  0660  0849               	movf	___lwmod@divisor,w
  3073  0661  02CB               	subwf	___lwmod@dividend,f
  3074  0662  084A               	movf	___lwmod@divisor+1,w
  3075  0663  1C03               	skipc
  3076  0664  03CC               	decf	___lwmod@dividend+1,f
  3077  0665  02CC               	subwf	___lwmod@dividend+1,f
  3078  0666                     l1606:
  3079  0666  3001               	movlw	1
  3080  0667                     u1115:
  3081  0667  1003               	clrc
  3082  0668  0CCA               	rrf	___lwmod@divisor+1,f
  3083  0669  0CC9               	rrf	___lwmod@divisor,f
  3084  066A  3EFF               	addlw	-1
  3085  066B  1D03               	skipz
  3086  066C  2E67               	goto	u1115
  3087  066D                     l1608:
  3088  066D  3001               	movlw	1
  3089  066E  02FB               	subwf	___lwmod@counter,f
  3090  066F  1D03               	btfss	3,2
  3091  0670  2E72               	goto	u1121
  3092  0671  2E73               	goto	u1120
  3093  0672                     u1121:
  3094  0672  2E56               	goto	l1602
  3095  0673                     u1120:
  3096  0673                     l1610:
  3097  0673  084C               	movf	___lwmod@dividend+1,w
  3098  0674  00CA               	movwf	?___lwmod+1
  3099  0675  084B               	movf	___lwmod@dividend,w
  3100  0676  00C9               	movwf	?___lwmod
  3101  0677                     l686:
  3102  0677  0008               	return
  3103  0678                     __end_of___lwmod:
  3104                           
  3105                           	psect	text6
  3106  056D                     __ptext6:	
  3107 ;; *************** function ___lwdiv *****************
  3108 ;; Defined at:
  3109 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;  divisor         2    2[COMMON] unsigned int 
  3112 ;;  dividend        2    4[COMMON] unsigned int 
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;  quotient        2    7[COMMON] unsigned int 
  3115 ;;  counter         1    9[COMMON] unsigned char 
  3116 ;; Return value:  Size  Location     Type
  3117 ;;                  2    2[COMMON] unsigned int 
  3118 ;; Registers used:
  3119 ;;		wreg, status,2, status,0
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3125 ;;      Params:         4       0       0       0
  3126 ;;      Locals:         3       0       0       0
  3127 ;;      Temps:          1       0       0       0
  3128 ;;      Totals:         8       0       0       0
  3129 ;;Total ram usage:        8 bytes
  3130 ;; Hardware stack levels used:    1
  3131 ;; Hardware stack levels required when called:    1
  3132 ;; This function calls:
  3133 ;;		Nothing
  3134 ;; This function is called by:
  3135 ;;		_sprintf
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           
  3140                           ;psect for function ___lwdiv
  3141  056D                     ___lwdiv:
  3142  056D                     l1566:	
  3143                           ;incstack = 0
  3144                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3145                           
  3146  056D  01F7               	clrf	___lwdiv@quotient
  3147  056E  01F8               	clrf	___lwdiv@quotient+1
  3148  056F                     l1568:
  3149  056F  0872               	movf	___lwdiv@divisor,w
  3150  0570  0473               	iorwf	___lwdiv@divisor+1,w
  3151  0571  1903               	btfsc	3,2
  3152  0572  2D74               	goto	u1001
  3153  0573  2D75               	goto	u1000
  3154  0574                     u1001:
  3155  0574  2DAC               	goto	l1588
  3156  0575                     u1000:
  3157  0575                     l1570:
  3158  0575  01F9               	clrf	___lwdiv@counter
  3159  0576  0AF9               	incf	___lwdiv@counter,f
  3160  0577  2D83               	goto	l1576
  3161  0578                     l1572:
  3162  0578  3001               	movlw	1
  3163  0579                     u1015:
  3164  0579  1003               	clrc
  3165  057A  0DF2               	rlf	___lwdiv@divisor,f
  3166  057B  0DF3               	rlf	___lwdiv@divisor+1,f
  3167  057C  3EFF               	addlw	-1
  3168  057D  1D03               	skipz
  3169  057E  2D79               	goto	u1015
  3170  057F                     l1574:
  3171  057F  3001               	movlw	1
  3172  0580  00F6               	movwf	??___lwdiv
  3173  0581  0876               	movf	??___lwdiv,w
  3174  0582  07F9               	addwf	___lwdiv@counter,f
  3175  0583                     l1576:
  3176  0583  1FF3               	btfss	___lwdiv@divisor+1,7
  3177  0584  2D86               	goto	u1021
  3178  0585  2D87               	goto	u1020
  3179  0586                     u1021:
  3180  0586  2D78               	goto	l1572
  3181  0587                     u1020:
  3182  0587                     l1578:
  3183  0587  3001               	movlw	1
  3184  0588                     u1035:
  3185  0588  1003               	clrc
  3186  0589  0DF7               	rlf	___lwdiv@quotient,f
  3187  058A  0DF8               	rlf	___lwdiv@quotient+1,f
  3188  058B  3EFF               	addlw	-1
  3189  058C  1D03               	skipz
  3190  058D  2D88               	goto	u1035
  3191  058E  0873               	movf	___lwdiv@divisor+1,w
  3192  058F  0275               	subwf	___lwdiv@dividend+1,w
  3193  0590  1D03               	skipz
  3194  0591  2D94               	goto	u1045
  3195  0592  0872               	movf	___lwdiv@divisor,w
  3196  0593  0274               	subwf	___lwdiv@dividend,w
  3197  0594                     u1045:
  3198  0594  1C03               	skipc
  3199  0595  2D97               	goto	u1041
  3200  0596  2D98               	goto	u1040
  3201  0597                     u1041:
  3202  0597  2D9F               	goto	l1584
  3203  0598                     u1040:
  3204  0598                     l1580:
  3205  0598  0872               	movf	___lwdiv@divisor,w
  3206  0599  02F4               	subwf	___lwdiv@dividend,f
  3207  059A  0873               	movf	___lwdiv@divisor+1,w
  3208  059B  1C03               	skipc
  3209  059C  03F5               	decf	___lwdiv@dividend+1,f
  3210  059D  02F5               	subwf	___lwdiv@dividend+1,f
  3211  059E                     l1582:
  3212  059E  1477               	bsf	___lwdiv@quotient,0
  3213  059F                     l1584:
  3214  059F  3001               	movlw	1
  3215  05A0                     u1055:
  3216  05A0  1003               	clrc
  3217  05A1  0CF3               	rrf	___lwdiv@divisor+1,f
  3218  05A2  0CF2               	rrf	___lwdiv@divisor,f
  3219  05A3  3EFF               	addlw	-1
  3220  05A4  1D03               	skipz
  3221  05A5  2DA0               	goto	u1055
  3222  05A6                     l1586:
  3223  05A6  3001               	movlw	1
  3224  05A7  02F9               	subwf	___lwdiv@counter,f
  3225  05A8  1D03               	btfss	3,2
  3226  05A9  2DAB               	goto	u1061
  3227  05AA  2DAC               	goto	u1060
  3228  05AB                     u1061:
  3229  05AB  2D87               	goto	l1578
  3230  05AC                     u1060:
  3231  05AC                     l1588:
  3232  05AC  0878               	movf	___lwdiv@quotient+1,w
  3233  05AD  00F3               	movwf	?___lwdiv+1
  3234  05AE  0877               	movf	___lwdiv@quotient,w
  3235  05AF  00F2               	movwf	?___lwdiv
  3236  05B0                     l676:
  3237  05B0  0008               	return
  3238  05B1                     __end_of___lwdiv:
  3239                           
  3240                           	psect	text7
  3241  07AA                     __ptext7:	
  3242 ;; *************** function _set_date *****************
  3243 ;; Defined at:
  3244 ;;		line 492 in file "main.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;		None
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;		None
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  1    wreg      void 
  3251 ;; Registers used:
  3252 ;;		wreg, status,2, status,0
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3258 ;;      Params:         0       0       0       0
  3259 ;;      Locals:         0       0       0       0
  3260 ;;      Temps:          1       0       0       0
  3261 ;;      Totals:         1       0       0       0
  3262 ;;Total ram usage:        1 bytes
  3263 ;; Hardware stack levels used:    1
  3264 ;; Hardware stack levels required when called:    1
  3265 ;; This function calls:
  3266 ;;		Nothing
  3267 ;; This function is called by:
  3268 ;;		_main
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           
  3273                           ;psect for function _set_date
  3274  07AA                     _set_date:
  3275  07AA                     l1988:	
  3276                           ;incstack = 0
  3277                           ; Regs used in _set_date: [wreg+status,2+status,0]
  3278                           
  3279                           
  3280                           ;main.c: 494:     s_currentCLK = RC4;
  3281  07AA  3000               	movlw	0
  3282  07AB  1283               	bcf	3,5	;RP0=0, select bank0
  3283  07AC  1303               	bcf	3,6	;RP1=0, select bank0
  3284  07AD  1A07               	btfsc	7,4	;volatile
  3285  07AE  3001               	movlw	1
  3286  07AF  00EF               	movwf	_s_currentCLK
  3287  07B0                     l1990:
  3288                           
  3289                           ;main.c: 495:     if(s_currentCLK != s_lastCLK && s_currentCLK == 1)
  3290  07B0  086F               	movf	_s_currentCLK,w
  3291  07B1  066E               	xorwf	_s_lastCLK,w
  3292  07B2  1903               	skipnz
  3293  07B3  2FB5               	goto	u1631
  3294  07B4  2FB6               	goto	u1630
  3295  07B5                     u1631:
  3296  07B5  2FBB               	goto	l1998
  3297  07B6                     u1630:
  3298  07B6                     l1992:
  3299  07B6  036F               	decf	_s_currentCLK,w
  3300  07B7  1D03               	btfss	3,2
  3301  07B8  2FBA               	goto	u1641
  3302  07B9  2FBB               	goto	u1640
  3303  07BA                     u1641:
  3304  07BA  2FBB               	goto	l1998
  3305  07BB                     u1640:
  3306  07BB                     l1994:
  3307  07BB                     l1998:	
  3308                           ;main.c: 496:     {;main.c: 497:         if(RC5 != s_currentCLK)
  3309                           
  3310                           
  3311                           ;main.c: 506:     s_lastCLK = s_currentCLK;
  3312  07BB  086F               	movf	_s_currentCLK,w
  3313  07BC  00F2               	movwf	??_set_date
  3314  07BD  0872               	movf	??_set_date,w
  3315  07BE  00EE               	movwf	_s_lastCLK
  3316  07BF                     l234:
  3317  07BF  0008               	return
  3318  07C0                     __end_of_set_date:
  3319                           
  3320                           	psect	text8
  3321  072A                     __ptext8:	
  3322 ;; *************** function _LCD_display_ctrl *****************
  3323 ;; Defined at:
  3324 ;;		line 99 in file "main.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;  display         1    wreg     unsigned char 
  3327 ;;  cursor          1    4[COMMON] unsigned char 
  3328 ;;  blink           1    5[COMMON] unsigned char 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  display         1    7[COMMON] unsigned char 
  3331 ;;  temp            1    8[COMMON] unsigned char 
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  1    wreg      void 
  3334 ;; Registers used:
  3335 ;;		wreg, status,2, status,0, pclath, cstack
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3341 ;;      Params:         2       0       0       0
  3342 ;;      Locals:         2       0       0       0
  3343 ;;      Temps:          1       0       0       0
  3344 ;;      Totals:         5       0       0       0
  3345 ;;Total ram usage:        5 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:    3
  3348 ;; This function calls:
  3349 ;;		___lcd_cmd
  3350 ;; This function is called by:
  3351 ;;		_main
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354                           
  3355                           
  3356                           ;psect for function _LCD_display_ctrl
  3357  072A                     _LCD_display_ctrl:
  3358                           
  3359                           ;incstack = 0
  3360                           ; Regs used in _LCD_display_ctrl: [wreg+status,2+status,0+pclath+cstack]
  3361                           ;LCD_display_ctrl@display stored from wreg
  3362  072A  00F7               	movwf	LCD_display_ctrl@display
  3363  072B                     l1718:
  3364                           
  3365                           ;main.c: 99: void LCD_display_ctrl(uint8_t display, uint8_t cursor, uint8_t blink);main.
      +                          c: 100: {;main.c: 101:     __lcd_cmd(0x00);
  3366  072B  3000               	movlw	0
  3367  072C  118A  25F4  118A   	fcall	___lcd_cmd
  3368  072F                     l1720:
  3369                           
  3370                           ;main.c: 103:     uint8_t temp = 0x0C;
  3371  072F  300C               	movlw	12
  3372  0730  00F6               	movwf	??_LCD_display_ctrl
  3373  0731  0876               	movf	??_LCD_display_ctrl,w
  3374  0732  00F8               	movwf	LCD_display_ctrl@temp
  3375  0733                     l1722:
  3376                           
  3377                           ;main.c: 104:     if(display == 1)
  3378  0733  0377               	decf	LCD_display_ctrl@display,w
  3379  0734  1D03               	btfss	3,2
  3380  0735  2F37               	goto	u1241
  3381  0736  2F38               	goto	u1240
  3382  0737                     u1241:
  3383  0737  2F49               	goto	l1734
  3384  0738                     u1240:
  3385  0738                     l1724:
  3386                           
  3387                           ;main.c: 105:     {;main.c: 106:         if(cursor == 1)
  3388  0738  0374               	decf	LCD_display_ctrl@cursor,w
  3389  0739  1D03               	btfss	3,2
  3390  073A  2F3C               	goto	u1251
  3391  073B  2F3D               	goto	u1250
  3392  073C                     u1251:
  3393  073C  2F3E               	goto	l1728
  3394  073D                     u1250:
  3395  073D                     l1726:
  3396                           
  3397                           ;main.c: 107:         {;main.c: 108:             temp |= 1 << 1;
  3398  073D  14F8               	bsf	LCD_display_ctrl@temp,1
  3399  073E                     l1728:
  3400                           
  3401                           ;main.c: 110:         if(blink == 1)
  3402  073E  0375               	decf	LCD_display_ctrl@blink,w
  3403  073F  1D03               	btfss	3,2
  3404  0740  2F42               	goto	u1261
  3405  0741  2F43               	goto	u1260
  3406  0742                     u1261:
  3407  0742  2F44               	goto	l1732
  3408  0743                     u1260:
  3409  0743                     l1730:
  3410                           
  3411                           ;main.c: 111:         {;main.c: 112:             temp |= 1 << 0;
  3412  0743  1478               	bsf	LCD_display_ctrl@temp,0
  3413  0744                     l1732:
  3414                           
  3415                           ;main.c: 114:         __lcd_cmd(temp);
  3416  0744  0878               	movf	LCD_display_ctrl@temp,w
  3417  0745  118A  25F4  118A   	fcall	___lcd_cmd
  3418                           
  3419                           ;main.c: 115:     }
  3420  0748  2F4D               	goto	l84
  3421  0749                     l1734:
  3422                           
  3423                           ;main.c: 117:     {;main.c: 118:         __lcd_cmd(0x08);
  3424  0749  3008               	movlw	8
  3425  074A  118A  25F4  118A   	fcall	___lcd_cmd
  3426  074D                     l84:
  3427  074D  0008               	return
  3428  074E                     __end_of_LCD_display_ctrl:
  3429                           
  3430                           	psect	text9
  3431  0526                     __ptext9:	
  3432 ;; *************** function _LCD_Init *****************
  3433 ;; Defined at:
  3434 ;;		line 158 in file "main.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;		None
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;		None
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  1    wreg      void 
  3441 ;; Registers used:
  3442 ;;		wreg, status,2, status,0, pclath, cstack
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3448 ;;      Params:         0       0       0       0
  3449 ;;      Locals:         0       0       0       0
  3450 ;;      Temps:          2       0       0       0
  3451 ;;      Totals:         2       0       0       0
  3452 ;;Total ram usage:        2 bytes
  3453 ;; Hardware stack levels used:    1
  3454 ;; Hardware stack levels required when called:    3
  3455 ;; This function calls:
  3456 ;;		___lcd_cmd
  3457 ;; This function is called by:
  3458 ;;		_main
  3459 ;; This function uses a non-reentrant model
  3460 ;;
  3461                           
  3462                           
  3463                           ;psect for function _LCD_Init
  3464  0526                     _LCD_Init:
  3465  0526                     l1736:	
  3466                           ;incstack = 0
  3467                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  3468                           
  3469                           
  3470                           ;main.c: 160:     _delay((unsigned long)((50)*(4000000UL/4000.0)));
  3471  0526  3041               	movlw	65
  3472  0527  00F5               	movwf	??_LCD_Init+1
  3473  0528  30EE               	movlw	238
  3474  0529  00F4               	movwf	??_LCD_Init
  3475  052A                     u1857:
  3476  052A  0BF4               	decfsz	??_LCD_Init,f
  3477  052B  2D2A               	goto	u1857
  3478  052C  0BF5               	decfsz	??_LCD_Init+1,f
  3479  052D  2D2A               	goto	u1857
  3480  052E  0000               	nop
  3481  052F                     l1738:
  3482                           
  3483                           ;main.c: 162:     __lcd_cmd(0x03);
  3484  052F  3003               	movlw	3
  3485  0530  118A  25F4  118A   	fcall	___lcd_cmd
  3486  0533                     l1740:
  3487                           
  3488                           ;main.c: 163:     _delay((unsigned long)((5)*(4000000UL/4000.0)));
  3489  0533  3007               	movlw	7
  3490  0534  00F5               	movwf	??_LCD_Init+1
  3491  0535  307D               	movlw	125
  3492  0536  00F4               	movwf	??_LCD_Init
  3493  0537                     u1867:
  3494  0537  0BF4               	decfsz	??_LCD_Init,f
  3495  0538  2D37               	goto	u1867
  3496  0539  0BF5               	decfsz	??_LCD_Init+1,f
  3497  053A  2D37               	goto	u1867
  3498                           
  3499                           ;main.c: 166:     __lcd_cmd(0x03);
  3500  053B  3003               	movlw	3
  3501  053C  118A  25F4  118A   	fcall	___lcd_cmd
  3502  053F                     l1742:
  3503                           
  3504                           ;main.c: 167:     _delay((unsigned long)((120)*(4000000UL/4000000.0)));
  3505  053F  3027               	movlw	39
  3506  0540  00F4               	movwf	??_LCD_Init
  3507  0541                     u1877:
  3508  0541  0BF4               	decfsz	??_LCD_Init,f
  3509  0542  2D41               	goto	u1877
  3510  0543  2D44               	nop2
  3511  0544                     l1744:
  3512                           
  3513                           ;main.c: 170:     __lcd_cmd(0x03);
  3514  0544  3003               	movlw	3
  3515  0545  118A  25F4  118A   	fcall	___lcd_cmd
  3516  0548                     l1746:
  3517                           
  3518                           ;main.c: 173:     __lcd_cmd(0x02);
  3519  0548  3002               	movlw	2
  3520  0549  118A  25F4  118A   	fcall	___lcd_cmd
  3521  054C                     l1748:
  3522                           
  3523                           ;main.c: 177:     __lcd_cmd(0x02);
  3524  054C  3002               	movlw	2
  3525  054D  118A  25F4  118A   	fcall	___lcd_cmd
  3526  0550                     l1750:
  3527                           
  3528                           ;main.c: 178:     __lcd_cmd(0x08);
  3529  0550  3008               	movlw	8
  3530  0551  118A  25F4  118A   	fcall	___lcd_cmd
  3531  0554                     l1752:
  3532                           
  3533                           ;main.c: 181:     __lcd_cmd(0x00);
  3534  0554  3000               	movlw	0
  3535  0555  118A  25F4  118A   	fcall	___lcd_cmd
  3536  0558                     l1754:
  3537                           
  3538                           ;main.c: 182:     __lcd_cmd(0x08);
  3539  0558  3008               	movlw	8
  3540  0559  118A  25F4  118A   	fcall	___lcd_cmd
  3541  055C                     l1756:
  3542                           
  3543                           ;main.c: 185:     __lcd_cmd(0x00);
  3544  055C  3000               	movlw	0
  3545  055D  118A  25F4  118A   	fcall	___lcd_cmd
  3546  0560                     l1758:
  3547                           
  3548                           ;main.c: 186:     __lcd_cmd(0x01);
  3549  0560  3001               	movlw	1
  3550  0561  118A  25F4  118A   	fcall	___lcd_cmd
  3551  0564                     l1760:
  3552                           
  3553                           ;main.c: 189:     __lcd_cmd(0x00);
  3554  0564  3000               	movlw	0
  3555  0565  118A  25F4  118A   	fcall	___lcd_cmd
  3556  0568                     l1762:
  3557                           
  3558                           ;main.c: 190:     __lcd_cmd(0x06);
  3559  0568  3006               	movlw	6
  3560  0569  118A  25F4  118A   	fcall	___lcd_cmd
  3561  056C                     l103:
  3562  056C  0008               	return
  3563  056D                     __end_of_LCD_Init:
  3564                           
  3565                           	psect	text10
  3566  042B                     __ptext10:	
  3567 ;; *************** function _Draw_settings_display *****************
  3568 ;; Defined at:
  3569 ;;		line 251 in file "main.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;  ctr             2    0[BANK0 ] int 
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;		None
  3574 ;; Return value:  Size  Location     Type
  3575 ;;                  1    wreg      void 
  3576 ;; Registers used:
  3577 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3583 ;;      Params:         0       2       0       0
  3584 ;;      Locals:         0       0       0       0
  3585 ;;      Temps:          0       0       0       0
  3586 ;;      Totals:         0       2       0       0
  3587 ;;Total ram usage:        2 bytes
  3588 ;; Hardware stack levels used:    1
  3589 ;; Hardware stack levels required when called:    5
  3590 ;; This function calls:
  3591 ;;		_LCD_display_clear
  3592 ;;		_LCD_send_string
  3593 ;;		_LCD_set_cursor
  3594 ;;		___lcd_send_char
  3595 ;; This function is called by:
  3596 ;;		_main
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           
  3601                           ;psect for function _Draw_settings_display
  3602  042B                     _Draw_settings_display:
  3603  042B                     l1792:	
  3604                           ;incstack = 0
  3605                           ; Regs used in _Draw_settings_display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3606                           
  3607                           
  3608                           ;main.c: 251: void Draw_settings_display(ctr);main.c: 252: {;main.c: 253:     if(ctr == 
      +                          0)
  3609  042B  1283               	bcf	3,5	;RP0=0, select bank0
  3610  042C  1303               	bcf	3,6	;RP1=0, select bank0
  3611  042D  0849               	movf	Draw_settings_display@ctr,w
  3612  042E  044A               	iorwf	Draw_settings_display@ctr+1,w
  3613  042F  1D03               	btfss	3,2
  3614  0430  2C32               	goto	u1271
  3615  0431  2C33               	goto	u1270
  3616  0432                     u1271:
  3617  0432  2C4D               	goto	l1800
  3618  0433                     u1270:
  3619  0433                     l1794:
  3620                           
  3621                           ;main.c: 254:     {;main.c: 255:         LCD_display_clear();
  3622  0433  118A  27C0  118A   	fcall	_LCD_display_clear
  3623                           
  3624                           ;main.c: 256:         LCD_set_cursor(0,0);
  3625  0436  01F4               	clrf	LCD_set_cursor@column
  3626  0437  3000               	movlw	0
  3627  0438  118A  2770  118A   	fcall	_LCD_set_cursor
  3628                           
  3629                           ;main.c: 257:         __lcd_send_char(0x7E);
  3630  043B  307E               	movlw	126
  3631  043C  118A  2705  118A   	fcall	___lcd_send_char
  3632  043F                     l1796:
  3633                           
  3634                           ;main.c: 258:         LCD_send_string(s_time);
  3635  043F  303C               	movlw	(low (_s_time| 0))& (0+255)
  3636  0440  118A  278D  118A   	fcall	_LCD_send_string
  3637  0443                     l1798:
  3638                           
  3639                           ;main.c: 259:         LCD_set_cursor(1,0);
  3640  0443  01F4               	clrf	LCD_set_cursor@column
  3641  0444  3001               	movlw	1
  3642  0445  118A  2770  118A   	fcall	_LCD_set_cursor
  3643                           
  3644                           ;main.c: 260:         LCD_send_string(s_date);
  3645  0448  3037               	movlw	(low (_s_date| 0))& (0+255)
  3646  0449  118A  278D  118A   	fcall	_LCD_send_string
  3647                           
  3648                           ;main.c: 261:     }
  3649  044C  2CAF               	goto	l165
  3650  044D                     l1800:
  3651  044D  0349               	decf	Draw_settings_display@ctr,w
  3652  044E  044A               	iorwf	Draw_settings_display@ctr+1,w
  3653  044F  1D03               	btfss	3,2
  3654  0450  2C52               	goto	u1281
  3655  0451  2C53               	goto	u1280
  3656  0452                     u1281:
  3657  0452  2C6D               	goto	l1808
  3658  0453                     u1280:
  3659  0453                     l1802:
  3660                           
  3661                           ;main.c: 263:     {;main.c: 264:         LCD_display_clear();
  3662  0453  118A  27C0  118A   	fcall	_LCD_display_clear
  3663                           
  3664                           ;main.c: 265:         LCD_set_cursor(0,0);
  3665  0456  01F4               	clrf	LCD_set_cursor@column
  3666  0457  3000               	movlw	0
  3667  0458  118A  2770  118A   	fcall	_LCD_set_cursor
  3668                           
  3669                           ;main.c: 266:         __lcd_send_char(0x7E);
  3670  045B  307E               	movlw	126
  3671  045C  118A  2705  118A   	fcall	___lcd_send_char
  3672  045F                     l1804:
  3673                           
  3674                           ;main.c: 267:         LCD_send_string(s_date);
  3675  045F  3037               	movlw	(low (_s_date| 0))& (0+255)
  3676  0460  118A  278D  118A   	fcall	_LCD_send_string
  3677  0463                     l1806:
  3678                           
  3679                           ;main.c: 268:         LCD_set_cursor(1,0);
  3680  0463  01F4               	clrf	LCD_set_cursor@column
  3681  0464  3001               	movlw	1
  3682  0465  118A  2770  118A   	fcall	_LCD_set_cursor
  3683                           
  3684                           ;main.c: 269:         LCD_send_string(s_temp);
  3685  0468  30B1               	movlw	(low (_s_temp| 0))& (0+255)
  3686  0469  118A  278D  118A   	fcall	_LCD_send_string
  3687                           
  3688                           ;main.c: 270:     }
  3689  046C  2CAF               	goto	l165
  3690  046D                     l1808:
  3691  046D  3002               	movlw	2
  3692  046E  0649               	xorwf	Draw_settings_display@ctr,w
  3693  046F  044A               	iorwf	Draw_settings_display@ctr+1,w
  3694  0470  1D03               	btfss	3,2
  3695  0471  2C73               	goto	u1291
  3696  0472  2C74               	goto	u1290
  3697  0473                     u1291:
  3698  0473  2C8E               	goto	l1816
  3699  0474                     u1290:
  3700  0474                     l1810:
  3701                           
  3702                           ;main.c: 272:     {;main.c: 273:         LCD_display_clear();
  3703  0474  118A  27C0  118A   	fcall	_LCD_display_clear
  3704                           
  3705                           ;main.c: 274:         LCD_set_cursor(0,0);
  3706  0477  01F4               	clrf	LCD_set_cursor@column
  3707  0478  3000               	movlw	0
  3708  0479  118A  2770  118A   	fcall	_LCD_set_cursor
  3709                           
  3710                           ;main.c: 275:         __lcd_send_char(0x7E);
  3711  047C  307E               	movlw	126
  3712  047D  118A  2705  118A   	fcall	___lcd_send_char
  3713  0480                     l1812:
  3714                           
  3715                           ;main.c: 276:         LCD_send_string(s_temp);
  3716  0480  30B1               	movlw	(low (_s_temp| 0))& (0+255)
  3717  0481  118A  278D  118A   	fcall	_LCD_send_string
  3718  0484                     l1814:
  3719                           
  3720                           ;main.c: 277:         LCD_set_cursor(1,0);
  3721  0484  01F4               	clrf	LCD_set_cursor@column
  3722  0485  3001               	movlw	1
  3723  0486  118A  2770  118A   	fcall	_LCD_set_cursor
  3724                           
  3725                           ;main.c: 278:         LCD_send_string(s_humi);
  3726  0489  30C6               	movlw	(low (_s_humi| 0))& (0+255)
  3727  048A  118A  278D  118A   	fcall	_LCD_send_string
  3728                           
  3729                           ;main.c: 279:     }
  3730  048D  2CAF               	goto	l165
  3731  048E                     l1816:
  3732  048E  3003               	movlw	3
  3733  048F  0649               	xorwf	Draw_settings_display@ctr,w
  3734  0490  044A               	iorwf	Draw_settings_display@ctr+1,w
  3735  0491  1D03               	btfss	3,2
  3736  0492  2C94               	goto	u1301
  3737  0493  2C95               	goto	u1300
  3738  0494                     u1301:
  3739  0494  2CAF               	goto	l161
  3740  0495                     u1300:
  3741  0495                     l1818:
  3742                           
  3743                           ;main.c: 281:     {;main.c: 282:         LCD_display_clear();
  3744  0495  118A  27C0  118A   	fcall	_LCD_display_clear
  3745                           
  3746                           ;main.c: 283:         LCD_set_cursor(0,0);
  3747  0498  01F4               	clrf	LCD_set_cursor@column
  3748  0499  3000               	movlw	0
  3749  049A  118A  2770  118A   	fcall	_LCD_set_cursor
  3750                           
  3751                           ;main.c: 284:         __lcd_send_char(0x7E);
  3752  049D  307E               	movlw	126
  3753  049E  118A  2705  118A   	fcall	___lcd_send_char
  3754  04A1                     l1820:
  3755                           
  3756                           ;main.c: 285:         LCD_send_string(s_humi);
  3757  04A1  30C6               	movlw	(low (_s_humi| 0))& (0+255)
  3758  04A2  118A  278D  118A   	fcall	_LCD_send_string
  3759  04A5                     l1822:
  3760                           
  3761                           ;main.c: 286:         LCD_set_cursor(1,0);
  3762  04A5  01F4               	clrf	LCD_set_cursor@column
  3763  04A6  3001               	movlw	1
  3764  04A7  118A  2770  118A   	fcall	_LCD_set_cursor
  3765                           
  3766                           ;main.c: 287:         LCD_send_string(s_end);
  3767  04AA  30A0               	movlw	(low (_s_end| 0))& (0+255)
  3768  04AB  118A  278D  118A   	fcall	_LCD_send_string
  3769  04AE  2CAF               	goto	l165
  3770  04AF                     l161:
  3771  04AF                     l165:
  3772  04AF  0008               	return
  3773  04B0                     __end_of_Draw_settings_display:
  3774                           
  3775                           	psect	text11
  3776  06AE                     __ptext11:	
  3777 ;; *************** function _Draw_main_display_p2 *****************
  3778 ;; Defined at:
  3779 ;;		line 239 in file "main.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;		None
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;		None
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1    wreg      void 
  3786 ;; Registers used:
  3787 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3793 ;;      Params:         0       0       0       0
  3794 ;;      Locals:         0       0       0       0
  3795 ;;      Temps:          1       0       0       0
  3796 ;;      Totals:         1       0       0       0
  3797 ;;Total ram usage:        1 bytes
  3798 ;; Hardware stack levels used:    1
  3799 ;; Hardware stack levels required when called:    5
  3800 ;; This function calls:
  3801 ;;		_LCD_display_clear
  3802 ;;		_LCD_send_string
  3803 ;;		_LCD_set_cursor
  3804 ;; This function is called by:
  3805 ;;		_main
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809                           
  3810                           ;psect for function _Draw_main_display_p2
  3811  06AE                     _Draw_main_display_p2:
  3812  06AE                     l1780:	
  3813                           ;incstack = 0
  3814                           ; Regs used in _Draw_main_display_p2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3815                           
  3816                           
  3817                           ;main.c: 241:     LCD_display_clear();
  3818  06AE  118A  27C0  118A   	fcall	_LCD_display_clear
  3819                           
  3820                           ;main.c: 242:     LCD_set_cursor(0,0);
  3821  06B1  01F4               	clrf	LCD_set_cursor@column
  3822  06B2  3000               	movlw	0
  3823  06B3  118A  2770  118A   	fcall	_LCD_set_cursor
  3824  06B6                     l1782:
  3825                           
  3826                           ;main.c: 243:     LCD_send_string(l_time);
  3827  06B6  3032               	movlw	(low (_l_time| 0))& (0+255)
  3828  06B7  118A  278D  118A   	fcall	_LCD_send_string
  3829  06BA                     l1784:
  3830                           
  3831                           ;main.c: 244:     LCD_set_cursor(0,9);
  3832  06BA  3009               	movlw	9
  3833  06BB  00FB               	movwf	??_Draw_main_display_p2
  3834  06BC  087B               	movf	??_Draw_main_display_p2,w
  3835  06BD  00F4               	movwf	LCD_set_cursor@column
  3836  06BE  3000               	movlw	0
  3837  06BF  118A  2770  118A   	fcall	_LCD_set_cursor
  3838                           
  3839                           ;main.c: 245:     LCD_send_string(time);
  3840  06C2  3025               	movlw	(low (_time| 0))& (0+255)
  3841  06C3  118A  278D  118A   	fcall	_LCD_send_string
  3842  06C6                     l1786:
  3843                           
  3844                           ;main.c: 246:     LCD_set_cursor(1,0);
  3845  06C6  01F4               	clrf	LCD_set_cursor@column
  3846  06C7  3001               	movlw	1
  3847  06C8  118A  2770  118A   	fcall	_LCD_set_cursor
  3848  06CB                     l1788:
  3849                           
  3850                           ;main.c: 247:     LCD_send_string(l_date);
  3851  06CB  30DE               	movlw	(low (_l_date| 0))& (0+255)
  3852  06CC  118A  278D  118A   	fcall	_LCD_send_string
  3853                           
  3854                           ;main.c: 248:     LCD_set_cursor(1,8);
  3855  06CF  3008               	movlw	8
  3856  06D0  00FB               	movwf	??_Draw_main_display_p2
  3857  06D1  087B               	movf	??_Draw_main_display_p2,w
  3858  06D2  00F4               	movwf	LCD_set_cursor@column
  3859  06D3  3001               	movlw	1
  3860  06D4  118A  2770  118A   	fcall	_LCD_set_cursor
  3861  06D7                     l1790:
  3862                           
  3863                           ;main.c: 249:     LCD_send_string(date);
  3864  06D7  30BD               	movlw	(low (_date| 0))& (0+255)
  3865  06D8  118A  278D  118A   	fcall	_LCD_send_string
  3866  06DB                     l155:
  3867  06DB  0008               	return
  3868  06DC                     __end_of_Draw_main_display_p2:
  3869                           
  3870                           	psect	text12
  3871  07C0                     __ptext12:	
  3872 ;; *************** function _LCD_display_clear *****************
  3873 ;; Defined at:
  3874 ;;		line 149 in file "main.c"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;		None
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;  i               1    9[COMMON] unsigned char 
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  1    wreg      void 
  3881 ;; Registers used:
  3882 ;;		wreg, status,2, status,0, pclath, cstack
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3888 ;;      Params:         0       0       0       0
  3889 ;;      Locals:         1       0       0       0
  3890 ;;      Temps:          1       0       0       0
  3891 ;;      Totals:         2       0       0       0
  3892 ;;Total ram usage:        2 bytes
  3893 ;; Hardware stack levels used:    1
  3894 ;; Hardware stack levels required when called:    4
  3895 ;; This function calls:
  3896 ;;		_LCD_set_cursor
  3897 ;;		___lcd_send_char
  3898 ;; This function is called by:
  3899 ;;		_Draw_main_display_p2
  3900 ;;		_Draw_settings_display
  3901 ;;		_set_temp
  3902 ;;		_set_humi
  3903 ;;		_set_time
  3904 ;;		_main
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           
  3909                           ;psect for function _LCD_display_clear
  3910  07C0                     _LCD_display_clear:
  3911  07C0                     l1622:	
  3912                           ;incstack = 0
  3913                           ; Regs used in _LCD_display_clear: [wreg+status,2+status,0+pclath+cstack]
  3914                           
  3915  07C0                     l1624:
  3916                           
  3917                           ;main.c: 152:     LCD_set_cursor(0,0);
  3918  07C0  01F4               	clrf	LCD_set_cursor@column
  3919  07C1  3000               	movlw	0
  3920  07C2  118A  2770  118A   	fcall	_LCD_set_cursor
  3921  07C5                     l1626:
  3922                           
  3923                           ;main.c: 153:     for(i = 0;i < 80;i++)
  3924  07C5  01F9               	clrf	LCD_display_clear@i
  3925  07C6                     l1632:
  3926                           
  3927                           ;main.c: 154:     {;main.c: 155:         __lcd_send_char(0x20);
  3928  07C6  3020               	movlw	32
  3929  07C7  118A  2705  118A   	fcall	___lcd_send_char
  3930  07CA                     l1634:
  3931                           
  3932                           ;main.c: 156:     }
  3933  07CA  3001               	movlw	1
  3934  07CB  00F8               	movwf	??_LCD_display_clear
  3935  07CC  0878               	movf	??_LCD_display_clear,w
  3936  07CD  07F9               	addwf	LCD_display_clear@i,f
  3937  07CE                     l1636:
  3938  07CE  3050               	movlw	80
  3939  07CF  0279               	subwf	LCD_display_clear@i,w
  3940  07D0  1C03               	skipc
  3941  07D1  2FD3               	goto	u1141
  3942  07D2  2FD4               	goto	u1140
  3943  07D3                     u1141:
  3944  07D3  2FC6               	goto	l1632
  3945  07D4                     u1140:
  3946  07D4                     l100:
  3947  07D4  0008               	return
  3948  07D5                     __end_of_LCD_display_clear:
  3949                           
  3950                           	psect	text13
  3951  0678                     __ptext13:	
  3952 ;; *************** function _Draw_main_display_p1 *****************
  3953 ;; Defined at:
  3954 ;;		line 224 in file "main.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;		None
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;		None
  3959 ;; Return value:  Size  Location     Type
  3960 ;;                  1    wreg      void 
  3961 ;; Registers used:
  3962 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3963 ;; Tracked objects:
  3964 ;;		On entry : 0/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3968 ;;      Params:         0       0       0       0
  3969 ;;      Locals:         0       0       0       0
  3970 ;;      Temps:          1       0       0       0
  3971 ;;      Totals:         1       0       0       0
  3972 ;;Total ram usage:        1 bytes
  3973 ;; Hardware stack levels used:    1
  3974 ;; Hardware stack levels required when called:    4
  3975 ;; This function calls:
  3976 ;;		_LCD_send_string
  3977 ;;		_LCD_set_cursor
  3978 ;;		___lcd_send_char
  3979 ;; This function is called by:
  3980 ;;		_main
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           
  3984                           
  3985                           ;psect for function _Draw_main_display_p1
  3986  0678                     _Draw_main_display_p1:
  3987  0678                     l1764:	
  3988                           ;incstack = 0
  3989                           ; Regs used in _Draw_main_display_p1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3990                           
  3991                           
  3992                           ;main.c: 226:     LCD_send_string(l_temp);
  3993  0678  30D9               	movlw	(low (_l_temp| 0))& (0+255)
  3994  0679  118A  278D  118A   	fcall	_LCD_send_string
  3995  067C                     l1766:
  3996                           
  3997                           ;main.c: 227:     LCD_set_cursor(0,7);
  3998  067C  3007               	movlw	7
  3999  067D  00FB               	movwf	??_Draw_main_display_p1
  4000  067E  087B               	movf	??_Draw_main_display_p1,w
  4001  067F  00F4               	movwf	LCD_set_cursor@column
  4002  0680  3000               	movlw	0
  4003  0681  118A  2770  118A   	fcall	_LCD_set_cursor
  4004  0684                     l1768:
  4005                           
  4006                           ;main.c: 228:     LCD_send_string(current_temp);
  4007  0684  30CF               	movlw	(low (_current_temp| 0))& (0+255)
  4008  0685  118A  278D  118A   	fcall	_LCD_send_string
  4009                           
  4010                           ;main.c: 229:     __lcd_send_char(0x7E);
  4011  0688  307E               	movlw	126
  4012  0689  118A  2705  118A   	fcall	___lcd_send_char
  4013  068C                     l1770:
  4014                           
  4015                           ;main.c: 230:     LCD_send_string(update_temp);
  4016  068C  302D               	movlw	(low (_update_temp| 0))& (0+255)
  4017  068D  118A  278D  118A   	fcall	_LCD_send_string
  4018  0690                     l1772:
  4019                           
  4020                           ;main.c: 232:     LCD_set_cursor(1,0);
  4021  0690  01F4               	clrf	LCD_set_cursor@column
  4022  0691  3001               	movlw	1
  4023  0692  118A  2770  118A   	fcall	_LCD_set_cursor
  4024                           
  4025                           ;main.c: 233:     LCD_send_string(l_humi);
  4026  0695  30D4               	movlw	(low (_l_humi| 0))& (0+255)
  4027  0696  118A  278D  118A   	fcall	_LCD_send_string
  4028  0699                     l1774:
  4029                           
  4030                           ;main.c: 234:     LCD_set_cursor(1,9);
  4031  0699  3009               	movlw	9
  4032  069A  00FB               	movwf	??_Draw_main_display_p1
  4033  069B  087B               	movf	??_Draw_main_display_p1,w
  4034  069C  00F4               	movwf	LCD_set_cursor@column
  4035  069D  3001               	movlw	1
  4036  069E  118A  2770  118A   	fcall	_LCD_set_cursor
  4037  06A1                     l1776:
  4038                           
  4039                           ;main.c: 235:     LCD_send_string(current_humi);
  4040  06A1  3045               	movlw	(low (_current_humi| 0))& (0+255)
  4041  06A2  118A  278D  118A   	fcall	_LCD_send_string
  4042                           
  4043                           ;main.c: 236:     __lcd_send_char(0x7E);
  4044  06A5  307E               	movlw	126
  4045  06A6  118A  2705  118A   	fcall	___lcd_send_char
  4046  06A9                     l1778:
  4047                           
  4048                           ;main.c: 237:     LCD_send_string(update_humi);
  4049  06A9  3041               	movlw	(low (_update_humi| 0))& (0+255)
  4050  06AA  118A  278D  118A   	fcall	_LCD_send_string
  4051  06AD                     l152:
  4052  06AD  0008               	return
  4053  06AE                     __end_of_Draw_main_display_p1:
  4054                           
  4055                           	psect	text14
  4056  0770                     __ptext14:	
  4057 ;; *************** function _LCD_set_cursor *****************
  4058 ;; Defined at:
  4059 ;;		line 136 in file "main.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;  row             1    wreg     unsigned char 
  4062 ;;  column          1    4[COMMON] unsigned char 
  4063 ;; Auto vars:     Size  Location     Type
  4064 ;;  row             1    7[COMMON] unsigned char 
  4065 ;;  temp            1    6[COMMON] unsigned char 
  4066 ;; Return value:  Size  Location     Type
  4067 ;;                  1    wreg      void 
  4068 ;; Registers used:
  4069 ;;		wreg, status,2, status,0, pclath, cstack
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4075 ;;      Params:         1       0       0       0
  4076 ;;      Locals:         2       0       0       0
  4077 ;;      Temps:          1       0       0       0
  4078 ;;      Totals:         4       0       0       0
  4079 ;;Total ram usage:        4 bytes
  4080 ;; Hardware stack levels used:    1
  4081 ;; Hardware stack levels required when called:    3
  4082 ;; This function calls:
  4083 ;;		___lcd_cmd
  4084 ;; This function is called by:
  4085 ;;		_LCD_display_clear
  4086 ;;		_Draw_main_display_p1
  4087 ;;		_Draw_main_display_p2
  4088 ;;		_Draw_settings_display
  4089 ;;		_set_temp
  4090 ;;		_set_humi
  4091 ;;		_set_time
  4092 ;; This function uses a non-reentrant model
  4093 ;;
  4094                           
  4095                           
  4096                           ;psect for function _LCD_set_cursor
  4097  0770                     _LCD_set_cursor:
  4098                           
  4099                           ;incstack = 0
  4100                           ; Regs used in _LCD_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  4101                           ;LCD_set_cursor@row stored from wreg
  4102  0770  00F7               	movwf	LCD_set_cursor@row
  4103  0771                     l1554:
  4104                           
  4105                           ;main.c: 136: void LCD_set_cursor(uint8_t row, uint8_t column);main.c: 137: {;main.c: 13
      +                          8:     if(row == 0)
  4106  0771  0877               	movf	LCD_set_cursor@row,w
  4107  0772  1D03               	btfss	3,2
  4108  0773  2F75               	goto	u981
  4109  0774  2F76               	goto	u980
  4110  0775                     u981:
  4111  0775  2F7B               	goto	l1558
  4112  0776                     u980:
  4113  0776                     l1556:
  4114                           
  4115                           ;main.c: 139:     {;main.c: 140:         __lcd_cmd(0x08);
  4116  0776  3008               	movlw	8
  4117  0777  118A  25F4  118A   	fcall	___lcd_cmd
  4118                           
  4119                           ;main.c: 141:     }
  4120  077A  2F84               	goto	l1562
  4121  077B                     l1558:
  4122  077B  0377               	decf	LCD_set_cursor@row,w
  4123  077C  1D03               	btfss	3,2
  4124  077D  2F7F               	goto	u991
  4125  077E  2F80               	goto	u990
  4126  077F                     u991:
  4127  077F  2F84               	goto	l1562
  4128  0780                     u990:
  4129  0780                     l1560:
  4130                           
  4131                           ;main.c: 143:     {;main.c: 144:         __lcd_cmd(0x0C);
  4132  0780  300C               	movlw	12
  4133  0781  118A  25F4  118A   	fcall	___lcd_cmd
  4134  0784                     l1562:
  4135                           
  4136                           ;main.c: 146:     uint8_t temp = column;
  4137  0784  0874               	movf	LCD_set_cursor@column,w
  4138  0785  00F5               	movwf	??_LCD_set_cursor
  4139  0786  0875               	movf	??_LCD_set_cursor,w
  4140  0787  00F6               	movwf	LCD_set_cursor@temp
  4141  0788                     l1564:
  4142                           
  4143                           ;main.c: 147:     __lcd_cmd(temp);
  4144  0788  0876               	movf	LCD_set_cursor@temp,w
  4145  0789  118A  25F4  118A   	fcall	___lcd_cmd
  4146  078C                     l95:
  4147  078C  0008               	return
  4148  078D                     __end_of_LCD_set_cursor:
  4149                           
  4150                           	psect	text15
  4151  05F4                     __ptext15:	
  4152 ;; *************** function ___lcd_cmd *****************
  4153 ;; Defined at:
  4154 ;;		line 70 in file "main.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;  cmd             1    wreg     unsigned char 
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;  cmd             1    3[COMMON] unsigned char 
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  1    wreg      void 
  4161 ;; Registers used:
  4162 ;;		wreg, status,2, status,0, pclath, cstack
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4168 ;;      Params:         0       0       0       0
  4169 ;;      Locals:         1       0       0       0
  4170 ;;      Temps:          0       0       0       0
  4171 ;;      Totals:         1       0       0       0
  4172 ;;Total ram usage:        1 bytes
  4173 ;; Hardware stack levels used:    1
  4174 ;; Hardware stack levels required when called:    2
  4175 ;; This function calls:
  4176 ;;		___lcd_en_pulse
  4177 ;;		___lcd_port_write
  4178 ;; This function is called by:
  4179 ;;		_LCD_display_ctrl
  4180 ;;		_LCD_set_cursor
  4181 ;;		_LCD_Init
  4182 ;;		___lcd_shift_display
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           
  4187                           ;psect for function ___lcd_cmd
  4188  05F4                     ___lcd_cmd:
  4189                           
  4190                           ;incstack = 0
  4191                           ; Regs used in ___lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  4192                           ;___lcd_cmd@cmd stored from wreg
  4193  05F4  00F3               	movwf	___lcd_cmd@cmd
  4194  05F5                     l1534:
  4195                           
  4196                           ;main.c: 70: void __lcd_cmd(uint8_t cmd);main.c: 71: {;main.c: 72:     RA5 = 0;
  4197  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  4198  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  4199  05F7  1285               	bcf	5,5	;volatile
  4200  05F8                     l1536:
  4201                           
  4202                           ;main.c: 73:     __lcd_port_write(cmd);
  4203  05F8  0873               	movf	___lcd_cmd@cmd,w
  4204  05F9  118A  274E  118A   	fcall	___lcd_port_write
  4205                           
  4206                           ;main.c: 74:     __lcd_en_pulse();
  4207  05FC  118A  27E6  118A   	fcall	___lcd_en_pulse
  4208  05FF                     l68:
  4209  05FF  0008               	return
  4210  0600                     __end_of___lcd_cmd:
  4211                           
  4212                           	psect	text16
  4213  078D                     __ptext16:	
  4214 ;; *************** function _LCD_send_string *****************
  4215 ;; Defined at:
  4216 ;;		line 91 in file "main.c"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;  string          1    wreg     PTR unsigned char 
  4219 ;;		 -> s_end(17), s_humi(9), s_temp(12), s_date(5), 
  4220 ;;		 -> s_time(5), date(9), l_date(5), time(8), 
  4221 ;;		 -> l_time(5), update_humi(4), current_humi(4), l_humi(5), 
  4222 ;;		 -> update_temp(5), current_temp(5), l_temp(5), 
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;  string          1   10[COMMON] PTR unsigned char 
  4225 ;;		 -> s_end(17), s_humi(9), s_temp(12), s_date(5), 
  4226 ;;		 -> s_time(5), date(9), l_date(5), time(8), 
  4227 ;;		 -> l_time(5), update_humi(4), current_humi(4), l_humi(5), 
  4228 ;;		 -> update_temp(5), current_temp(5), l_temp(5), 
  4229 ;;  i               1    9[COMMON] unsigned char 
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  1    wreg      void 
  4232 ;; Registers used:
  4233 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4239 ;;      Params:         0       0       0       0
  4240 ;;      Locals:         2       0       0       0
  4241 ;;      Temps:          1       0       0       0
  4242 ;;      Totals:         3       0       0       0
  4243 ;;Total ram usage:        3 bytes
  4244 ;; Hardware stack levels used:    1
  4245 ;; Hardware stack levels required when called:    3
  4246 ;; This function calls:
  4247 ;;		___lcd_send_char
  4248 ;; This function is called by:
  4249 ;;		_Draw_main_display_p1
  4250 ;;		_Draw_main_display_p2
  4251 ;;		_Draw_settings_display
  4252 ;;		_set_temp
  4253 ;;		_set_humi
  4254 ;;		_set_time
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           
  4259                           ;psect for function _LCD_send_string
  4260  078D                     _LCD_send_string:
  4261                           
  4262                           ;incstack = 0
  4263                           ; Regs used in _LCD_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4264                           ;LCD_send_string@string stored from wreg
  4265  078D  00FA               	movwf	LCD_send_string@string
  4266  078E                     l1614:
  4267                           
  4268                           ;main.c: 91: void LCD_send_string(uint8_t string[]);main.c: 92: {;main.c: 93:     uint8_
      +                          t i = 0;
  4269  078E  01F9               	clrf	LCD_send_string@i
  4270                           
  4271                           ;main.c: 94:     for(i = 0;string[i]!='\0';i++)
  4272  078F  01F9               	clrf	LCD_send_string@i
  4273  0790  2F9E               	goto	l1620
  4274  0791                     l1616:
  4275                           
  4276                           ;main.c: 95:     {;main.c: 96:         __lcd_send_char(string[i]);
  4277  0791  0879               	movf	LCD_send_string@i,w
  4278  0792  077A               	addwf	LCD_send_string@string,w
  4279  0793  00F8               	movwf	??_LCD_send_string
  4280  0794  0878               	movf	??_LCD_send_string,w
  4281  0795  0084               	movwf	4
  4282  0796  0800               	movf	0,w
  4283  0797  118A  2705  118A   	fcall	___lcd_send_char
  4284  079A                     l1618:
  4285                           
  4286                           ;main.c: 97:     }
  4287  079A  3001               	movlw	1
  4288  079B  00F8               	movwf	??_LCD_send_string
  4289  079C  0878               	movf	??_LCD_send_string,w
  4290  079D  07F9               	addwf	LCD_send_string@i,f
  4291  079E                     l1620:
  4292  079E  0879               	movf	LCD_send_string@i,w
  4293  079F  077A               	addwf	LCD_send_string@string,w
  4294  07A0  00F8               	movwf	??_LCD_send_string
  4295  07A1  0878               	movf	??_LCD_send_string,w
  4296  07A2  0084               	movwf	4
  4297  07A3  1383               	bcf	3,7	;select IRP bank0
  4298  07A4  0800               	movf	0,w
  4299  07A5  1D03               	btfss	3,2
  4300  07A6  2FA8               	goto	u1131
  4301  07A7  2FA9               	goto	u1130
  4302  07A8                     u1131:
  4303  07A8  2F91               	goto	l1616
  4304  07A9                     u1130:
  4305  07A9                     l77:
  4306  07A9  0008               	return
  4307  07AA                     __end_of_LCD_send_string:
  4308                           
  4309                           	psect	text17
  4310  0705                     __ptext17:	
  4311 ;; *************** function ___lcd_send_char *****************
  4312 ;; Defined at:
  4313 ;;		line 77 in file "main.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;  ascii           1    wreg     unsigned char 
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;  ascii           1    7[COMMON] unsigned char 
  4318 ;;  low             1    6[COMMON] unsigned char 
  4319 ;;  high            1    5[COMMON] unsigned char 
  4320 ;; Return value:  Size  Location     Type
  4321 ;;                  1    wreg      void 
  4322 ;; Registers used:
  4323 ;;		wreg, status,2, status,0, pclath, cstack
  4324 ;; Tracked objects:
  4325 ;;		On entry : 0/0
  4326 ;;		On exit  : 0/0
  4327 ;;		Unchanged: 0/0
  4328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4329 ;;      Params:         0       0       0       0
  4330 ;;      Locals:         3       0       0       0
  4331 ;;      Temps:          2       0       0       0
  4332 ;;      Totals:         5       0       0       0
  4333 ;;Total ram usage:        5 bytes
  4334 ;; Hardware stack levels used:    1
  4335 ;; Hardware stack levels required when called:    2
  4336 ;; This function calls:
  4337 ;;		___lcd_en_pulse
  4338 ;;		___lcd_port_write
  4339 ;; This function is called by:
  4340 ;;		_LCD_send_string
  4341 ;;		_LCD_display_clear
  4342 ;;		_Draw_main_display_p1
  4343 ;;		_Draw_settings_display
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           
  4348                           ;psect for function ___lcd_send_char
  4349  0705                     ___lcd_send_char:
  4350                           
  4351                           ;incstack = 0
  4352                           ; Regs used in ___lcd_send_char: [wreg+status,2+status,0+pclath+cstack]
  4353                           ;___lcd_send_char@ascii stored from wreg
  4354  0705  00F7               	movwf	___lcd_send_char@ascii
  4355  0706                     l1538:
  4356                           
  4357                           ;main.c: 77: void __lcd_send_char(uint8_t ascii);main.c: 78: {;main.c: 79:     RA5 = 1;
  4358  0706  1283               	bcf	3,5	;RP0=0, select bank0
  4359  0707  1303               	bcf	3,6	;RP1=0, select bank0
  4360  0708  1685               	bsf	5,5	;volatile
  4361  0709                     l1540:
  4362                           
  4363                           ;main.c: 82:     uint8_t low = 0;
  4364  0709  01F6               	clrf	___lcd_send_char@low
  4365  070A                     l1542:
  4366                           
  4367                           ;main.c: 83:     high = ascii >> 4;
  4368  070A  0877               	movf	___lcd_send_char@ascii,w
  4369  070B  00F3               	movwf	??___lcd_send_char
  4370  070C  3004               	movlw	4
  4371  070D                     u975:
  4372  070D  1003               	clrc
  4373  070E  0CF3               	rrf	??___lcd_send_char,f
  4374  070F  3EFF               	addlw	-1
  4375  0710  1D03               	skipz
  4376  0711  2F0D               	goto	u975
  4377  0712  0873               	movf	??___lcd_send_char,w
  4378  0713  00F4               	movwf	??___lcd_send_char+1
  4379  0714  0874               	movf	??___lcd_send_char+1,w
  4380  0715  00F5               	movwf	___lcd_send_char@high
  4381  0716                     l1544:
  4382                           
  4383                           ;main.c: 84:     low = ascii & 0x0F;
  4384  0716  0877               	movf	___lcd_send_char@ascii,w
  4385  0717  390F               	andlw	15
  4386  0718  00F3               	movwf	??___lcd_send_char
  4387  0719  0873               	movf	??___lcd_send_char,w
  4388  071A  00F6               	movwf	___lcd_send_char@low
  4389  071B                     l1546:
  4390                           
  4391                           ;main.c: 86:     __lcd_port_write(high);
  4392  071B  0875               	movf	___lcd_send_char@high,w
  4393  071C  118A  274E  118A   	fcall	___lcd_port_write
  4394  071F                     l1548:
  4395                           
  4396                           ;main.c: 87:     __lcd_en_pulse();
  4397  071F  118A  27E6  118A   	fcall	___lcd_en_pulse
  4398  0722                     l1550:
  4399                           
  4400                           ;main.c: 88:     __lcd_port_write(low);
  4401  0722  0876               	movf	___lcd_send_char@low,w
  4402  0723  118A  274E  118A   	fcall	___lcd_port_write
  4403  0726                     l1552:
  4404                           
  4405                           ;main.c: 89:     __lcd_en_pulse();
  4406  0726  118A  27E6  118A   	fcall	___lcd_en_pulse
  4407  0729                     l71:
  4408  0729  0008               	return
  4409  072A                     __end_of___lcd_send_char:
  4410                           
  4411                           	psect	text18
  4412  074E                     __ptext18:	
  4413 ;; *************** function ___lcd_port_write *****************
  4414 ;; Defined at:
  4415 ;;		line 48 in file "main.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  data            1    wreg     unsigned char 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  data            1    2[COMMON] unsigned char 
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  1    wreg      void 
  4422 ;; Registers used:
  4423 ;;		wreg
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4429 ;;      Params:         0       0       0       0
  4430 ;;      Locals:         1       0       0       0
  4431 ;;      Temps:          0       0       0       0
  4432 ;;      Totals:         1       0       0       0
  4433 ;;Total ram usage:        1 bytes
  4434 ;; Hardware stack levels used:    1
  4435 ;; Hardware stack levels required when called:    1
  4436 ;; This function calls:
  4437 ;;		Nothing
  4438 ;; This function is called by:
  4439 ;;		___lcd_cmd
  4440 ;;		___lcd_send_char
  4441 ;; This function uses a non-reentrant model
  4442 ;;
  4443                           
  4444                           
  4445                           ;psect for function ___lcd_port_write
  4446  074E                     ___lcd_port_write:
  4447                           
  4448                           ;incstack = 0
  4449                           ; Regs used in ___lcd_port_write: [wreg]
  4450                           ;___lcd_port_write@data stored from wreg
  4451  074E  00F2               	movwf	___lcd_port_write@data
  4452  074F                     l1524:
  4453                           
  4454                           ;main.c: 48: void __lcd_port_write(uint8_t data);main.c: 49: {;main.c: 50:     if(data &
      +                           0x01)
  4455  074F  1C72               	btfss	___lcd_port_write@data,0
  4456  0750  2F52               	goto	u931
  4457  0751  2F53               	goto	u930
  4458  0752                     u931:
  4459  0752  2F57               	goto	l57
  4460  0753                     u930:
  4461  0753                     l1526:
  4462                           
  4463                           ;main.c: 51:   RC0 = 1;
  4464  0753  1283               	bcf	3,5	;RP0=0, select bank0
  4465  0754  1303               	bcf	3,6	;RP1=0, select bank0
  4466  0755  1407               	bsf	7,0	;volatile
  4467  0756  2F5A               	goto	l58
  4468  0757                     l57:	
  4469                           ;main.c: 52:  else
  4470                           
  4471                           
  4472                           ;main.c: 53:   RC0 = 0;
  4473  0757  1283               	bcf	3,5	;RP0=0, select bank0
  4474  0758  1303               	bcf	3,6	;RP1=0, select bank0
  4475  0759  1007               	bcf	7,0	;volatile
  4476  075A                     l58:
  4477                           
  4478                           ;main.c: 55:  if(data & 0x02)
  4479  075A  1CF2               	btfss	___lcd_port_write@data,1
  4480  075B  2F5D               	goto	u941
  4481  075C  2F5E               	goto	u940
  4482  075D                     u941:
  4483  075D  2F60               	goto	l59
  4484  075E                     u940:
  4485  075E                     l1528:
  4486                           
  4487                           ;main.c: 56:   RC1 = 1;
  4488  075E  1487               	bsf	7,1	;volatile
  4489  075F  2F61               	goto	l60
  4490  0760                     l59:	
  4491                           ;main.c: 57:  else
  4492                           
  4493                           
  4494                           ;main.c: 58:   RC1 = 0;
  4495  0760  1087               	bcf	7,1	;volatile
  4496  0761                     l60:
  4497                           
  4498                           ;main.c: 60:  if(data & 0x04)
  4499  0761  1D72               	btfss	___lcd_port_write@data,2
  4500  0762  2F64               	goto	u951
  4501  0763  2F65               	goto	u950
  4502  0764                     u951:
  4503  0764  2F67               	goto	l61
  4504  0765                     u950:
  4505  0765                     l1530:
  4506                           
  4507                           ;main.c: 61:   RC2 = 1;
  4508  0765  1507               	bsf	7,2	;volatile
  4509  0766  2F68               	goto	l62
  4510  0767                     l61:	
  4511                           ;main.c: 62:  else
  4512                           
  4513                           
  4514                           ;main.c: 63:   RC2 = 0;
  4515  0767  1107               	bcf	7,2	;volatile
  4516  0768                     l62:
  4517                           
  4518                           ;main.c: 65:  if(data & 0x08)
  4519  0768  1DF2               	btfss	___lcd_port_write@data,3
  4520  0769  2F6B               	goto	u961
  4521  076A  2F6C               	goto	u960
  4522  076B                     u961:
  4523  076B  2F6E               	goto	l63
  4524  076C                     u960:
  4525  076C                     l1532:
  4526                           
  4527                           ;main.c: 66:   RC3 = 1;
  4528  076C  1587               	bsf	7,3	;volatile
  4529  076D  2F6F               	goto	l65
  4530  076E                     l63:	
  4531                           ;main.c: 67:  else
  4532                           
  4533                           
  4534                           ;main.c: 68:   RC3 = 0;
  4535  076E  1187               	bcf	7,3	;volatile
  4536  076F                     l65:
  4537  076F  0008               	return
  4538  0770                     __end_of___lcd_port_write:
  4539                           
  4540                           	psect	text19
  4541  07E6                     __ptext19:	
  4542 ;; *************** function ___lcd_en_pulse *****************
  4543 ;; Defined at:
  4544 ;;		line 41 in file "main.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;		None
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;		None
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  1    wreg      void 
  4551 ;; Registers used:
  4552 ;;		wreg
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4558 ;;      Params:         0       0       0       0
  4559 ;;      Locals:         0       0       0       0
  4560 ;;      Temps:          1       0       0       0
  4561 ;;      Totals:         1       0       0       0
  4562 ;;Total ram usage:        1 bytes
  4563 ;; Hardware stack levels used:    1
  4564 ;; Hardware stack levels required when called:    1
  4565 ;; This function calls:
  4566 ;;		Nothing
  4567 ;; This function is called by:
  4568 ;;		___lcd_cmd
  4569 ;;		___lcd_send_char
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           
  4573                           
  4574                           ;psect for function ___lcd_en_pulse
  4575  07E6                     ___lcd_en_pulse:
  4576  07E6                     l1518:	
  4577                           ;incstack = 0
  4578                           ; Regs used in ___lcd_en_pulse: [wreg]
  4579                           
  4580                           
  4581                           ;main.c: 43:     _delay((unsigned long)((10)*(4000000UL/4000000.0)));
  4582  07E6  3003               	movlw	3
  4583  07E7  00F2               	movwf	??___lcd_en_pulse
  4584  07E8                     u1887:
  4585  07E8  0BF2               	decfsz	??___lcd_en_pulse,f
  4586  07E9  2FE8               	goto	u1887
  4587  07EA                     l1520:
  4588                           
  4589                           ;main.c: 44:     PORTAbits.RA4 = 1;
  4590  07EA  1283               	bcf	3,5	;RP0=0, select bank0
  4591  07EB  1303               	bcf	3,6	;RP1=0, select bank0
  4592  07EC  1605               	bsf	5,4	;volatile
  4593                           
  4594                           ;main.c: 45:     _delay((unsigned long)((500)*(4000000UL/4000000.0)));
  4595  07ED  30A6               	movlw	166
  4596  07EE  00F2               	movwf	??___lcd_en_pulse
  4597  07EF                     u1897:
  4598  07EF  0BF2               	decfsz	??___lcd_en_pulse,f
  4599  07F0  2FEF               	goto	u1897
  4600  07F1  0000               	nop
  4601  07F2                     l1522:
  4602                           
  4603                           ;main.c: 46:     PORTAbits.RA4 = 0;
  4604  07F2  1283               	bcf	3,5	;RP0=0, select bank0
  4605  07F3  1303               	bcf	3,6	;RP1=0, select bank0
  4606  07F4  1205               	bcf	5,4	;volatile
  4607  07F5                     l54:
  4608  07F5  0008               	return
  4609  07F6                     __end_of___lcd_en_pulse:
  4610                           
  4611                           	psect	text20
  4612  07F6                     __ptext20:	
  4613 ;; *************** function _isr *****************
  4614 ;; Defined at:
  4615 ;;		line 23 in file "interrupts.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;		None
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;		None
  4620 ;; Return value:  Size  Location     Type
  4621 ;;                  1    wreg      void 
  4622 ;; Registers used:
  4623 ;;		None
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4629 ;;      Params:         0       0       0       0
  4630 ;;      Locals:         0       0       0       0
  4631 ;;      Temps:          2       0       0       0
  4632 ;;      Totals:         2       0       0       0
  4633 ;;Total ram usage:        2 bytes
  4634 ;; Hardware stack levels used:    1
  4635 ;; This function calls:
  4636 ;;		Nothing
  4637 ;; This function is called by:
  4638 ;;		Interrupt level 1
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642                           
  4643                           ;psect for function _isr
  4644  07F6                     _isr:
  4645  07F6                     i1l5:
  4646  07F6  0871               	movf	??_isr+1,w
  4647  07F7  008A               	movwf	10
  4648  07F8  0E70               	swapf	??_isr,w
  4649  07F9  0083               	movwf	3
  4650  07FA  0EFE               	swapf	btemp,f
  4651  07FB  0E7E               	swapf	btemp,w
  4652  07FC  0009               	retfie
  4653  07FD                     __end_of_isr:
  4654  007E                     btemp	set	126	;btemp
  4655  007E                     wtemp0	set	126
  4656                           
  4657                           	psect	intentry
  4658  0004                     __pintentry:	
  4659                           ;incstack = 0
  4660                           ; Regs used in _isr: []
  4661                           
  4662  0004                     interrupt_function:
  4663  007E                     saved_w	set	btemp
  4664  0004  00FE               	movwf	btemp
  4665  0005  0E03               	swapf	3,w
  4666  0006  00F0               	movwf	??_isr
  4667  0007  080A               	movf	10,w
  4668  0008  00F1               	movwf	??_isr+1
  4669  0009  118A  2FF6         	ljmp	_isr
  4670                           
  4671                           	psect	config
  4672                           
  4673                           ;Config register CONFIG @ 0x2007
  4674                           ;	Oscillator Selection bits
  4675                           ;	FOSC = INTOSCIO, INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O functio
      +                          n on RA5/OSC1/CLKIN
  4676                           ;	Watchdog Timer Enable bit
  4677                           ;	WDTE = OFF, WDT disabled
  4678                           ;	Power-up Timer Enable bit
  4679                           ;	PWRTE = OFF, PWRT disabled
  4680                           ;	MCLR Pin Function Select bit
  4681                           ;	MCLRE = ON, MCLR pin function is MCLR
  4682                           ;	Code Protection bit
  4683                           ;	CP = OFF, Program memory code protection is disabled
  4684                           ;	Data Code Protection bit
  4685                           ;	CPD = OFF, Data memory code protection is disabled
  4686                           ;	Brown Out Detect
  4687                           ;	BOREN = OFF, BOR disabled
  4688                           ;	Internal External Switchover bit
  4689                           ;	IESO = OFF, Internal External Switchover mode is disabled
  4690                           ;	Fail-Safe Clock Monitor Enabled bit
  4691                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4692  2007                     	org	8199
  4693  2007  30F4               	dw	12532

Data Sizes:
    Strings     34
    Constant    10
    Data        108
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     36      80
    BANK1            80      0      67
    BANK2            80      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_8(CODE[10]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[10]), 
		 -> STR_4(CODE[10]), STR_2(CODE[5]), STR_1(CODE[6]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_9(CODE[7]), ?_sprintf(BANK0[2]), STR_3(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), time(BANK0[8]), update_humi(BANK0[4]), update_temp(BANK0[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_send_string@string	PTR unsigned char  size(1) Largest target is 17
		 -> s_end(BANK1[17]), s_humi(BANK1[9]), s_temp(BANK1[12]), s_date(BANK0[5]), 
		 -> s_time(BANK0[5]), date(BANK1[9]), l_date(BANK1[5]), time(BANK0[8]), 
		 -> l_time(BANK0[5]), update_humi(BANK0[4]), current_humi(BANK0[4]), l_humi(BANK1[5]), 
		 -> update_temp(BANK0[5]), current_temp(BANK1[5]), l_temp(BANK1[5]), 


Critical Paths under _main in COMMON

    _main->_Draw_main_display_p1
    _main->_Draw_main_display_p2
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_display_ctrl->___lcd_cmd
    _LCD_Init->___lcd_cmd
    _Draw_settings_display->_LCD_send_string
    _Draw_main_display_p2->_LCD_send_string
    _LCD_display_clear->_LCD_set_cursor
    _LCD_display_clear->___lcd_send_char
    _Draw_main_display_p1->_LCD_send_string
    _LCD_set_cursor->___lcd_cmd
    ___lcd_cmd->___lcd_en_pulse
    ___lcd_cmd->___lcd_port_write
    _LCD_send_string->___lcd_send_char
    ___lcd_send_char->___lcd_en_pulse
    ___lcd_send_char->___lcd_port_write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_set_time
    _set_time->_sprintf
    _set_temp->_sprintf
    _set_humi->_sprintf
    _sprintf->___lwmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   44006
                                             32 BANK0      4     4      0
               _Draw_main_display_p1
               _Draw_main_display_p2
              _Draw_settings_display
                           _LCD_Init
                  _LCD_display_clear
                   _LCD_display_ctrl
                           _set_date
                           _set_humi
                           _set_temp
                           _set_time
 ---------------------------------------------------------------------------------
 (1) _set_time                                             8     8      0    8394
                                             24 BANK0      8     8      0
                  _LCD_display_clear
                    _LCD_send_string
                     _LCD_set_cursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _set_temp                                             5     5      0    8283
                                             24 BANK0      5     5      0
                  _LCD_display_clear
                    _LCD_send_string
                     _LCD_set_cursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _set_humi                                             3     3      0    8283
                                             24 BANK0      3     3      0
                  _LCD_display_clear
                    _LCD_send_string
                     _LCD_set_cursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             26    17      9    2326
                                              4 BANK0     20    11      9
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                             10 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _set_date                                             1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_display_ctrl                                     5     3      2     353
                                              4 COMMON     5     3      2
                          ___lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     110
                                              4 COMMON     2     2      0
                          ___lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _Draw_settings_display                                2     0      2    6377
                                              0 BANK0      2     0      2
                  _LCD_display_clear
                    _LCD_send_string
                     _LCD_set_cursor
                    ___lcd_send_char
 ---------------------------------------------------------------------------------
 (1) _Draw_main_display_p2                                 1     1      0    5957
                                             11 COMMON     1     1      0
                  _LCD_display_clear
                    _LCD_send_string
                     _LCD_set_cursor
 ---------------------------------------------------------------------------------
 (2) _LCD_display_clear                                    2     2      0    2478
                                              8 COMMON     2     2      0
                     _LCD_set_cursor
                    ___lcd_send_char
 ---------------------------------------------------------------------------------
 (1) _Draw_main_display_p1                                 1     1      0    3659
                                             11 COMMON     1     1      0
                    _LCD_send_string
                     _LCD_set_cursor
                    ___lcd_send_char
 ---------------------------------------------------------------------------------
 (2) _LCD_set_cursor                                       4     3      1    2251
                                              4 COMMON     4     3      1
                          ___lcd_cmd
 ---------------------------------------------------------------------------------
 (3) ___lcd_cmd                                            1     1      0     110
                                              3 COMMON     1     1      0
                     ___lcd_en_pulse
                   ___lcd_port_write
 ---------------------------------------------------------------------------------
 (2) _LCD_send_string                                      3     3      0    1228
                                              8 COMMON     3     3      0
                    ___lcd_send_char
 ---------------------------------------------------------------------------------
 (3) ___lcd_send_char                                      5     5      0     180
                                              3 COMMON     5     5      0
                     ___lcd_en_pulse
                   ___lcd_port_write
 ---------------------------------------------------------------------------------
 (4) ___lcd_port_write                                     1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) ___lcd_en_pulse                                       1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Draw_main_display_p1
     _LCD_send_string
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_set_cursor
       ___lcd_cmd
         ___lcd_en_pulse
         ___lcd_port_write
     ___lcd_send_char
       ___lcd_en_pulse
       ___lcd_port_write
   _Draw_main_display_p2
     _LCD_display_clear
       _LCD_set_cursor
         ___lcd_cmd
           ___lcd_en_pulse
           ___lcd_port_write
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_send_string
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_set_cursor
       ___lcd_cmd
         ___lcd_en_pulse
         ___lcd_port_write
   _Draw_settings_display
     _LCD_display_clear
       _LCD_set_cursor
         ___lcd_cmd
           ___lcd_en_pulse
           ___lcd_port_write
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_send_string
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_set_cursor
       ___lcd_cmd
         ___lcd_en_pulse
         ___lcd_port_write
     ___lcd_send_char
       ___lcd_en_pulse
       ___lcd_port_write
   _LCD_Init
     ___lcd_cmd
       ___lcd_en_pulse
       ___lcd_port_write
   _LCD_display_clear
     _LCD_set_cursor
       ___lcd_cmd
         ___lcd_en_pulse
         ___lcd_port_write
     ___lcd_send_char
       ___lcd_en_pulse
       ___lcd_port_write
   _LCD_display_ctrl
     ___lcd_cmd
       ___lcd_en_pulse
       ___lcd_port_write
   _set_date
   _set_humi
     _LCD_display_clear
       _LCD_set_cursor
         ___lcd_cmd
           ___lcd_en_pulse
           ___lcd_port_write
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_send_string
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_set_cursor
       ___lcd_cmd
         ___lcd_en_pulse
         ___lcd_port_write
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _set_temp
     _LCD_display_clear
       _LCD_set_cursor
         ___lcd_cmd
           ___lcd_en_pulse
           ___lcd_port_write
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_send_string
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_set_cursor
       ___lcd_cmd
         ___lcd_en_pulse
         ___lcd_port_write
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _set_time
     _LCD_display_clear
       _LCD_set_cursor
         ___lcd_cmd
           ___lcd_en_pulse
           ___lcd_port_write
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_send_string
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_set_cursor
       ___lcd_cmd
         ___lcd_en_pulse
         ___lcd_port_write
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      43       5       83.8%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     24      50       3      100.0%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      9F      10        0.0%
ABS                  0      0      9F       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat Oct 24 01:30:55 2020

                   _update_humi 0041                     _update_temp 002D                               pc 0002  
                            l60 0761                              l61 0767                              l54 07F5  
                            l62 0768                              l63 076E                              l71 0729  
                            l65 076F                              l57 0757                              l58 075A  
                            l59 0760                              l68 05FF                              l84 074D  
                            l77 07A9                              l95 078C                              fsr 0004  
                 ___lcd_cmd@cmd 0073                             l100 07D4                             l103 056C  
                           l200 006B                             l211 00EA                             l206 00B5  
                           l152 06AD                             l400 02C0                             l240 02E5  
                           l161 04AF                             l234 07BF                             l170 03F9  
                           l250 0340                             l242 02EB                             l155 06DB  
                           l219 0122                             l180 042A                             l228 0195  
                           l244 02F9                             l165 04AF                             l262 0353  
                           l246 02FD                             l271 037D                             l193 0525  
                           l185 04FB                             l274 038D                             l258 034B  
                           l267 037D                             l198 007D                             l387 01E8  
                           l676 05B0                             l686 0677                             _RA2 002A  
                           _RC0 0038                             _RC1 0039                             _RA5 002D  
                           _RC2 003A                             _RC3 003B                             _RC4 003C  
                           _RC5 003D                             i1l5 07F6                             u930 0753  
                           u931 0752                             u940 075E                             u941 075D  
                           u950 0765                             u951 0764                             u960 076C  
                           u961 076B                             u980 0776                             u981 0775  
                           u990 0780                             u975 070D                             u991 077F  
                           _isr 07F6                             fsr0 0004                             indf 0000  
 __size_of_Draw_main_display_p1 0036   __size_of_Draw_main_display_p2 002E                            l2100 0386  
                          l2020 02D3                            l2012 02C1                            l2102 038A  
                          l2030 02DC                            l2022 02D6                            l2014 02C4  
                          l2040 02F2                            l2032 02DF                            l2024 02D7  
                          l2016 02C8                            l2050 0306                            l2042 02F8  
                          l2034 02EC                            l2026 02D8                            l2018 02CF  
                          l2060 0322                            l2052 030A                            l2044 0301  
                          l2036 02EE                            l2028 02DB                            l2126 0205  
                          l2062 0324                            l2054 0310                            l2046 0302  
                          l2038 02EF                            l1520 07EA                            l1600 0652  
                          l2080 0357                            l2072 033C                            l2064 032F  
                          l2056 0315                            l2048 0304                            l1522 07F2  
                          l1530 0765                            l1602 0656                            l1610 0673  
                          l2090 036F                            l2082 035C                            l2074 0346  
                          l2058 031D                            l2066 0331                            l1532 076C  
                          l1524 074F                            l1540 0709                            l1620 079E  
                          l1604 0660                            l1700 026A                            l2092 0373  
                          l2084 0360                            l2076 034A                            l2068 0337  
                          l1518 07E6                            l1526 0753                            l1550 0722  
                          l1542 070A                            l1614 078E                            l1534 05F5  
                          l1622 07C0                            l1606 0666                            l1702 0292  
                          l1710 02BA                            l2094 0379                            l2086 0365  
                          l2078 034F                            l1528 075E                            l1552 0726  
                          l1544 0716                            l1616 0791                            l1536 05F8  
                          l1560 0780                            l1632 07C6                            l1624 07C0  
                          l1800 044D                            l1720 072F                            l1608 066D  
                          l1704 029B                            l1640 019D                            l2096 0380  
                          l2088 0369                            l1546 071B                            l1538 0706  
                          l1618 079A                            l1562 0784                            l1554 0771  
                          l1634 07CA                            l1626 07C5                            l1810 0474  
                          l1802 0453                            l1730 0743                            l1722 0733  
                          l1570 0575                            l1706 02A1                            l1650 01BE  
                          l1642 01A3                            l2098 0382                            l1548 071F  
                          l1564 0788                            l1556 0776                            l1636 07CE  
                          l1820 04A1                            l1812 0480                            l1804 045F  
                          l1740 0533                            l1732 0744                            l1724 0738  
                          l1580 0598                            l1572 0578                            l1660 01E2  
                          l1652 01C2                            l1644 01AC                            l1708 02AA  
                          l1900 002A                            l1558 077B                            l1822 04A5  
                          l1814 0484                            l1806 0463                            l1750 0550  
                          l1742 053F                            l1726 073D                            l1734 0749  
                          l1718 072B                            l1582 059E                            l1574 057F  
                          l1566 056D                            l1670 0213                            l1654 01C8  
                          l1646 01B3                            l1638 0196                            l1830 03B1  
                          l1910 0046                            l1902 0030                            l1816 048E  
                          l1808 046D                            l1760 0564                            l1752 0554  
                          l1744 0544                            l1736 0526                            l1728 073E  
                          l1584 059F                            l1576 0583                            l1568 056F  
                          l1592 063C                            l1680 022C                            l1672 021B  
                          l1656 01CD                            l1648 01B5                            l1840 03D3  
                          l1832 03B5                            l1824 0396                            l1920 0062  
                          l1912 004B                            l1904 0033                            l1770 068C  
                          l1818 0495                            l1762 0568                            l1754 0558  
                          l1746 0548                            l1738 052F                            l1586 05A6  
                          l1578 0587                            l1594 0644                            l1690 0246  
                          l1674 021F                            l1658 01DC                            l1850 03E9  
                          l1842 03D4                            l1834 03BB                            l1826 039E  
                          l1930 0081                            l1922 0068                            l1914 004F  
                          l1906 0038                            l1772 0690                            l1764 0678  
                          l1780 06AE                            l1756 055C                            l1748 054C  
                          l1588 05AC                            l1596 0647                            l1692 0250  
                          l1676 0223                            l1668 01F5                            l1860 0416  
                          l1852 03EA                            l1844 03D9                            l1836 03C0  
                          l1828 03A2                            l1940 00BE                            l1932 00A1  
                          l1924 006E                            l1916 0055                            l1908 003C  
                   main@lastCLK 006B                            l1774 0699                            l1766 067C  
                          l1790 06D7                            l1782 06B6                            l1758 0560  
                          l1598 064E                            l1694 0256                            l1686 022E  
                          l1678 0227                            l1870 04BC                            l1862 0420  
                          l1854 03F0                            l1846 03DC                            l1838 03C8  
                          l1950 00D9                            l1942 00C4                            l1934 00AB  
                          l1926 0074                            l1918 005A                            l1776 06A1  
                          l1768 0684                            l1784 06BA                            l1792 042B  
                          l1696 025F                            l1880 04E2                            l1872 04CB  
                          l1856 03F5                            l1848 03DE                            l1864 0424  
                          l1960 010E                            l1952 00DB                            l1944 00C9  
                          l1928 0079                            l1936 00AF                            l1778 06A9  
                          l1786 06C6                            l1794 0433                            l1698 0265  
                          l1890 04F7                            l1882 04E7                            l1874 04CF  
                          l1866 04B0                            l1858 03FD                            l1970 0131  
                          l1962 0118                            l1954 00E1                            l1946 00D1  
                          l1938 00BA                            l1788 06CB                            l1796 043F  
                          l1892 04FF                            l1884 04EA                            l1876 04D5  
                          l1868 04B8                            l1980 0161                            l1972 0136  
                          l1956 00E6                            l1948 00D6                            l1964 011C  
                          l1798 0443                            l1990 07B0                            l1894 0511  
                          l1886 04EC                            l1878 04DA                            l1982 0181  
                          l1974 013E                            l1966 0127                            l1958 00EE  
                          l1992 07B6                            l1896 051B                            l1888 04F2  
                          l1984 018B                            l1976 014D                            l1968 012B  
                          l1994 07BB                            l1898 051F                            l1978 015B  
                          l1986 018F                            l1988 07AA                            l1998 07BB  
                          ?_isr 0070                            STR_1 062B                            STR_2 0631  
                          STR_3 0639                            STR_4 061A                            STR_5 061A  
                          STR_6 0636                            STR_7 0639                            STR_8 061A  
                          STR_9 0624                            u1000 0575                            u1001 0574  
                          u1020 0587                            u1100 0660                            u1021 0586  
                          u1101 065F                            u1015 0579                            u1040 0598  
                          u1120 0673                            u1200 0250                            u1041 0597  
                          u1121 0672                            u1105 065C                            u1201 024F  
                          u1130 07A9                            u1210 0256                            u1131 07A8  
                          u1035 0588                            u1115 0667                            u1211 0255  
                          u1140 07D4                            u1300 0495                            u1060 05AC  
                          u1220 02AA                            u1141 07D3                            u1301 0494  
                          u1061 05AB                            u1045 0594                            u1221 02A9  
                          u1070 0644                            u1230 02BA                            u1150 01A3  
                          u1310 03BB                            u1055 05A0                            u1071 0643  
                          u1231 02B9                            u1151 01A2                            u1311 03BA  
                          u1240 0738                            u1160 01C8                            u1400 04DA  
                          u1320 03C0                            u1241 0737                            u1161 01C7  
                          u1401 04D9                            u1321 03BF                            u1250 073D  
                          u1090 0656                            u1170 01F4                            u1410 04E2  
                          u1330 03C8                            u1251 073C                            u1091 0655  
                          u1171 01F3                            u1411 04E1                            u1331 03C7  
                          u1260 0743                            u1180 0223                            u1420 04E7  
                          u1340 03D3                            u1500 00B5                            u1261 0742  
                          u1085 0648                            u1181 0222                            u1421 04E6  
                          u1341 03D2                            u1501 00B4                            u1270 0433  
                          u1190 0245                            u1430 04F2                            u1350 03D9  
                          u1510 00B9                            u1271 0432                            u1191 0244  
                          u1431 04F1                            u1351 03D8                            u1511 00B8  
                          u1280 0453                            u1440 0525                            u1360 03E9  
                          u1600 0136                            u1520 00C4                            u1281 0452  
                          u1441 0524                            u1361 03E8                            u1601 0135  
                          u1521 00C3                            u1290 0474                            u1370 03F0  
                          u1610 013E                            u1530 00C9                            u1450 0055  
                          u1291 0473                            u1195 0241                            u1371 03EF  
                          u1611 013D                            u1531 00C8                            u1451 0054  
                          u1380 042A                            u1620 0195                            u1540 00D1  
                          u1460 005A                            u1700 0310                            u1381 0429  
                          u1621 0194                            u1541 00D0                            u1461 0059  
                          u1701 030F                            u1630 07B6                            u1390 04D5  
                          u1550 00D6                            u1470 0062                            u1710 0315  
                          u1631 07B5                            u1391 04D4                            u1551 00D5  
                          u1471 0061                            u1711 0314                            u1640 07BB  
                          u1560 00E1                            u1480 0068                            u1800 0365  
                          u1720 031D                            u1641 07BA                            u1561 00E0  
                          u1481 0067                            u1801 0364                            u1721 031C  
                          u1570 0122                            u1490 0074                            u1810 036F  
                          u1730 0322                            u1571 0121                            u1491 0073  
                          u1811 036E                            u1731 0321                            u1580 0126  
                          u1820 0379                            u1740 0337                            u1660 02EB  
                          u1581 0125                            u1821 0378                            u1741 0336  
                          u1661 02EA                            u1590 0131                            u1830 0386  
                          u1750 034A                            u1670 02F8                            u1591 0130  
                          u1831 0385                            u1751 0349                            u1671 02F7  
                          u1840 0393                            u1760 034F                            u1680 02FD  
                          u1841 0392                            u1761 034E                            u1681 02FC  
                          u1770 0353                            u1690 0301                            u1771 0352  
                          u1691 0300                            u1780 0357                            u1781 0356  
                          u1790 035C                            u1791 035B                            u1857 052A  
                          u1867 0537                            u1877 0541                            u1887 07E8  
                          u1897 07EF                  ___lcd_en_pulse 07E6                            _date 00BD  
                          _main 02C1                            _time 0025                            btemp 007E  
    __size_of_LCD_display_clear 0015         ??_Draw_settings_display 007B                            start 000B  
                         ??_isr 0070                __end_of_LCD_Init 056D                           ?_main 0070  
                         _ANSEL 0091                           _T1CON 0010                 __end_of___lwdiv 05B1  
               __end_of___lwmod 0678                           _TMR1H 000F                           _TMR1L 000E  
                         _PORTA 0005                           _PORTC 0007                           _TRISA 0085  
                         _TRISC 0087              LCD_display_clear@i 0079                 __end_of_dpowers 061A  
        __end_of___lcd_en_pulse 07F6                           _s_end 00A0                           pclath 000A  
                         status 0003                           wtemp0 007E                 __end_of_sprintf 02C1  
     __size_of___lcd_port_write 0022         __size_of_LCD_set_cursor 001D                 __initialization 000D  
               ___lcd_send_char 0705                    __end_of_main 0396                          ??_main 0069  
            LCD_set_cursor@temp 0076        __end_of_LCD_display_ctrl 074E                 ?___lcd_en_pulse 0070  
                        _CMCON0 0019                          _TMR1IF 0060                          _TMR1ON 0080  
           ___lcd_send_char@low 0076                          _l_date 00DE                       ??___lwdiv 0076  
                     ??___lwmod 007A                          _l_humi 00D4                          _l_temp 00D9  
                        _l_time 0032                          _s_date 0037                          _s_humi 00C6  
                        _s_temp 00B1                          _s_time 003C                __end_of_set_date 07C0  
              __end_of_set_humi 0526                __end_of_set_temp 042B                __end_of_set_time 0196  
                        saved_w 007E                       ??_sprintf 0056        __size_of_LCD_send_string 001D  
            __size_of___lcd_cmd 000C         __end_of__initialization 0027                       ?_LCD_Init 0070  
       __end_of___lcd_send_char 072A                  __pcstackCOMMON 0070                    __pidataBANK0 06DC  
                  __pidataBANK1 05B1                      __pbssBANK0 006D                      ??_LCD_Init 0074  
              ___lcd_port_write 074E    __end_of_Draw_main_display_p1 06AE    __end_of_Draw_main_display_p2 06DC  
                _LCD_set_cursor 0770  __size_of_Draw_settings_display 0085   __end_of_Draw_settings_display 04B0  
                    __pmaintext 02C1                      __pintentry 0004               __end_of___lcd_cmd 0600  
         ___lcd_port_write@data 0072                  main@currentCLK 006C                      __stringtab 0600  
        __end_of_LCD_set_cursor 078D            ___lcd_send_char@high 0075                ?___lcd_send_char 0070  
             ??_LCD_send_string 0078                       ?_set_date 0070                       ?_set_humi 0070  
                     ?_set_temp 0070                       ?_set_time 0070                         ___lwdiv 056D  
                       ___lwmod 063C                         __ptext1 002A                         __ptext2 0396  
                       __ptext3 04B0                         __ptext4 0196                         __ptext5 063C  
                       __ptext6 056D                         __ptext7 07AA                         __ptext8 072A  
                       __ptext9 0526                       _T1CONbits 0010                         _counter 006D  
                       _dpowers 0610                ??___lcd_en_pulse 0072                    __size_of_isr 0007  
          LCD_display_ctrl@temp 0078               ?_LCD_display_ctrl 0074                         _sprintf 0196  
          end_of_initialization 0027              ??_LCD_display_ctrl 0076                 ?_LCD_set_cursor 0074  
       LCD_display_ctrl@display 0077                      ??_set_date 0072                      ??_set_humi 0061  
                    ??_set_temp 0061                      ??_set_time 0061                      _time_hours 0021  
                     _PORTAbits 0005            _Draw_main_display_p1 0678            _Draw_main_display_p2 06AE  
             __size_of_LCD_Init 0047        __end_of___lcd_port_write 0770           ?_Draw_main_display_p1 0070  
         ?_Draw_main_display_p2 0070             start_initialization 000D                     __end_of_isr 07FD  
             LCD_set_cursor@row 0077            LCD_set_cursor@column 0074                      init_fetch0 07D5  
                   __pdataBANK0 0020                     __pdataBANK1 00A0                       ___lcd_cmd 05F4  
                     ___latbits 0001                   __pcstackBANK0 0049                 _LCD_send_string 078D  
                   sprintf@flag 0059                     sprintf@prec 005A                    _current_humi 0045  
                  _current_temp 00CF                ___lwdiv@dividend 0074           LCD_send_string@string 007A  
         _Draw_settings_display 042B               __size_of_set_date 0016                        ?___lwdiv 0072  
             __size_of_set_humi 0076                        ?___lwmod 0049               __size_of_set_temp 0095  
             __size_of_set_time 016C                       __pstrings 0600          ??_Draw_main_display_p1 007B  
        ??_Draw_main_display_p2 007B                      ?___lcd_cmd 0070                ___lwdiv@quotient 0077  
              ??_LCD_set_cursor 0075                        ?_sprintf 004D                LCD_send_string@i 0079  
                     _s_lastCLK 006E               interrupt_function 0004                        _LCD_Init 0526  
                  _humi_integer 0022          LCD_display_ctrl@cursor 0074       __size_of_LCD_display_ctrl 0024  
                  _s_currentCLK 006F        __size_of___lcd_send_char 0025                     __stringbase 060F  
       __end_of_LCD_send_string 07AA           ___lcd_send_char@ascii 0077                   set_time@am_pm 0068  
        ?_Draw_settings_display 0049                __size_of___lwdiv 0044                __size_of___lwmod 003C  
            __end_of__stringtab 0610                     ??___lcd_cmd 0073                      sprintf@val 005E  
             ?___lcd_port_write 0070                 ___lwdiv@divisor 0072                 ___lwdiv@counter 0079  
            ??___lcd_port_write 0072                        __ptext10 042B                        __ptext11 06AE  
                      __ptext20 07F6                        __ptext12 07C0                        __ptext13 0678  
                      __ptext14 0770                        __ptext15 05F4                        __ptext16 078D  
                      __ptext17 0705                        __ptext18 074E                        __ptext19 07E6  
              __size_of_sprintf 012B         __size_of___lcd_en_pulse 0010                   __size_of_main 00D5  
         LCD_display_ctrl@blink 0075               _LCD_display_clear 07C0                        _set_date 07AA  
                      _set_humi 04B0                        _set_temp 0396                        _set_time 002A  
            ?_LCD_display_clear 0070                    _temp_decimal 0023             ??_LCD_display_clear 0078  
              ?_LCD_send_string 0070               ??___lcd_send_char 0073                    _temp_integer 0024  
                      init_ram0 07D9        Draw_settings_display@ctr 0049                        intlevel1 0000  
                     sprintf@ap 005B                       sprintf@cp 005C                       sprintf@sp 004D  
                  _time_minutes 0020                ___lwmod@dividend 004B       __end_of_LCD_display_clear 07D5  
                     stringcode 060A                _LCD_display_ctrl 072A                        sprintf@c 0060  
                      sprintf@f 004F                 ___lwmod@divisor 0049                 ___lwmod@counter 007B  
                      stringdir 060A                        stringtab 0600  
