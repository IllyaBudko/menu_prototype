

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Fri Oct 23 19:40:58 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F688
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.30
    31                           ; Generated 26/08/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F688 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0007                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0087                     	;# 
    94  008C                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0095                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0007                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001E                     	;# 
   138  001F                     	;# 
   139  0081                     	;# 
   140  0085                     	;# 
   141  0087                     	;# 
   142  008C                     	;# 
   143  008E                     	;# 
   144  008F                     	;# 
   145  0090                     	;# 
   146  0091                     	;# 
   147  0095                     	;# 
   148  0095                     	;# 
   149  0096                     	;# 
   150  0096                     	;# 
   151  0097                     	;# 
   152  0098                     	;# 
   153  0099                     	;# 
   154  009A                     	;# 
   155  009A                     	;# 
   156  009B                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  0000                     	;# 
   162  0001                     	;# 
   163  0002                     	;# 
   164  0003                     	;# 
   165  0004                     	;# 
   166  0005                     	;# 
   167  0007                     	;# 
   168  000A                     	;# 
   169  000B                     	;# 
   170  000C                     	;# 
   171  000E                     	;# 
   172  000E                     	;# 
   173  000F                     	;# 
   174  0010                     	;# 
   175  0011                     	;# 
   176  0012                     	;# 
   177  0013                     	;# 
   178  0014                     	;# 
   179  0015                     	;# 
   180  0016                     	;# 
   181  0017                     	;# 
   182  0018                     	;# 
   183  0019                     	;# 
   184  001A                     	;# 
   185  001E                     	;# 
   186  001F                     	;# 
   187  0081                     	;# 
   188  0085                     	;# 
   189  0087                     	;# 
   190  008C                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0091                     	;# 
   195  0095                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009A                     	;# 
   204  009B                     	;# 
   205  009C                     	;# 
   206  009D                     	;# 
   207  009E                     	;# 
   208  009F                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0007                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001E                     	;# 
   234  001F                     	;# 
   235  0081                     	;# 
   236  0085                     	;# 
   237  0087                     	;# 
   238  008C                     	;# 
   239  008E                     	;# 
   240  008F                     	;# 
   241  0090                     	;# 
   242  0091                     	;# 
   243  0095                     	;# 
   244  0095                     	;# 
   245  0096                     	;# 
   246  0096                     	;# 
   247  0097                     	;# 
   248  0098                     	;# 
   249  0099                     	;# 
   250  009A                     	;# 
   251  009A                     	;# 
   252  009B                     	;# 
   253  009C                     	;# 
   254  009D                     	;# 
   255  009E                     	;# 
   256  009F                     	;# 
   257  0000                     	;# 
   258  0001                     	;# 
   259  0002                     	;# 
   260  0003                     	;# 
   261  0004                     	;# 
   262  0005                     	;# 
   263  0007                     	;# 
   264  000A                     	;# 
   265  000B                     	;# 
   266  000C                     	;# 
   267  000E                     	;# 
   268  000E                     	;# 
   269  000F                     	;# 
   270  0010                     	;# 
   271  0011                     	;# 
   272  0012                     	;# 
   273  0013                     	;# 
   274  0014                     	;# 
   275  0015                     	;# 
   276  0016                     	;# 
   277  0017                     	;# 
   278  0018                     	;# 
   279  0019                     	;# 
   280  001A                     	;# 
   281  001E                     	;# 
   282  001F                     	;# 
   283  0081                     	;# 
   284  0085                     	;# 
   285  0087                     	;# 
   286  008C                     	;# 
   287  008E                     	;# 
   288  008F                     	;# 
   289  0090                     	;# 
   290  0091                     	;# 
   291  0095                     	;# 
   292  0095                     	;# 
   293  0096                     	;# 
   294  0096                     	;# 
   295  0097                     	;# 
   296  0098                     	;# 
   297  0099                     	;# 
   298  009A                     	;# 
   299  009A                     	;# 
   300  009B                     	;# 
   301  009C                     	;# 
   302  009D                     	;# 
   303  009E                     	;# 
   304  009F                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0007                     	;# 
   312  000A                     	;# 
   313  000B                     	;# 
   314  000C                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001E                     	;# 
   330  001F                     	;# 
   331  0081                     	;# 
   332  0085                     	;# 
   333  0087                     	;# 
   334  008C                     	;# 
   335  008E                     	;# 
   336  008F                     	;# 
   337  0090                     	;# 
   338  0091                     	;# 
   339  0095                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353                           
   354                           	psect	idataBANK0
   355  02F2                     __pidataBANK0:
   356                           
   357                           ;initializer for _date
   358  02F2  3433               	retlw	51
   359  02F3  3430               	retlw	48
   360  02F4  342F               	retlw	47
   361  02F5  3430               	retlw	48
   362  02F6  3437               	retlw	55
   363  02F7  342F               	retlw	47
   364  02F8  3439               	retlw	57
   365  02F9  3432               	retlw	50
   366  02FA  3400               	retlw	0
   367                           
   368                           ;initializer for _time
   369  02FB  3431               	retlw	49
   370  02FC  3432               	retlw	50
   371  02FD  343A               	retlw	58
   372  02FE  3430               	retlw	48
   373  02FF  3430               	retlw	48
   374  0300  3450               	retlw	80
   375  0301  344D               	retlw	77
   376  0302  3400               	retlw	0
   377                           
   378                           ;initializer for _update_temp
   379  0303  3432               	retlw	50
   380  0304  3433               	retlw	51
   381  0305  342E               	retlw	46
   382  0306  3435               	retlw	53
   383  0307  3400               	retlw	0
   384                           
   385                           ;initializer for _current_temp
   386  0308  3432               	retlw	50
   387  0309  3431               	retlw	49
   388  030A  342E               	retlw	46
   389  030B  3435               	retlw	53
   390  030C  3400               	retlw	0
   391                           
   392                           ;initializer for _update_humi
   393  030D  3434               	retlw	52
   394  030E  3435               	retlw	53
   395  030F  3425               	retlw	37
   396  0310  3400               	retlw	0
   397                           
   398                           ;initializer for _current_humi
   399  0311  3433               	retlw	51
   400  0312  3438               	retlw	56
   401  0313  3425               	retlw	37
   402  0314  3400               	retlw	0
   403                           
   404                           	psect	strings
   405  0200                     __pstrings:
   406  0200                     stringtab:
   407  0200                     __stringtab:
   408                           
   409                           ;	String table - string pointers are 1 byte each
   410  0200  1BFF               	btfsc	btemp+1,7
   411  0201  2A0A               	ljmp	stringcode
   412  0202  1383               	bcf	3,7
   413  0203  187F               	btfsc	btemp+1,0
   414  0204  1783               	bsf	3,7
   415  0205  0800               	movf	0,w
   416  0206  0A84               	incf	4,f
   417  0207  1903               	skipnz
   418  0208  0AFF               	incf	btemp+1,f
   419  0209  0008               	return
   420  020A                     stringcode:
   421  020A                     stringdir:
   422  020A  3002               	movlw	high stringdir
   423  020B  008A               	movwf	10
   424  020C  0804               	movf	4,w
   425  020D  0A84               	incf	4,f
   426  020E  0782               	addwf	2,f
   427  020F                     __stringbase:
   428  020F  3400               	retlw	0
   429  0210                     __end_of__stringtab:
   430  0210                     _s_temp:
   431  0210  3454               	retlw	84
   432  0211  3465               	retlw	101
   433  0212  346D               	retlw	109
   434  0213  3470               	retlw	112
   435  0214  3465               	retlw	101
   436  0215  3472               	retlw	114
   437  0216  3461               	retlw	97
   438  0217  3474               	retlw	116
   439  0218  3475               	retlw	117
   440  0219  3472               	retlw	114
   441  021A  3465               	retlw	101
   442  021B  3400               	retlw	0
   443  021C                     __end_of_s_temp:
   444  021C                     _s_humi:
   445  021C  3448               	retlw	72
   446  021D  3475               	retlw	117
   447  021E  346D               	retlw	109
   448  021F  3469               	retlw	105
   449  0220  3464               	retlw	100
   450  0221  3469               	retlw	105
   451  0222  3474               	retlw	116
   452  0223  3479               	retlw	121
   453  0224  3400               	retlw	0
   454  0225                     __end_of_s_humi:
   455  0225                     _l_humi:
   456  0225  3448               	retlw	72
   457  0226  3475               	retlw	117
   458  0227  346D               	retlw	109
   459  0228  3469               	retlw	105
   460  0229  3400               	retlw	0
   461  022A                     __end_of_l_humi:
   462  022A                     _l_temp:
   463  022A  3454               	retlw	84
   464  022B  3465               	retlw	101
   465  022C  346D               	retlw	109
   466  022D  3470               	retlw	112
   467  022E  3400               	retlw	0
   468  022F                     __end_of_l_temp:
   469  022F                     _l_date:
   470  022F  3444               	retlw	68
   471  0230  3461               	retlw	97
   472  0231  3474               	retlw	116
   473  0232  3465               	retlw	101
   474  0233  3400               	retlw	0
   475  0234                     __end_of_l_date:
   476  0234                     _l_time:
   477  0234  3454               	retlw	84
   478  0235  3469               	retlw	105
   479  0236  346D               	retlw	109
   480  0237  3465               	retlw	101
   481  0238  3400               	retlw	0
   482  0239                     __end_of_l_time:
   483  0239                     _s_date:
   484  0239  3444               	retlw	68
   485  023A  3461               	retlw	97
   486  023B  3474               	retlw	116
   487  023C  3465               	retlw	101
   488  023D  3400               	retlw	0
   489  023E                     __end_of_s_date:
   490  023E                     _s_time:
   491  023E  3454               	retlw	84
   492  023F  3469               	retlw	105
   493  0240  346D               	retlw	109
   494  0241  3465               	retlw	101
   495  0242  3400               	retlw	0
   496  0243                     __end_of_s_time:
   497  0010                     _T1CON	set	16
   498  000F                     _TMR1H	set	15
   499  000E                     _TMR1L	set	14
   500  0010                     _T1CONbits	set	16
   501  0007                     _PORTC	set	7
   502  0005                     _PORTA	set	5
   503  0019                     _CMCON0	set	25
   504  0005                     _PORTAbits	set	5
   505  003D                     _RC5	set	61
   506  003C                     _RC4	set	60
   507  0080                     _TMR1ON	set	128
   508  002A                     _RA2	set	42
   509  0060                     _TMR1IF	set	96
   510  002D                     _RA5	set	45
   511  003B                     _RC3	set	59
   512  003A                     _RC2	set	58
   513  0039                     _RC1	set	57
   514  0038                     _RC0	set	56
   515  0087                     _TRISC	set	135
   516  0085                     _TRISA	set	133
   517  0091                     _ANSEL	set	145
   518                           
   519                           	psect	cinit
   520  000D                     start_initialization:	
   521                           ; #config settings
   522                           
   523  000D                     __initialization:
   524                           
   525                           ; Initialize objects allocated to BANK0
   526  000D  1383               	bcf	3,7	;select IRP bank0
   527  000E  3043               	movlw	low (__pdataBANK0+35)
   528  000F  00FD               	movwf	btemp+-1
   529  0010  3002               	movlw	high __pidataBANK0
   530  0011  00FE               	movwf	btemp
   531  0012  30F2               	movlw	low __pidataBANK0
   532  0013  00FF               	movwf	btemp+1
   533  0014  3020               	movlw	low __pdataBANK0
   534  0015  0084               	movwf	4
   535  0016  118A  236D  118A   	fcall	init_ram0
   536                           
   537                           ; Clear objects allocated to COMMON
   538  0019  01FB               	clrf	__pbssCOMMON& (0+127)
   539  001A                     end_of_initialization:	
   540                           ;End of C runtime variable initialization code
   541                           
   542  001A                     __end_of__initialization:
   543  001A  0183               	clrf	3
   544  001B  118A  281D         	ljmp	_main	;jump to C main() function
   545                           
   546                           	psect	bssCOMMON
   547  007B                     __pbssCOMMON:
   548  007B                     _counter:
   549  007B                     	ds	1
   550                           
   551                           	psect	dataBANK0
   552  0020                     __pdataBANK0:
   553  0020                     _date:
   554  0020                     	ds	9
   555  0029                     _time:
   556  0029                     	ds	8
   557  0031                     _update_temp:
   558  0031                     	ds	5
   559  0036                     _current_temp:
   560  0036                     	ds	5
   561  003B                     _update_humi:
   562  003B                     	ds	4
   563  003F                     _current_humi:
   564  003F                     	ds	4
   565                           
   566                           	psect	inittext
   567  0369                     init_fetch0:	
   568                           ;	Called with low address in FSR and high address in W
   569                           
   570  0369  087E               	movf	btemp,w
   571  036A  008A               	movwf	10
   572  036B  087F               	movf	btemp+1,w
   573  036C  0082               	movwf	2
   574  036D                     init_ram0:	
   575                           ;Called with:
   576                           ;	high address of idata address in btemp 
   577                           ;	low address of idata address in btemp+1 
   578                           ;	low address of data in FSR
   579                           ;	high address + 1 of data in btemp-1
   580                           
   581  036D  118A  2369  118A   	fcall	init_fetch0
   582  0370  0080               	movwf	0
   583  0371  0A84               	incf	4,f
   584  0372  0804               	movf	4,w
   585  0373  067D               	xorwf	btemp+-1,w
   586  0374  1903               	btfsc	3,2
   587  0375  3400               	retlw	0
   588  0376  0AFF               	incf	btemp+1,f
   589  0377  1903               	btfsc	3,2
   590  0378  0AFE               	incf	btemp,f
   591  0379  2B6D               	goto	init_ram0
   592                           
   593                           	psect	cstackCOMMON
   594  0070                     __pcstackCOMMON:
   595  0070                     ?_isr:
   596  0070                     ??_isr:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?___lcd_en_pulse:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?___lcd_port_write:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?___lcd_cmd:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?___lcd_send_char:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_LCD_display_clear:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ?_LCD_Init:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ?_Draw_main_display_p1:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ?_Draw_main_display_p2:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_Draw_settings_display:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_main:	
   627                           ; 1 bytes @ 0x0
   628                           
   629                           
   630                           ; 1 bytes @ 0x0
   631  0070                     	ds	2
   632  0072                     ??___lcd_en_pulse:
   633  0072                     ??___lcd_port_write:	
   634                           ; 1 bytes @ 0x2
   635                           
   636  0072                     ___lcd_port_write@data:	
   637                           ; 1 bytes @ 0x2
   638                           
   639                           
   640                           ; 1 bytes @ 0x2
   641  0072                     	ds	1
   642  0073                     ??___lcd_cmd:
   643  0073                     ??___lcd_send_char:	
   644                           ; 1 bytes @ 0x3
   645                           
   646  0073                     ___lcd_cmd@cmd:	
   647                           ; 1 bytes @ 0x3
   648                           
   649                           
   650                           ; 1 bytes @ 0x3
   651  0073                     	ds	1
   652  0074                     ?_LCD_display_ctrl:
   653  0074                     ?_LCD_set_cursor:	
   654                           ; 1 bytes @ 0x4
   655                           
   656  0074                     ??_LCD_Init:	
   657                           ; 1 bytes @ 0x4
   658                           
   659  0074                     LCD_display_ctrl@cursor:	
   660                           ; 1 bytes @ 0x4
   661                           
   662  0074                     LCD_set_cursor@column:	
   663                           ; 1 bytes @ 0x4
   664                           
   665                           
   666                           ; 1 bytes @ 0x4
   667  0074                     	ds	1
   668  0075                     ??_LCD_set_cursor:
   669  0075                     ___lcd_send_char@high:	
   670                           ; 1 bytes @ 0x5
   671                           
   672  0075                     LCD_display_ctrl@blink:	
   673                           ; 1 bytes @ 0x5
   674                           
   675                           
   676                           ; 1 bytes @ 0x5
   677  0075                     	ds	1
   678  0076                     ??_LCD_display_ctrl:
   679  0076                     ___lcd_send_char@low:	
   680                           ; 1 bytes @ 0x6
   681                           
   682  0076                     LCD_set_cursor@temp:	
   683                           ; 1 bytes @ 0x6
   684                           
   685                           
   686                           ; 1 bytes @ 0x6
   687  0076                     	ds	1
   688  0077                     ___lcd_send_char@ascii:
   689  0077                     LCD_display_ctrl@display:	
   690                           ; 1 bytes @ 0x7
   691                           
   692  0077                     LCD_set_cursor@row:	
   693                           ; 1 bytes @ 0x7
   694                           
   695                           
   696                           ; 1 bytes @ 0x7
   697  0077                     	ds	1
   698  0078                     ?_LCD_send_string:
   699  0078                     ??_LCD_display_clear:	
   700                           ; 1 bytes @ 0x8
   701                           
   702  0078                     LCD_display_ctrl@temp:	
   703                           ; 1 bytes @ 0x8
   704                           
   705  0078                     LCD_send_string@string:	
   706                           ; 1 bytes @ 0x8
   707                           
   708                           
   709                           ; 2 bytes @ 0x8
   710  0078                     	ds	1
   711  0079                     LCD_display_clear@i:
   712                           
   713                           ; 1 bytes @ 0x9
   714  0079                     	ds	1
   715  007A                     ??_LCD_send_string:
   716                           
   717                           ; 1 bytes @ 0xA
   718  007A                     	ds	1
   719                           
   720                           	psect	cstackBANK0
   721  0043                     __pcstackBANK0:
   722  0043                     LCD_send_string@i:
   723                           
   724                           ; 1 bytes @ 0x0
   725  0043                     	ds	1
   726  0044                     ??_Draw_main_display_p1:
   727  0044                     ??_Draw_main_display_p2:	
   728                           ; 1 bytes @ 0x1
   729                           
   730  0044                     ??_Draw_settings_display:	
   731                           ; 1 bytes @ 0x1
   732                           
   733                           
   734                           ; 1 bytes @ 0x1
   735  0044                     	ds	2
   736  0046                     ??_main:
   737                           
   738                           ; 1 bytes @ 0x3
   739  0046                     	ds	1
   740  0047                     main@lastCLK:
   741                           
   742                           ; 1 bytes @ 0x4
   743  0047                     	ds	1
   744  0048                     main@currentCLK:
   745                           
   746                           ; 1 bytes @ 0x5
   747  0048                     	ds	1
   748                           
   749                           	psect	maintext
   750  001D                     __pmaintext:	
   751 ;;
   752 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   753 ;;
   754 ;; *************** function _main *****************
   755 ;; Defined at:
   756 ;;		line 292 in file "main.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;		None
   759 ;; Auto vars:     Size  Location     Type
   760 ;;  currentCLK      1    5[BANK0 ] unsigned char 
   761 ;;  lastCLK         1    4[BANK0 ] unsigned char 
   762 ;; Return value:  Size  Location     Type
   763 ;;                  1    wreg      void 
   764 ;; Registers used:
   765 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   766 ;; Tracked objects:
   767 ;;		On entry : B00/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   771 ;;      Params:         0       0       0       0
   772 ;;      Locals:         0       2       0       0
   773 ;;      Temps:          0       1       0       0
   774 ;;      Totals:         0       3       0       0
   775 ;;Total ram usage:        3 bytes
   776 ;; Hardware stack levels required when called:    6
   777 ;; This function calls:
   778 ;;		_Draw_main_display_p1
   779 ;;		_Draw_main_display_p2
   780 ;;		_Draw_settings_display
   781 ;;		_LCD_Init
   782 ;;		_LCD_display_clear
   783 ;;		_LCD_display_ctrl
   784 ;; This function is called by:
   785 ;;		Startup code after reset
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           
   790                           ;psect for function _main
   791  001D                     _main:
   792  001D                     l1534:	
   793                           ;incstack = 0
   794                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   795                           
   796                           
   797                           ;main.c: 294:     ANSEL = 0x00;
   798  001D  1683               	bsf	3,5	;RP0=1, select bank1
   799  001E  1303               	bcf	3,6	;RP1=0, select bank1
   800  001F  0191               	clrf	17	;volatile
   801  0020                     l1536:
   802                           
   803                           ;main.c: 295:     CMCON0 = 0x07;
   804  0020  3007               	movlw	7
   805  0021  1283               	bcf	3,5	;RP0=0, select bank0
   806  0022  1303               	bcf	3,6	;RP1=0, select bank0
   807  0023  0099               	movwf	25	;volatile
   808  0024                     l1538:
   809                           
   810                           ;main.c: 297:     TRISA = 0x04;
   811  0024  3004               	movlw	4
   812  0025  1683               	bsf	3,5	;RP0=1, select bank1
   813  0026  1303               	bcf	3,6	;RP1=0, select bank1
   814  0027  0085               	movwf	5	;volatile
   815                           
   816                           ;main.c: 298:     PORTA = 0x00;
   817  0028  1283               	bcf	3,5	;RP0=0, select bank0
   818  0029  1303               	bcf	3,6	;RP1=0, select bank0
   819  002A  0185               	clrf	5	;volatile
   820  002B                     l1540:
   821                           
   822                           ;main.c: 300:     TRISC = 0x30;
   823  002B  3030               	movlw	48
   824  002C  1683               	bsf	3,5	;RP0=1, select bank1
   825  002D  1303               	bcf	3,6	;RP1=0, select bank1
   826  002E  0087               	movwf	7	;volatile
   827  002F                     l1542:
   828                           
   829                           ;main.c: 301:     PORTC = 0x00;
   830  002F  1283               	bcf	3,5	;RP0=0, select bank0
   831  0030  1303               	bcf	3,6	;RP1=0, select bank0
   832  0031  0187               	clrf	7	;volatile
   833  0032                     l1544:
   834                           
   835                           ;main.c: 303:     T1CONbits.TMR1ON = 0;
   836  0032  1010               	bcf	16,0	;volatile
   837  0033                     l1546:
   838                           
   839                           ;main.c: 304:     TMR1L = 0x00;
   840  0033  018E               	clrf	14	;volatile
   841  0034                     l1548:
   842                           
   843                           ;main.c: 305:     TMR1H = 0x00;
   844  0034  018F               	clrf	15	;volatile
   845                           
   846                           ;main.c: 306:     T1CON = 0x30;
   847  0035  3030               	movlw	48
   848  0036  0090               	movwf	16	;volatile
   849  0037                     l1550:
   850                           
   851                           ;main.c: 307:     TMR1IF = 0;
   852  0037  100C               	bcf	12,0	;volatile
   853  0038                     l1552:
   854                           
   855                           ;main.c: 309:     LCD_Init();
   856  0038  118A  2191  118A   	fcall	_LCD_Init
   857  003B                     l1554:
   858                           
   859                           ;main.c: 311:     LCD_display_ctrl(1,0,0);
   860  003B  01F4               	clrf	LCD_display_ctrl@cursor
   861  003C  01F5               	clrf	LCD_display_ctrl@blink
   862  003D  3001               	movlw	1
   863  003E  118A  22CE  118A   	fcall	_LCD_display_ctrl
   864  0041                     l152:
   865  0041  1283               	bcf	3,5	;RP0=0, select bank0
   866  0042  1303               	bcf	3,6	;RP1=0, select bank0
   867  0043  1905               	btfsc	5,2	;volatile
   868  0044  2846               	goto	u681
   869  0045  2847               	goto	u680
   870  0046                     u681:
   871  0046  2841               	goto	l152
   872  0047                     u680:
   873  0047                     l154:
   874                           
   875                           ;main.c: 317:         TMR1ON = 0;
   876  0047  1010               	bcf	16,0	;volatile
   877  0048                     l1556:
   878                           
   879                           ;main.c: 318:         TMR1L = 0x00;
   880  0048  018E               	clrf	14	;volatile
   881                           
   882                           ;main.c: 319:         TMR1H = 0x00;
   883  0049  018F               	clrf	15	;volatile
   884  004A                     l1558:
   885                           
   886                           ;main.c: 320:         TMR1IF = 0;
   887  004A  100C               	bcf	12,0	;volatile
   888  004B                     l1560:
   889                           
   890                           ;main.c: 321:         Draw_main_display_p1();
   891  004B  118A  2145  118A   	fcall	_Draw_main_display_p1
   892  004E                     l1562:
   893                           
   894                           ;main.c: 322:         if(RA2)
   895  004E  1283               	bcf	3,5	;RP0=0, select bank0
   896  004F  1303               	bcf	3,6	;RP1=0, select bank0
   897  0050  1D05               	btfss	5,2	;volatile
   898  0051  2853               	goto	u691
   899  0052  2854               	goto	u690
   900  0053                     u691:
   901  0053  2841               	goto	l152
   902  0054                     u690:
   903  0054                     l1564:
   904                           
   905                           ;main.c: 323:         {;main.c: 324:             T1CONbits.TMR1ON = 1;
   906  0054  1410               	bsf	16,0	;volatile
   907  0055                     l156:	
   908                           ;main.c: 325:             while(RA2);
   909                           
   910  0055  1905               	btfsc	5,2	;volatile
   911  0056  2858               	goto	u701
   912  0057  2859               	goto	u700
   913  0058                     u701:
   914  0058  2855               	goto	l156
   915  0059                     u700:
   916  0059                     l158:
   917                           
   918                           ;main.c: 326:             if(TMR1IF)
   919  0059  1C0C               	btfss	12,0	;volatile
   920  005A  285C               	goto	u711
   921  005B  285D               	goto	u710
   922  005C                     u711:
   923  005C  28AC               	goto	l1598
   924  005D                     u710:
   925  005D                     l1566:
   926                           
   927                           ;main.c: 327:             {;main.c: 328:                 TMR1ON = 0;
   928  005D  1010               	bcf	16,0	;volatile
   929  005E                     l1568:
   930                           
   931                           ;main.c: 329:                 TMR1L = 0x00;
   932  005E  018E               	clrf	14	;volatile
   933                           
   934                           ;main.c: 330:                 TMR1H = 0x00;
   935  005F  018F               	clrf	15	;volatile
   936                           
   937                           ;main.c: 331:                 while(TMR1IF)
   938  0060  28A7               	goto	l160
   939  0061                     l1570:
   940                           
   941                           ;main.c: 332:                 {;main.c: 333:                     Draw_settings_display()
      +                          ;
   942  0061  118A  20BB  118A   	fcall	_Draw_settings_display
   943  0064                     l162:	
   944                           ;main.c: 334:                     while(!RC4);
   945                           
   946  0064  1283               	bcf	3,5	;RP0=0, select bank0
   947  0065  1303               	bcf	3,6	;RP1=0, select bank0
   948  0066  1E07               	btfss	7,4	;volatile
   949  0067  2869               	goto	u721
   950  0068  286A               	goto	u720
   951  0069                     u721:
   952  0069  2864               	goto	l162
   953  006A                     u720:
   954  006A                     l1572:
   955                           
   956                           ;main.c: 335:                     currentCLK = RC4;
   957  006A  3000               	movlw	0
   958  006B  1A07               	btfsc	7,4	;volatile
   959  006C  3001               	movlw	1
   960  006D  00C8               	movwf	main@currentCLK
   961  006E                     l1574:
   962                           
   963                           ;main.c: 336:                     if(currentCLK != lastCLK && currentCLK == 1)
   964  006E  0848               	movf	main@currentCLK,w
   965  006F  0647               	xorwf	main@lastCLK,w
   966  0070  1903               	skipnz
   967  0071  2873               	goto	u731
   968  0072  2874               	goto	u730
   969  0073                     u731:
   970  0073  289A               	goto	l1592
   971  0074                     u730:
   972  0074                     l1576:
   973  0074  0348               	decf	main@currentCLK,w
   974  0075  1D03               	btfss	3,2
   975  0076  2878               	goto	u741
   976  0077  2879               	goto	u740
   977  0078                     u741:
   978  0078  289A               	goto	l1592
   979  0079                     u740:
   980  0079                     l1578:
   981                           
   982                           ;main.c: 337:                     {;main.c: 338:                         if (RC5 != curr
      +                          entCLK)
   983  0079  3000               	movlw	0
   984  007A  1A87               	btfsc	7,5	;volatile
   985  007B  3001               	movlw	1
   986  007C  0648               	xorwf	main@currentCLK,w
   987  007D  1903               	skipnz
   988  007E  2880               	goto	u751
   989  007F  2881               	goto	u750
   990  0080                     u751:
   991  0080  2891               	goto	l1586
   992  0081                     u750:
   993  0081                     l1580:
   994                           
   995                           ;main.c: 339:                         {;main.c: 340:                             if(coun
      +                          ter < 4)
   996  0081  3004               	movlw	4
   997  0082  027B               	subwf	_counter,w	;volatile
   998  0083  1803               	skipnc
   999  0084  2886               	goto	u761
  1000  0085  2887               	goto	u760
  1001  0086                     u761:
  1002  0086  288C               	goto	l1584
  1003  0087                     u760:
  1004  0087                     l1582:
  1005                           
  1006                           ;main.c: 341:                             {;main.c: 342:                                
      +                           counter++;
  1007  0087  3001               	movlw	1
  1008  0088  00C6               	movwf	??_main
  1009  0089  0846               	movf	??_main,w
  1010  008A  07FB               	addwf	_counter,f	;volatile
  1011                           
  1012                           ;main.c: 343:                             }
  1013  008B  289A               	goto	l1592
  1014  008C                     l1584:
  1015                           
  1016                           ;main.c: 345:                             {;main.c: 346:                                
      +                           counter = 4;
  1017  008C  3004               	movlw	4
  1018  008D  00C6               	movwf	??_main
  1019  008E  0846               	movf	??_main,w
  1020  008F  00FB               	movwf	_counter	;volatile
  1021  0090  289A               	goto	l1592
  1022  0091                     l1586:
  1023                           
  1024                           ;main.c: 350:                         {;main.c: 351:                             if(coun
      +                          ter > 0)
  1025  0091  087B               	movf	_counter,w	;volatile
  1026  0092  1903               	btfsc	3,2
  1027  0093  2895               	goto	u771
  1028  0094  2896               	goto	u770
  1029  0095                     u771:
  1030  0095  2899               	goto	l1590
  1031  0096                     u770:
  1032  0096                     l1588:
  1033                           
  1034                           ;main.c: 352:                             {;main.c: 353:                                
      +                           counter--;
  1035  0096  3001               	movlw	1
  1036  0097  02FB               	subwf	_counter,f	;volatile
  1037                           
  1038                           ;main.c: 354:                             }
  1039  0098  289A               	goto	l1592
  1040  0099                     l1590:
  1041                           
  1042                           ;main.c: 356:                             {;main.c: 357:                                
      +                           counter = 0;
  1043  0099  01FB               	clrf	_counter	;volatile
  1044  009A                     l1592:
  1045                           
  1046                           ;main.c: 361:                     lastCLK = currentCLK;
  1047  009A  0848               	movf	main@currentCLK,w
  1048  009B  00C6               	movwf	??_main
  1049  009C  0846               	movf	??_main,w
  1050  009D  00C7               	movwf	main@lastCLK
  1051  009E                     l1594:
  1052                           
  1053                           ;main.c: 362:                     if(RA2)
  1054  009E  1D05               	btfss	5,2	;volatile
  1055  009F  28A1               	goto	u781
  1056  00A0  28A2               	goto	u780
  1057  00A1                     u781:
  1058  00A1  28A7               	goto	l160
  1059  00A2                     u780:
  1060  00A2                     l1596:
  1061                           
  1062                           ;main.c: 363:                     {;main.c: 364:                         TMR1ON = 1;
  1063  00A2  1410               	bsf	16,0	;volatile
  1064  00A3                     l173:	
  1065                           ;main.c: 365:                         while(RA2);
  1066                           
  1067  00A3  1905               	btfsc	5,2	;volatile
  1068  00A4  28A6               	goto	u791
  1069  00A5  28A7               	goto	u790
  1070  00A6                     u791:
  1071  00A6  28A3               	goto	l173
  1072  00A7                     u790:
  1073  00A7                     l175:
  1074  00A7                     l160:	
  1075                           ;main.c: 366:                         if(TMR1IF == 0)
  1076                           ;main.c: 371:                 }
  1077                           
  1078                           
  1079                           ;main.c: 331:                 while(TMR1IF)
  1080  00A7  180C               	btfsc	12,0	;volatile
  1081  00A8  28AA               	goto	u801
  1082  00A9  28AB               	goto	u800
  1083  00AA                     u801:
  1084  00AA  2861               	goto	l1570
  1085  00AB                     u800:
  1086  00AB  2841               	goto	l152
  1087  00AC                     l1598:
  1088                           
  1089                           ;main.c: 375:             {;main.c: 376:                 Draw_main_display_p2();
  1090  00AC  118A  2243  118A   	fcall	_Draw_main_display_p2
  1091  00AF                     l179:	
  1092                           ;main.c: 377:                 while(!RA2);
  1093                           
  1094  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1095  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  1096  00B1  1D05               	btfss	5,2	;volatile
  1097  00B2  28B4               	goto	u811
  1098  00B3  28B5               	goto	u810
  1099  00B4                     u811:
  1100  00B4  28AF               	goto	l179
  1101  00B5                     u810:
  1102  00B5                     l1600:
  1103                           
  1104                           ;main.c: 378:                 LCD_display_clear();
  1105  00B5  118A  2354  118A   	fcall	_LCD_display_clear
  1106  00B8  2841               	goto	l152
  1107  00B9  118A  280B         	ljmp	start
  1108  00BB                     __end_of_main:
  1109                           
  1110                           	psect	text1
  1111  02CE                     __ptext1:	
  1112 ;; *************** function _LCD_display_ctrl *****************
  1113 ;; Defined at:
  1114 ;;		line 103 in file "main.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;  display         1    wreg     unsigned char 
  1117 ;;  cursor          1    4[COMMON] unsigned char 
  1118 ;;  blink           1    5[COMMON] unsigned char 
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;  display         1    7[COMMON] unsigned char 
  1121 ;;  temp            1    8[COMMON] unsigned char 
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  1    wreg      void 
  1124 ;; Registers used:
  1125 ;;		wreg, status,2, status,0, pclath, cstack
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1131 ;;      Params:         2       0       0       0
  1132 ;;      Locals:         2       0       0       0
  1133 ;;      Temps:          1       0       0       0
  1134 ;;      Totals:         5       0       0       0
  1135 ;;Total ram usage:        5 bytes
  1136 ;; Hardware stack levels used:    1
  1137 ;; Hardware stack levels required when called:    3
  1138 ;; This function calls:
  1139 ;;		___lcd_cmd
  1140 ;; This function is called by:
  1141 ;;		_main
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           
  1146                           ;psect for function _LCD_display_ctrl
  1147  02CE                     _LCD_display_ctrl:
  1148                           
  1149                           ;incstack = 0
  1150                           ; Regs used in _LCD_display_ctrl: [wreg+status,2+status,0+pclath+cstack]
  1151                           ;LCD_display_ctrl@display stored from wreg
  1152  02CE  00F7               	movwf	LCD_display_ctrl@display
  1153  02CF                     l1414:
  1154                           
  1155                           ;main.c: 103: void LCD_display_ctrl(uint8_t display, uint8_t cursor, uint8_t blink);main
      +                          .c: 104: {;main.c: 105:     __lcd_cmd(0x00);
  1156  02CF  3000               	movlw	0
  1157  02D0  118A  238A  118A   	fcall	___lcd_cmd
  1158  02D3                     l1416:
  1159                           
  1160                           ;main.c: 107:     uint8_t temp = 0x0C;
  1161  02D3  300C               	movlw	12
  1162  02D4  00F6               	movwf	??_LCD_display_ctrl
  1163  02D5  0876               	movf	??_LCD_display_ctrl,w
  1164  02D6  00F8               	movwf	LCD_display_ctrl@temp
  1165  02D7                     l1418:
  1166                           
  1167                           ;main.c: 108:     if(display == 1)
  1168  02D7  0377               	decf	LCD_display_ctrl@display,w
  1169  02D8  1D03               	btfss	3,2
  1170  02D9  2ADB               	goto	u641
  1171  02DA  2ADC               	goto	u640
  1172  02DB                     u641:
  1173  02DB  2AED               	goto	l1430
  1174  02DC                     u640:
  1175  02DC                     l1420:
  1176                           
  1177                           ;main.c: 109:     {;main.c: 110:         if(cursor == 1)
  1178  02DC  0374               	decf	LCD_display_ctrl@cursor,w
  1179  02DD  1D03               	btfss	3,2
  1180  02DE  2AE0               	goto	u651
  1181  02DF  2AE1               	goto	u650
  1182  02E0                     u651:
  1183  02E0  2AE2               	goto	l1424
  1184  02E1                     u650:
  1185  02E1                     l1422:
  1186                           
  1187                           ;main.c: 111:         {;main.c: 112:             temp |= 1 << 1;
  1188  02E1  14F8               	bsf	LCD_display_ctrl@temp,1
  1189  02E2                     l1424:
  1190                           
  1191                           ;main.c: 114:         if(blink == 1)
  1192  02E2  0375               	decf	LCD_display_ctrl@blink,w
  1193  02E3  1D03               	btfss	3,2
  1194  02E4  2AE6               	goto	u661
  1195  02E5  2AE7               	goto	u660
  1196  02E6                     u661:
  1197  02E6  2AE8               	goto	l1428
  1198  02E7                     u660:
  1199  02E7                     l1426:
  1200                           
  1201                           ;main.c: 115:         {;main.c: 116:             temp |= 1 << 0;
  1202  02E7  1478               	bsf	LCD_display_ctrl@temp,0
  1203  02E8                     l1428:
  1204                           
  1205                           ;main.c: 118:         __lcd_cmd(temp);
  1206  02E8  0878               	movf	LCD_display_ctrl@temp,w
  1207  02E9  118A  238A  118A   	fcall	___lcd_cmd
  1208                           
  1209                           ;main.c: 119:     }
  1210  02EC  2AF1               	goto	l82
  1211  02ED                     l1430:
  1212                           
  1213                           ;main.c: 121:     {;main.c: 122:         __lcd_cmd(0x08);
  1214  02ED  3008               	movlw	8
  1215  02EE  118A  238A  118A   	fcall	___lcd_cmd
  1216  02F1                     l82:
  1217  02F1  0008               	return
  1218  02F2                     __end_of_LCD_display_ctrl:
  1219                           
  1220                           	psect	text2
  1221  0191                     __ptext2:	
  1222 ;; *************** function _LCD_Init *****************
  1223 ;; Defined at:
  1224 ;;		line 168 in file "main.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;		None
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;		None
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  1    wreg      void 
  1231 ;; Registers used:
  1232 ;;		wreg, status,2, status,0, pclath, cstack
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1238 ;;      Params:         0       0       0       0
  1239 ;;      Locals:         0       0       0       0
  1240 ;;      Temps:          2       0       0       0
  1241 ;;      Totals:         2       0       0       0
  1242 ;;Total ram usage:        2 bytes
  1243 ;; Hardware stack levels used:    1
  1244 ;; Hardware stack levels required when called:    3
  1245 ;; This function calls:
  1246 ;;		___lcd_cmd
  1247 ;; This function is called by:
  1248 ;;		_main
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           
  1253                           ;psect for function _LCD_Init
  1254  0191                     _LCD_Init:
  1255  0191                     l1432:	
  1256                           ;incstack = 0
  1257                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1258                           
  1259                           
  1260                           ;main.c: 170:     _delay((unsigned long)((50)*(4000000UL/4000.0)));
  1261  0191  3041               	movlw	65
  1262  0192  00F5               	movwf	??_LCD_Init+1
  1263  0193  30EE               	movlw	238
  1264  0194  00F4               	movwf	??_LCD_Init
  1265  0195                     u827:
  1266  0195  0BF4               	decfsz	??_LCD_Init,f
  1267  0196  2995               	goto	u827
  1268  0197  0BF5               	decfsz	??_LCD_Init+1,f
  1269  0198  2995               	goto	u827
  1270  0199  0000               	nop
  1271  019A                     l1434:
  1272                           
  1273                           ;main.c: 172:     __lcd_cmd(0x03);
  1274  019A  3003               	movlw	3
  1275  019B  118A  238A  118A   	fcall	___lcd_cmd
  1276  019E                     l1436:
  1277                           
  1278                           ;main.c: 173:     _delay((unsigned long)((5)*(4000000UL/4000.0)));
  1279  019E  3007               	movlw	7
  1280  019F  00F5               	movwf	??_LCD_Init+1
  1281  01A0  307D               	movlw	125
  1282  01A1  00F4               	movwf	??_LCD_Init
  1283  01A2                     u837:
  1284  01A2  0BF4               	decfsz	??_LCD_Init,f
  1285  01A3  29A2               	goto	u837
  1286  01A4  0BF5               	decfsz	??_LCD_Init+1,f
  1287  01A5  29A2               	goto	u837
  1288                           
  1289                           ;main.c: 176:     __lcd_cmd(0x03);
  1290  01A6  3003               	movlw	3
  1291  01A7  118A  238A  118A   	fcall	___lcd_cmd
  1292  01AA                     l1438:
  1293                           
  1294                           ;main.c: 177:     _delay((unsigned long)((120)*(4000000UL/4000000.0)));
  1295  01AA  3027               	movlw	39
  1296  01AB  00F4               	movwf	??_LCD_Init
  1297  01AC                     u847:
  1298  01AC  0BF4               	decfsz	??_LCD_Init,f
  1299  01AD  29AC               	goto	u847
  1300  01AE  29AF               	nop2
  1301  01AF                     l1440:
  1302                           
  1303                           ;main.c: 180:     __lcd_cmd(0x03);
  1304  01AF  3003               	movlw	3
  1305  01B0  118A  238A  118A   	fcall	___lcd_cmd
  1306  01B3                     l1442:
  1307                           
  1308                           ;main.c: 183:     __lcd_cmd(0x02);
  1309  01B3  3002               	movlw	2
  1310  01B4  118A  238A  118A   	fcall	___lcd_cmd
  1311  01B7                     l1444:
  1312                           
  1313                           ;main.c: 187:     __lcd_cmd(0x02);
  1314  01B7  3002               	movlw	2
  1315  01B8  118A  238A  118A   	fcall	___lcd_cmd
  1316  01BB                     l1446:
  1317                           
  1318                           ;main.c: 188:     __lcd_cmd(0x08);
  1319  01BB  3008               	movlw	8
  1320  01BC  118A  238A  118A   	fcall	___lcd_cmd
  1321  01BF                     l1448:
  1322                           
  1323                           ;main.c: 191:     __lcd_cmd(0x00);
  1324  01BF  3000               	movlw	0
  1325  01C0  118A  238A  118A   	fcall	___lcd_cmd
  1326  01C3                     l1450:
  1327                           
  1328                           ;main.c: 192:     __lcd_cmd(0x08);
  1329  01C3  3008               	movlw	8
  1330  01C4  118A  238A  118A   	fcall	___lcd_cmd
  1331  01C7                     l1452:
  1332                           
  1333                           ;main.c: 195:     __lcd_cmd(0x00);
  1334  01C7  3000               	movlw	0
  1335  01C8  118A  238A  118A   	fcall	___lcd_cmd
  1336  01CB                     l1454:
  1337                           
  1338                           ;main.c: 196:     __lcd_cmd(0x01);
  1339  01CB  3001               	movlw	1
  1340  01CC  118A  238A  118A   	fcall	___lcd_cmd
  1341  01CF                     l1456:
  1342                           
  1343                           ;main.c: 199:     __lcd_cmd(0x00);
  1344  01CF  3000               	movlw	0
  1345  01D0  118A  238A  118A   	fcall	___lcd_cmd
  1346  01D3                     l1458:
  1347                           
  1348                           ;main.c: 200:     __lcd_cmd(0x06);
  1349  01D3  3006               	movlw	6
  1350  01D4  118A  238A  118A   	fcall	___lcd_cmd
  1351  01D7                     l101:
  1352  01D7  0008               	return
  1353  01D8                     __end_of_LCD_Init:
  1354                           
  1355                           	psect	text3
  1356  00BB                     __ptext3:	
  1357 ;; *************** function _Draw_settings_display *****************
  1358 ;; Defined at:
  1359 ;;		line 252 in file "main.c"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;		None
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;		None
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  1    wreg      void 
  1366 ;; Registers used:
  1367 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1373 ;;      Params:         0       0       0       0
  1374 ;;      Locals:         0       0       0       0
  1375 ;;      Temps:          0       2       0       0
  1376 ;;      Totals:         0       2       0       0
  1377 ;;Total ram usage:        2 bytes
  1378 ;; Hardware stack levels used:    1
  1379 ;; Hardware stack levels required when called:    5
  1380 ;; This function calls:
  1381 ;;		_LCD_display_clear
  1382 ;;		_LCD_send_string
  1383 ;;		_LCD_set_cursor
  1384 ;; This function is called by:
  1385 ;;		_main
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           
  1390                           ;psect for function _Draw_settings_display
  1391  00BB                     _Draw_settings_display:
  1392  00BB                     l1488:	
  1393                           ;incstack = 0
  1394                           ; Regs used in _Draw_settings_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  1395                           
  1396                           
  1397                           ;main.c: 254:     switch(counter)
  1398  00BB  292C               	goto	l1516
  1399  00BC                     l1490:
  1400                           
  1401                           ;main.c: 257:             LCD_display_clear();
  1402  00BC  118A  2354  118A   	fcall	_LCD_display_clear
  1403                           
  1404                           ;main.c: 258:             LCD_set_cursor(0,0);
  1405  00BF  01F4               	clrf	LCD_set_cursor@column
  1406  00C0  3000               	movlw	0
  1407  00C1  118A  2337  118A   	fcall	_LCD_set_cursor
  1408  00C4                     l1492:
  1409                           
  1410                           ;main.c: 259:             LCD_send_string(s_time);
  1411  00C4  302F               	movlw	(low ((_s_time-__stringbase)| (0+32768)))& (0+255)
  1412  00C5  00F8               	movwf	LCD_send_string@string
  1413  00C6  3080               	movlw	128
  1414  00C7  00F9               	movwf	LCD_send_string@string+1
  1415  00C8  118A  2281  118A   	fcall	_LCD_send_string
  1416  00CB                     l1494:
  1417                           
  1418                           ;main.c: 260:             LCD_set_cursor(1,0);
  1419  00CB  01F4               	clrf	LCD_set_cursor@column
  1420  00CC  3001               	movlw	1
  1421  00CD  118A  2337  118A   	fcall	_LCD_set_cursor
  1422                           
  1423                           ;main.c: 261:             LCD_send_string(s_date);
  1424  00D0  302A               	movlw	(low ((_s_date-__stringbase)| (0+32768)))& (0+255)
  1425  00D1  00F8               	movwf	LCD_send_string@string
  1426  00D2  3080               	movlw	128
  1427  00D3  00F9               	movwf	LCD_send_string@string+1
  1428  00D4  118A  2281  118A   	fcall	_LCD_send_string
  1429                           
  1430                           ;main.c: 262:             break;
  1431  00D7  2944               	goto	l146
  1432  00D8                     l1496:
  1433                           
  1434                           ;main.c: 264:             LCD_display_clear();
  1435  00D8  118A  2354  118A   	fcall	_LCD_display_clear
  1436                           
  1437                           ;main.c: 265:             LCD_set_cursor(0,0);
  1438  00DB  01F4               	clrf	LCD_set_cursor@column
  1439  00DC  3000               	movlw	0
  1440  00DD  118A  2337  118A   	fcall	_LCD_set_cursor
  1441  00E0                     l1498:
  1442                           
  1443                           ;main.c: 266:             LCD_send_string(s_date);
  1444  00E0  302A               	movlw	(low ((_s_date-__stringbase)| (0+32768)))& (0+255)
  1445  00E1  00F8               	movwf	LCD_send_string@string
  1446  00E2  3080               	movlw	128
  1447  00E3  00F9               	movwf	LCD_send_string@string+1
  1448  00E4  118A  2281  118A   	fcall	_LCD_send_string
  1449  00E7                     l1500:
  1450                           
  1451                           ;main.c: 267:             LCD_set_cursor(1,0);
  1452  00E7  01F4               	clrf	LCD_set_cursor@column
  1453  00E8  3001               	movlw	1
  1454  00E9  118A  2337  118A   	fcall	_LCD_set_cursor
  1455                           
  1456                           ;main.c: 268:             LCD_send_string(s_temp);
  1457  00EC  3001               	movlw	(low ((_s_temp-__stringbase)| (0+32768)))& (0+255)
  1458  00ED  00F8               	movwf	LCD_send_string@string
  1459  00EE  3080               	movlw	128
  1460  00EF  00F9               	movwf	LCD_send_string@string+1
  1461  00F0  118A  2281  118A   	fcall	_LCD_send_string
  1462                           
  1463                           ;main.c: 269:             break;
  1464  00F3  2944               	goto	l146
  1465  00F4                     l1502:
  1466                           
  1467                           ;main.c: 271:             LCD_display_clear();
  1468  00F4  118A  2354  118A   	fcall	_LCD_display_clear
  1469                           
  1470                           ;main.c: 272:             LCD_set_cursor(0,0);
  1471  00F7  01F4               	clrf	LCD_set_cursor@column
  1472  00F8  3000               	movlw	0
  1473  00F9  118A  2337  118A   	fcall	_LCD_set_cursor
  1474  00FC                     l1504:
  1475                           
  1476                           ;main.c: 273:             LCD_send_string(s_temp);
  1477  00FC  3001               	movlw	(low ((_s_temp-__stringbase)| (0+32768)))& (0+255)
  1478  00FD  00F8               	movwf	LCD_send_string@string
  1479  00FE  3080               	movlw	128
  1480  00FF  00F9               	movwf	LCD_send_string@string+1
  1481  0100  118A  2281  118A   	fcall	_LCD_send_string
  1482  0103                     l1506:
  1483                           
  1484                           ;main.c: 274:             LCD_set_cursor(1,0);
  1485  0103  01F4               	clrf	LCD_set_cursor@column
  1486  0104  3001               	movlw	1
  1487  0105  118A  2337  118A   	fcall	_LCD_set_cursor
  1488                           
  1489                           ;main.c: 275:             LCD_send_string(s_humi);
  1490  0108  300D               	movlw	(low ((_s_humi-__stringbase)| (0+32768)))& (0+255)
  1491  0109  00F8               	movwf	LCD_send_string@string
  1492  010A  3080               	movlw	128
  1493  010B  00F9               	movwf	LCD_send_string@string+1
  1494  010C  118A  2281  118A   	fcall	_LCD_send_string
  1495                           
  1496                           ;main.c: 276:             break;
  1497  010F  2944               	goto	l146
  1498  0110                     l1508:
  1499                           
  1500                           ;main.c: 278:             LCD_display_clear();
  1501  0110  118A  2354  118A   	fcall	_LCD_display_clear
  1502                           
  1503                           ;main.c: 279:             LCD_set_cursor(0,0);
  1504  0113  01F4               	clrf	LCD_set_cursor@column
  1505  0114  3000               	movlw	0
  1506  0115  118A  2337  118A   	fcall	_LCD_set_cursor
  1507  0118                     l1510:
  1508                           
  1509                           ;main.c: 280:             LCD_send_string(s_humi);
  1510  0118  300D               	movlw	(low ((_s_humi-__stringbase)| (0+32768)))& (0+255)
  1511  0119  00F8               	movwf	LCD_send_string@string
  1512  011A  3080               	movlw	128
  1513  011B  00F9               	movwf	LCD_send_string@string+1
  1514  011C  118A  2281  118A   	fcall	_LCD_send_string
  1515  011F                     l1512:
  1516                           
  1517                           ;main.c: 281:             LCD_set_cursor(1,0);
  1518  011F  01F4               	clrf	LCD_set_cursor@column
  1519  0120  3001               	movlw	1
  1520  0121  118A  2337  118A   	fcall	_LCD_set_cursor
  1521                           
  1522                           ;main.c: 282:             LCD_send_string(s_time);
  1523  0124  302F               	movlw	(low ((_s_time-__stringbase)| (0+32768)))& (0+255)
  1524  0125  00F8               	movwf	LCD_send_string@string
  1525  0126  3080               	movlw	128
  1526  0127  00F9               	movwf	LCD_send_string@string+1
  1527  0128  118A  2281  118A   	fcall	_LCD_send_string
  1528                           
  1529                           ;main.c: 283:             break;
  1530  012B  2944               	goto	l146
  1531  012C                     l1516:
  1532  012C  087B               	movf	_counter,w	;volatile
  1533  012D  1283               	bcf	3,5	;RP0=0, select bank0
  1534  012E  1303               	bcf	3,6	;RP1=0, select bank0
  1535  012F  00C4               	movwf	??_Draw_settings_display
  1536  0130  01C5               	clrf	??_Draw_settings_display+1
  1537                           
  1538                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1539                           ; Switch size 1, requested type "simple"
  1540                           ; Number of cases is 1, Range of values is 0 to 0
  1541                           ; switch strategies available:
  1542                           ; Name         Instructions Cycles
  1543                           ; simple_byte            4     3 (average)
  1544                           ; direct_byte            9     7 (fixed)
  1545                           ; jumptable            260     6 (fixed)
  1546                           ;	Chosen strategy is simple_byte
  1547  0131  0845               	movf	??_Draw_settings_display+1,w
  1548  0132  3A00               	xorlw	0	; case 0
  1549  0133  1903               	skipnz
  1550  0134  2936               	goto	l1622
  1551  0135  2944               	goto	l146
  1552  0136                     l1622:
  1553                           
  1554                           ; Switch size 1, requested type "simple"
  1555                           ; Number of cases is 4, Range of values is 0 to 3
  1556                           ; switch strategies available:
  1557                           ; Name         Instructions Cycles
  1558                           ; simple_byte           13     7 (average)
  1559                           ; direct_byte           15     7 (fixed)
  1560                           ; jumptable            260     6 (fixed)
  1561                           ;	Chosen strategy is simple_byte
  1562  0136  0844               	movf	??_Draw_settings_display,w
  1563  0137  3A00               	xorlw	0	; case 0
  1564  0138  1903               	skipnz
  1565  0139  28BC               	goto	l1490
  1566  013A  3A01               	xorlw	1	; case 1
  1567  013B  1903               	skipnz
  1568  013C  28D8               	goto	l1496
  1569  013D  3A03               	xorlw	3	; case 2
  1570  013E  1903               	skipnz
  1571  013F  28F4               	goto	l1502
  1572  0140  3A01               	xorlw	1	; case 3
  1573  0141  1903               	skipnz
  1574  0142  2910               	goto	l1508
  1575  0143  2944               	goto	l146
  1576  0144                     l146:
  1577  0144  0008               	return
  1578  0145                     __end_of_Draw_settings_display:
  1579                           
  1580                           	psect	text4
  1581  0243                     __ptext4:	
  1582 ;; *************** function _Draw_main_display_p2 *****************
  1583 ;; Defined at:
  1584 ;;		line 239 in file "main.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;		None
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;		None
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  1    wreg      void 
  1591 ;; Registers used:
  1592 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1598 ;;      Params:         0       0       0       0
  1599 ;;      Locals:         0       0       0       0
  1600 ;;      Temps:          0       1       0       0
  1601 ;;      Totals:         0       1       0       0
  1602 ;;Total ram usage:        1 bytes
  1603 ;; Hardware stack levels used:    1
  1604 ;; Hardware stack levels required when called:    5
  1605 ;; This function calls:
  1606 ;;		_LCD_display_clear
  1607 ;;		_LCD_send_string
  1608 ;;		_LCD_set_cursor
  1609 ;; This function is called by:
  1610 ;;		_main
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           
  1615                           ;psect for function _Draw_main_display_p2
  1616  0243                     _Draw_main_display_p2:
  1617  0243                     l1476:	
  1618                           ;incstack = 0
  1619                           ; Regs used in _Draw_main_display_p2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  1620                           
  1621                           
  1622                           ;main.c: 241:     LCD_display_clear();
  1623  0243  118A  2354  118A   	fcall	_LCD_display_clear
  1624                           
  1625                           ;main.c: 242:     LCD_set_cursor(0,0);
  1626  0246  01F4               	clrf	LCD_set_cursor@column
  1627  0247  3000               	movlw	0
  1628  0248  118A  2337  118A   	fcall	_LCD_set_cursor
  1629  024B                     l1478:
  1630                           
  1631                           ;main.c: 243:     LCD_send_string(l_time);
  1632  024B  3025               	movlw	(low ((_l_time-__stringbase)| (0+32768)))& (0+255)
  1633  024C  00F8               	movwf	LCD_send_string@string
  1634  024D  3080               	movlw	128
  1635  024E  00F9               	movwf	LCD_send_string@string+1
  1636  024F  118A  2281  118A   	fcall	_LCD_send_string
  1637  0252                     l1480:
  1638                           
  1639                           ;main.c: 244:     LCD_set_cursor(0,10);
  1640  0252  300A               	movlw	10
  1641  0253  1283               	bcf	3,5	;RP0=0, select bank0
  1642  0254  1303               	bcf	3,6	;RP1=0, select bank0
  1643  0255  00C4               	movwf	??_Draw_main_display_p2
  1644  0256  0844               	movf	??_Draw_main_display_p2,w
  1645  0257  00F4               	movwf	LCD_set_cursor@column
  1646  0258  3000               	movlw	0
  1647  0259  118A  2337  118A   	fcall	_LCD_set_cursor
  1648                           
  1649                           ;main.c: 245:     LCD_send_string(time);
  1650  025C  3029               	movlw	(low (_time| 0))& (0+255)
  1651  025D  00F8               	movwf	LCD_send_string@string
  1652  025E  3000               	movlw	0
  1653  025F  00F9               	movwf	LCD_send_string@string+1
  1654  0260  118A  2281  118A   	fcall	_LCD_send_string
  1655  0263                     l1482:
  1656                           
  1657                           ;main.c: 246:     LCD_set_cursor(1,0);
  1658  0263  01F4               	clrf	LCD_set_cursor@column
  1659  0264  3001               	movlw	1
  1660  0265  118A  2337  118A   	fcall	_LCD_set_cursor
  1661  0268                     l1484:
  1662                           
  1663                           ;main.c: 247:     LCD_send_string(l_date);
  1664  0268  3020               	movlw	(low ((_l_date-__stringbase)| (0+32768)))& (0+255)
  1665  0269  00F8               	movwf	LCD_send_string@string
  1666  026A  3080               	movlw	128
  1667  026B  00F9               	movwf	LCD_send_string@string+1
  1668  026C  118A  2281  118A   	fcall	_LCD_send_string
  1669                           
  1670                           ;main.c: 248:     LCD_set_cursor(1,8);
  1671  026F  3008               	movlw	8
  1672  0270  1283               	bcf	3,5	;RP0=0, select bank0
  1673  0271  1303               	bcf	3,6	;RP1=0, select bank0
  1674  0272  00C4               	movwf	??_Draw_main_display_p2
  1675  0273  0844               	movf	??_Draw_main_display_p2,w
  1676  0274  00F4               	movwf	LCD_set_cursor@column
  1677  0275  3001               	movlw	1
  1678  0276  118A  2337  118A   	fcall	_LCD_set_cursor
  1679  0279                     l1486:
  1680                           
  1681                           ;main.c: 249:     LCD_send_string(date);
  1682  0279  3020               	movlw	(low (_date| 0))& (0+255)
  1683  027A  00F8               	movwf	LCD_send_string@string
  1684  027B  3000               	movlw	0
  1685  027C  00F9               	movwf	LCD_send_string@string+1
  1686  027D  118A  2281  118A   	fcall	_LCD_send_string
  1687  0280                     l137:
  1688  0280  0008               	return
  1689  0281                     __end_of_Draw_main_display_p2:
  1690                           
  1691                           	psect	text5
  1692  0354                     __ptext5:	
  1693 ;; *************** function _LCD_display_clear *****************
  1694 ;; Defined at:
  1695 ;;		line 156 in file "main.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;		None
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;  i               1    9[COMMON] unsigned char 
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      void 
  1702 ;; Registers used:
  1703 ;;		wreg, status,2, status,0, pclath, cstack
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1709 ;;      Params:         0       0       0       0
  1710 ;;      Locals:         1       0       0       0
  1711 ;;      Temps:          1       0       0       0
  1712 ;;      Totals:         2       0       0       0
  1713 ;;Total ram usage:        2 bytes
  1714 ;; Hardware stack levels used:    1
  1715 ;; Hardware stack levels required when called:    4
  1716 ;; This function calls:
  1717 ;;		_LCD_set_cursor
  1718 ;;		___lcd_send_char
  1719 ;; This function is called by:
  1720 ;;		_Draw_main_display_p2
  1721 ;;		_Draw_settings_display
  1722 ;;		_main
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           
  1727                           ;psect for function _LCD_display_clear
  1728  0354                     _LCD_display_clear:
  1729  0354                     l1398:	
  1730                           ;incstack = 0
  1731                           ; Regs used in _LCD_display_clear: [wreg+status,2+status,0+pclath+cstack]
  1732                           
  1733  0354                     l1400:
  1734                           
  1735                           ;main.c: 159:     LCD_set_cursor(0,0);
  1736  0354  01F4               	clrf	LCD_set_cursor@column
  1737  0355  3000               	movlw	0
  1738  0356  118A  2337  118A   	fcall	_LCD_set_cursor
  1739  0359                     l1402:
  1740                           
  1741                           ;main.c: 160:     for(i = 0;i < 80;i++)
  1742  0359  01F9               	clrf	LCD_display_clear@i
  1743  035A                     l1408:
  1744                           
  1745                           ;main.c: 161:     {;main.c: 162:         __lcd_send_char(0x20);
  1746  035A  3020               	movlw	32
  1747  035B  118A  22A9  118A   	fcall	___lcd_send_char
  1748  035E                     l1410:
  1749                           
  1750                           ;main.c: 163:     }
  1751  035E  3001               	movlw	1
  1752  035F  00F8               	movwf	??_LCD_display_clear
  1753  0360  0878               	movf	??_LCD_display_clear,w
  1754  0361  07F9               	addwf	LCD_display_clear@i,f
  1755  0362                     l1412:
  1756  0362  3050               	movlw	80
  1757  0363  0279               	subwf	LCD_display_clear@i,w
  1758  0364  1C03               	skipc
  1759  0365  2B67               	goto	u631
  1760  0366  2B68               	goto	u630
  1761  0367                     u631:
  1762  0367  2B5A               	goto	l1408
  1763  0368                     u630:
  1764  0368                     l98:
  1765  0368  0008               	return
  1766  0369                     __end_of_LCD_display_clear:
  1767                           
  1768                           	psect	text6
  1769  0145                     __ptext6:	
  1770 ;; *************** function _Draw_main_display_p1 *****************
  1771 ;; Defined at:
  1772 ;;		line 223 in file "main.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;		None
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;		None
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  1    wreg      void 
  1779 ;; Registers used:
  1780 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1786 ;;      Params:         0       0       0       0
  1787 ;;      Locals:         0       0       0       0
  1788 ;;      Temps:          0       1       0       0
  1789 ;;      Totals:         0       1       0       0
  1790 ;;Total ram usage:        1 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; Hardware stack levels required when called:    4
  1793 ;; This function calls:
  1794 ;;		_LCD_send_string
  1795 ;;		_LCD_set_cursor
  1796 ;;		___lcd_send_char
  1797 ;; This function is called by:
  1798 ;;		_main
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           
  1803                           ;psect for function _Draw_main_display_p1
  1804  0145                     _Draw_main_display_p1:
  1805  0145                     l1460:	
  1806                           ;incstack = 0
  1807                           ; Regs used in _Draw_main_display_p1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  1808                           
  1809                           
  1810                           ;main.c: 225:     LCD_send_string(l_temp);
  1811  0145  301B               	movlw	(low ((_l_temp-__stringbase)| (0+32768)))& (0+255)
  1812  0146  00F8               	movwf	LCD_send_string@string
  1813  0147  3080               	movlw	128
  1814  0148  00F9               	movwf	LCD_send_string@string+1
  1815  0149  118A  2281  118A   	fcall	_LCD_send_string
  1816  014C                     l1462:
  1817                           
  1818                           ;main.c: 226:     LCD_set_cursor(0,7);
  1819  014C  3007               	movlw	7
  1820  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1821  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1822  014F  00C4               	movwf	??_Draw_main_display_p1
  1823  0150  0844               	movf	??_Draw_main_display_p1,w
  1824  0151  00F4               	movwf	LCD_set_cursor@column
  1825  0152  3000               	movlw	0
  1826  0153  118A  2337  118A   	fcall	_LCD_set_cursor
  1827  0156                     l1464:
  1828                           
  1829                           ;main.c: 227:     LCD_send_string(current_temp);
  1830  0156  3036               	movlw	(low (_current_temp| 0))& (0+255)
  1831  0157  00F8               	movwf	LCD_send_string@string
  1832  0158  3000               	movlw	0
  1833  0159  00F9               	movwf	LCD_send_string@string+1
  1834  015A  118A  2281  118A   	fcall	_LCD_send_string
  1835                           
  1836                           ;main.c: 228:     __lcd_send_char(0x7E);
  1837  015D  307E               	movlw	126
  1838  015E  118A  22A9  118A   	fcall	___lcd_send_char
  1839  0161                     l1466:
  1840                           
  1841                           ;main.c: 229:     LCD_send_string(update_temp);
  1842  0161  3031               	movlw	(low (_update_temp| 0))& (0+255)
  1843  0162  00F8               	movwf	LCD_send_string@string
  1844  0163  3000               	movlw	0
  1845  0164  00F9               	movwf	LCD_send_string@string+1
  1846  0165  118A  2281  118A   	fcall	_LCD_send_string
  1847  0168                     l1468:
  1848                           
  1849                           ;main.c: 231:     LCD_set_cursor(1,0);
  1850  0168  01F4               	clrf	LCD_set_cursor@column
  1851  0169  3001               	movlw	1
  1852  016A  118A  2337  118A   	fcall	_LCD_set_cursor
  1853                           
  1854                           ;main.c: 232:     LCD_send_string(l_humi);
  1855  016D  3016               	movlw	(low ((_l_humi-__stringbase)| (0+32768)))& (0+255)
  1856  016E  00F8               	movwf	LCD_send_string@string
  1857  016F  3080               	movlw	128
  1858  0170  00F9               	movwf	LCD_send_string@string+1
  1859  0171  118A  2281  118A   	fcall	_LCD_send_string
  1860  0174                     l1470:
  1861                           
  1862                           ;main.c: 233:     LCD_set_cursor(1,9);
  1863  0174  3009               	movlw	9
  1864  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1865  0176  1303               	bcf	3,6	;RP1=0, select bank0
  1866  0177  00C4               	movwf	??_Draw_main_display_p1
  1867  0178  0844               	movf	??_Draw_main_display_p1,w
  1868  0179  00F4               	movwf	LCD_set_cursor@column
  1869  017A  3001               	movlw	1
  1870  017B  118A  2337  118A   	fcall	_LCD_set_cursor
  1871  017E                     l1472:
  1872                           
  1873                           ;main.c: 234:     LCD_send_string(current_humi);
  1874  017E  303F               	movlw	(low (_current_humi| 0))& (0+255)
  1875  017F  00F8               	movwf	LCD_send_string@string
  1876  0180  3000               	movlw	0
  1877  0181  00F9               	movwf	LCD_send_string@string+1
  1878  0182  118A  2281  118A   	fcall	_LCD_send_string
  1879                           
  1880                           ;main.c: 235:     __lcd_send_char(0x7E);
  1881  0185  307E               	movlw	126
  1882  0186  118A  22A9  118A   	fcall	___lcd_send_char
  1883  0189                     l1474:
  1884                           
  1885                           ;main.c: 236:     LCD_send_string(update_humi);
  1886  0189  303B               	movlw	(low (_update_humi| 0))& (0+255)
  1887  018A  00F8               	movwf	LCD_send_string@string
  1888  018B  3000               	movlw	0
  1889  018C  00F9               	movwf	LCD_send_string@string+1
  1890  018D  118A  2281  118A   	fcall	_LCD_send_string
  1891  0190                     l134:
  1892  0190  0008               	return
  1893  0191                     __end_of_Draw_main_display_p1:
  1894                           
  1895                           	psect	text7
  1896  0337                     __ptext7:	
  1897 ;; *************** function _LCD_set_cursor *****************
  1898 ;; Defined at:
  1899 ;;		line 142 in file "main.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;  row             1    wreg     unsigned char 
  1902 ;;  column          1    4[COMMON] unsigned char 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  row             1    7[COMMON] unsigned char 
  1905 ;;  temp            1    6[COMMON] unsigned char 
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  1    wreg      void 
  1908 ;; Registers used:
  1909 ;;		wreg, status,2, status,0, pclath, cstack
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1915 ;;      Params:         1       0       0       0
  1916 ;;      Locals:         2       0       0       0
  1917 ;;      Temps:          1       0       0       0
  1918 ;;      Totals:         4       0       0       0
  1919 ;;Total ram usage:        4 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; Hardware stack levels required when called:    3
  1922 ;; This function calls:
  1923 ;;		___lcd_cmd
  1924 ;; This function is called by:
  1925 ;;		_LCD_display_clear
  1926 ;;		_Draw_main_display_p1
  1927 ;;		_Draw_main_display_p2
  1928 ;;		_Draw_settings_display
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           
  1933                           ;psect for function _LCD_set_cursor
  1934  0337                     _LCD_set_cursor:
  1935                           
  1936                           ;incstack = 0
  1937                           ; Regs used in _LCD_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1938                           ;LCD_set_cursor@row stored from wreg
  1939  0337  00F7               	movwf	LCD_set_cursor@row
  1940  0338                     l1378:
  1941                           
  1942                           ;main.c: 142: void LCD_set_cursor(uint8_t row, uint8_t column);main.c: 143: {;main.c: 14
      +                          4:     if(row == 0)
  1943  0338  0877               	movf	LCD_set_cursor@row,w
  1944  0339  1D03               	btfss	3,2
  1945  033A  2B3C               	goto	u601
  1946  033B  2B3D               	goto	u600
  1947  033C                     u601:
  1948  033C  2B42               	goto	l1382
  1949  033D                     u600:
  1950  033D                     l1380:
  1951                           
  1952                           ;main.c: 145:     {;main.c: 146:         __lcd_cmd(0x08);
  1953  033D  3008               	movlw	8
  1954  033E  118A  238A  118A   	fcall	___lcd_cmd
  1955                           
  1956                           ;main.c: 147:     }
  1957  0341  2B4B               	goto	l1386
  1958  0342                     l1382:
  1959  0342  0377               	decf	LCD_set_cursor@row,w
  1960  0343  1D03               	btfss	3,2
  1961  0344  2B46               	goto	u611
  1962  0345  2B47               	goto	u610
  1963  0346                     u611:
  1964  0346  2B4B               	goto	l1386
  1965  0347                     u610:
  1966  0347                     l1384:
  1967                           
  1968                           ;main.c: 149:     {;main.c: 150:         __lcd_cmd(0x0C);
  1969  0347  300C               	movlw	12
  1970  0348  118A  238A  118A   	fcall	___lcd_cmd
  1971  034B                     l1386:
  1972                           
  1973                           ;main.c: 152:     uint8_t temp = column;
  1974  034B  0874               	movf	LCD_set_cursor@column,w
  1975  034C  00F5               	movwf	??_LCD_set_cursor
  1976  034D  0875               	movf	??_LCD_set_cursor,w
  1977  034E  00F6               	movwf	LCD_set_cursor@temp
  1978  034F                     l1388:
  1979                           
  1980                           ;main.c: 153:     __lcd_cmd(temp);
  1981  034F  0876               	movf	LCD_set_cursor@temp,w
  1982  0350  118A  238A  118A   	fcall	___lcd_cmd
  1983  0353                     l93:
  1984  0353  0008               	return
  1985  0354                     __end_of_LCD_set_cursor:
  1986                           
  1987                           	psect	text8
  1988  038A                     __ptext8:	
  1989 ;; *************** function ___lcd_cmd *****************
  1990 ;; Defined at:
  1991 ;;		line 72 in file "main.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  cmd             1    wreg     unsigned char 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;  cmd             1    3[COMMON] unsigned char 
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  1    wreg      void 
  1998 ;; Registers used:
  1999 ;;		wreg, status,2, status,0, pclath, cstack
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2005 ;;      Params:         0       0       0       0
  2006 ;;      Locals:         1       0       0       0
  2007 ;;      Temps:          0       0       0       0
  2008 ;;      Totals:         1       0       0       0
  2009 ;;Total ram usage:        1 bytes
  2010 ;; Hardware stack levels used:    1
  2011 ;; Hardware stack levels required when called:    2
  2012 ;; This function calls:
  2013 ;;		___lcd_en_pulse
  2014 ;;		___lcd_port_write
  2015 ;; This function is called by:
  2016 ;;		_LCD_display_ctrl
  2017 ;;		_LCD_set_cursor
  2018 ;;		_LCD_Init
  2019 ;;		___lcd_shift_display
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           
  2024                           ;psect for function ___lcd_cmd
  2025  038A                     ___lcd_cmd:
  2026                           
  2027                           ;incstack = 0
  2028                           ; Regs used in ___lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  2029                           ;___lcd_cmd@cmd stored from wreg
  2030  038A  00F3               	movwf	___lcd_cmd@cmd
  2031  038B                     l1358:
  2032                           
  2033                           ;main.c: 72: void __lcd_cmd(uint8_t cmd);main.c: 73: {;main.c: 74:     RA5 = 0;
  2034  038B  1283               	bcf	3,5	;RP0=0, select bank0
  2035  038C  1303               	bcf	3,6	;RP1=0, select bank0
  2036  038D  1285               	bcf	5,5	;volatile
  2037  038E                     l1360:
  2038                           
  2039                           ;main.c: 75:     __lcd_port_write(cmd);
  2040  038E  0873               	movf	___lcd_cmd@cmd,w
  2041  038F  118A  2315  118A   	fcall	___lcd_port_write
  2042                           
  2043                           ;main.c: 76:     __lcd_en_pulse();
  2044  0392  118A  237A  118A   	fcall	___lcd_en_pulse
  2045  0395                     l66:
  2046  0395  0008               	return
  2047  0396                     __end_of___lcd_cmd:
  2048                           
  2049                           	psect	text9
  2050  0281                     __ptext9:	
  2051 ;; *************** function _LCD_send_string *****************
  2052 ;; Defined at:
  2053 ;;		line 94 in file "main.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;  string          2    8[COMMON] PTR unsigned char 
  2056 ;;		 -> s_humi(9), s_temp(12), s_date(5), s_time(5), 
  2057 ;;		 -> date(9), l_date(5), time(8), l_time(5), 
  2058 ;;		 -> update_humi(4), current_humi(4), l_humi(5), update_temp(5), 
  2059 ;;		 -> current_temp(5), l_temp(5), 
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  i               1    0[BANK0 ] unsigned char 
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      void 
  2064 ;; Registers used:
  2065 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2071 ;;      Params:         2       0       0       0
  2072 ;;      Locals:         0       1       0       0
  2073 ;;      Temps:          1       0       0       0
  2074 ;;      Totals:         3       1       0       0
  2075 ;;Total ram usage:        4 bytes
  2076 ;; Hardware stack levels used:    1
  2077 ;; Hardware stack levels required when called:    3
  2078 ;; This function calls:
  2079 ;;		___lcd_send_char
  2080 ;; This function is called by:
  2081 ;;		_Draw_main_display_p1
  2082 ;;		_Draw_main_display_p2
  2083 ;;		_Draw_settings_display
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           
  2088                           ;psect for function _LCD_send_string
  2089  0281                     _LCD_send_string:
  2090  0281                     l1390:	
  2091                           ;incstack = 0
  2092                           ; Regs used in _LCD_send_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2093                           
  2094                           
  2095                           ;main.c: 94: void LCD_send_string(uint8_t string[]);main.c: 95: {;main.c: 96:     uint8_
      +                          t i = 0;
  2096  0281  1283               	bcf	3,5	;RP0=0, select bank0
  2097  0282  1303               	bcf	3,6	;RP1=0, select bank0
  2098  0283  01C3               	clrf	LCD_send_string@i
  2099                           
  2100                           ;main.c: 97:     for(i = 0;string[i]!='\0';i++)
  2101  0284  01C3               	clrf	LCD_send_string@i
  2102  0285  2A99               	goto	l1396
  2103  0286                     l1392:
  2104                           
  2105                           ;main.c: 98:     {;main.c: 99:         __lcd_send_char(string[i]);
  2106  0286  0843               	movf	LCD_send_string@i,w
  2107  0287  0778               	addwf	LCD_send_string@string,w
  2108  0288  0084               	movwf	4
  2109  0289  0879               	movf	LCD_send_string@string+1,w
  2110  028A  1803               	skipnc
  2111  028B  0A79               	incf	LCD_send_string@string+1,w
  2112  028C  00FF               	movwf	btemp+1
  2113  028D  118A  2200  118A   	fcall	stringtab
  2114  0290  118A  22A9  118A   	fcall	___lcd_send_char
  2115  0293                     l1394:
  2116                           
  2117                           ;main.c: 100:     }
  2118  0293  3001               	movlw	1
  2119  0294  00FA               	movwf	??_LCD_send_string
  2120  0295  087A               	movf	??_LCD_send_string,w
  2121  0296  1283               	bcf	3,5	;RP0=0, select bank0
  2122  0297  1303               	bcf	3,6	;RP1=0, select bank0
  2123  0298  07C3               	addwf	LCD_send_string@i,f
  2124  0299                     l1396:
  2125  0299  0843               	movf	LCD_send_string@i,w
  2126  029A  0778               	addwf	LCD_send_string@string,w
  2127  029B  0084               	movwf	4
  2128  029C  0879               	movf	LCD_send_string@string+1,w
  2129  029D  1803               	skipnc
  2130  029E  0A79               	incf	LCD_send_string@string+1,w
  2131  029F  00FF               	movwf	btemp+1
  2132  02A0  118A  2200  118A   	fcall	stringtab
  2133  02A3  3A00               	xorlw	0
  2134  02A4  1D03               	skipz
  2135  02A5  2AA7               	goto	u621
  2136  02A6  2AA8               	goto	u620
  2137  02A7                     u621:
  2138  02A7  2A86               	goto	l1392
  2139  02A8                     u620:
  2140  02A8                     l75:
  2141  02A8  0008               	return
  2142  02A9                     __end_of_LCD_send_string:
  2143                           
  2144                           	psect	text10
  2145  02A9                     __ptext10:	
  2146 ;; *************** function ___lcd_send_char *****************
  2147 ;; Defined at:
  2148 ;;		line 79 in file "main.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;  ascii           1    wreg     unsigned char 
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;  ascii           1    7[COMMON] unsigned char 
  2153 ;;  low             1    6[COMMON] unsigned char 
  2154 ;;  high            1    5[COMMON] unsigned char 
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      void 
  2157 ;; Registers used:
  2158 ;;		wreg, status,2, status,0, pclath, cstack
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2164 ;;      Params:         0       0       0       0
  2165 ;;      Locals:         3       0       0       0
  2166 ;;      Temps:          2       0       0       0
  2167 ;;      Totals:         5       0       0       0
  2168 ;;Total ram usage:        5 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; Hardware stack levels required when called:    2
  2171 ;; This function calls:
  2172 ;;		___lcd_en_pulse
  2173 ;;		___lcd_port_write
  2174 ;; This function is called by:
  2175 ;;		_LCD_send_string
  2176 ;;		_LCD_display_clear
  2177 ;;		_Draw_main_display_p1
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           
  2182                           ;psect for function ___lcd_send_char
  2183  02A9                     ___lcd_send_char:
  2184                           
  2185                           ;incstack = 0
  2186                           ; Regs used in ___lcd_send_char: [wreg+status,2+status,0+pclath+cstack]
  2187                           ;___lcd_send_char@ascii stored from wreg
  2188  02A9  00F7               	movwf	___lcd_send_char@ascii
  2189  02AA                     l1362:
  2190                           
  2191                           ;main.c: 79: void __lcd_send_char(uint8_t ascii);main.c: 80: {;main.c: 81:     RA5 = 1;
  2192  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  2193  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  2194  02AC  1685               	bsf	5,5	;volatile
  2195  02AD                     l1364:
  2196                           
  2197                           ;main.c: 84:     uint8_t low = 0;
  2198  02AD  01F6               	clrf	___lcd_send_char@low
  2199  02AE                     l1366:
  2200                           
  2201                           ;main.c: 85:     high = ascii >> 4;
  2202  02AE  0877               	movf	___lcd_send_char@ascii,w
  2203  02AF  00F3               	movwf	??___lcd_send_char
  2204  02B0  3004               	movlw	4
  2205  02B1                     u595:
  2206  02B1  1003               	clrc
  2207  02B2  0CF3               	rrf	??___lcd_send_char,f
  2208  02B3  3EFF               	addlw	-1
  2209  02B4  1D03               	skipz
  2210  02B5  2AB1               	goto	u595
  2211  02B6  0873               	movf	??___lcd_send_char,w
  2212  02B7  00F4               	movwf	??___lcd_send_char+1
  2213  02B8  0874               	movf	??___lcd_send_char+1,w
  2214  02B9  00F5               	movwf	___lcd_send_char@high
  2215  02BA                     l1368:
  2216                           
  2217                           ;main.c: 86:     low = ascii & 0x0F;
  2218  02BA  0877               	movf	___lcd_send_char@ascii,w
  2219  02BB  390F               	andlw	15
  2220  02BC  00F3               	movwf	??___lcd_send_char
  2221  02BD  0873               	movf	??___lcd_send_char,w
  2222  02BE  00F6               	movwf	___lcd_send_char@low
  2223  02BF                     l1370:
  2224                           
  2225                           ;main.c: 88:     __lcd_port_write(high);
  2226  02BF  0875               	movf	___lcd_send_char@high,w
  2227  02C0  118A  2315  118A   	fcall	___lcd_port_write
  2228  02C3                     l1372:
  2229                           
  2230                           ;main.c: 89:     __lcd_en_pulse();
  2231  02C3  118A  237A  118A   	fcall	___lcd_en_pulse
  2232  02C6                     l1374:
  2233                           
  2234                           ;main.c: 90:     __lcd_port_write(low);
  2235  02C6  0876               	movf	___lcd_send_char@low,w
  2236  02C7  118A  2315  118A   	fcall	___lcd_port_write
  2237  02CA                     l1376:
  2238                           
  2239                           ;main.c: 91:     __lcd_en_pulse();
  2240  02CA  118A  237A  118A   	fcall	___lcd_en_pulse
  2241  02CD                     l69:
  2242  02CD  0008               	return
  2243  02CE                     __end_of___lcd_send_char:
  2244                           
  2245                           	psect	text11
  2246  0315                     __ptext11:	
  2247 ;; *************** function ___lcd_port_write *****************
  2248 ;; Defined at:
  2249 ;;		line 49 in file "main.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;  data            1    wreg     unsigned char 
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;  data            1    2[COMMON] unsigned char 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  1    wreg      void 
  2256 ;; Registers used:
  2257 ;;		wreg
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2263 ;;      Params:         0       0       0       0
  2264 ;;      Locals:         1       0       0       0
  2265 ;;      Temps:          0       0       0       0
  2266 ;;      Totals:         1       0       0       0
  2267 ;;Total ram usage:        1 bytes
  2268 ;; Hardware stack levels used:    1
  2269 ;; Hardware stack levels required when called:    1
  2270 ;; This function calls:
  2271 ;;		Nothing
  2272 ;; This function is called by:
  2273 ;;		___lcd_cmd
  2274 ;;		___lcd_send_char
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           
  2279                           ;psect for function ___lcd_port_write
  2280  0315                     ___lcd_port_write:
  2281                           
  2282                           ;incstack = 0
  2283                           ; Regs used in ___lcd_port_write: [wreg]
  2284                           ;___lcd_port_write@data stored from wreg
  2285  0315  00F2               	movwf	___lcd_port_write@data
  2286  0316                     l1348:
  2287                           
  2288                           ;main.c: 49: void __lcd_port_write(uint8_t data);main.c: 50: {;main.c: 51:     if(data &
      +                           0x01)
  2289  0316  1C72               	btfss	___lcd_port_write@data,0
  2290  0317  2B19               	goto	u551
  2291  0318  2B1A               	goto	u550
  2292  0319                     u551:
  2293  0319  2B1E               	goto	l55
  2294  031A                     u550:
  2295  031A                     l1350:
  2296                           
  2297                           ;main.c: 52:   RC0 = 1;
  2298  031A  1283               	bcf	3,5	;RP0=0, select bank0
  2299  031B  1303               	bcf	3,6	;RP1=0, select bank0
  2300  031C  1407               	bsf	7,0	;volatile
  2301  031D  2B21               	goto	l56
  2302  031E                     l55:	
  2303                           ;main.c: 53:  else
  2304                           
  2305                           
  2306                           ;main.c: 54:   RC0 = 0;
  2307  031E  1283               	bcf	3,5	;RP0=0, select bank0
  2308  031F  1303               	bcf	3,6	;RP1=0, select bank0
  2309  0320  1007               	bcf	7,0	;volatile
  2310  0321                     l56:
  2311                           
  2312                           ;main.c: 56:  if(data & 0x02)
  2313  0321  1CF2               	btfss	___lcd_port_write@data,1
  2314  0322  2B24               	goto	u561
  2315  0323  2B25               	goto	u560
  2316  0324                     u561:
  2317  0324  2B27               	goto	l57
  2318  0325                     u560:
  2319  0325                     l1352:
  2320                           
  2321                           ;main.c: 57:   RC1 = 1;
  2322  0325  1487               	bsf	7,1	;volatile
  2323  0326  2B28               	goto	l58
  2324  0327                     l57:	
  2325                           ;main.c: 58:  else
  2326                           
  2327                           
  2328                           ;main.c: 59:   RC1 = 0;
  2329  0327  1087               	bcf	7,1	;volatile
  2330  0328                     l58:
  2331                           
  2332                           ;main.c: 61:  if(data & 0x04)
  2333  0328  1D72               	btfss	___lcd_port_write@data,2
  2334  0329  2B2B               	goto	u571
  2335  032A  2B2C               	goto	u570
  2336  032B                     u571:
  2337  032B  2B2E               	goto	l59
  2338  032C                     u570:
  2339  032C                     l1354:
  2340                           
  2341                           ;main.c: 62:   RC2 = 1;
  2342  032C  1507               	bsf	7,2	;volatile
  2343  032D  2B2F               	goto	l60
  2344  032E                     l59:	
  2345                           ;main.c: 63:  else
  2346                           
  2347                           
  2348                           ;main.c: 64:   RC2 = 0;
  2349  032E  1107               	bcf	7,2	;volatile
  2350  032F                     l60:
  2351                           
  2352                           ;main.c: 66:  if(data & 0x08)
  2353  032F  1DF2               	btfss	___lcd_port_write@data,3
  2354  0330  2B32               	goto	u581
  2355  0331  2B33               	goto	u580
  2356  0332                     u581:
  2357  0332  2B35               	goto	l61
  2358  0333                     u580:
  2359  0333                     l1356:
  2360                           
  2361                           ;main.c: 67:   RC3 = 1;
  2362  0333  1587               	bsf	7,3	;volatile
  2363  0334  2B36               	goto	l63
  2364  0335                     l61:	
  2365                           ;main.c: 68:  else
  2366                           
  2367                           
  2368                           ;main.c: 69:   RC3 = 0;
  2369  0335  1187               	bcf	7,3	;volatile
  2370  0336                     l63:
  2371  0336  0008               	return
  2372  0337                     __end_of___lcd_port_write:
  2373                           
  2374                           	psect	text12
  2375  037A                     __ptext12:	
  2376 ;; *************** function ___lcd_en_pulse *****************
  2377 ;; Defined at:
  2378 ;;		line 41 in file "main.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;		None
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;		None
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  1    wreg      void 
  2385 ;; Registers used:
  2386 ;;		wreg
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2392 ;;      Params:         0       0       0       0
  2393 ;;      Locals:         0       0       0       0
  2394 ;;      Temps:          1       0       0       0
  2395 ;;      Totals:         1       0       0       0
  2396 ;;Total ram usage:        1 bytes
  2397 ;; Hardware stack levels used:    1
  2398 ;; Hardware stack levels required when called:    1
  2399 ;; This function calls:
  2400 ;;		Nothing
  2401 ;; This function is called by:
  2402 ;;		___lcd_cmd
  2403 ;;		___lcd_send_char
  2404 ;; This function uses a non-reentrant model
  2405 ;;
  2406                           
  2407                           
  2408                           ;psect for function ___lcd_en_pulse
  2409  037A                     ___lcd_en_pulse:
  2410  037A                     l1342:	
  2411                           ;incstack = 0
  2412                           ; Regs used in ___lcd_en_pulse: [wreg]
  2413                           
  2414                           
  2415                           ;main.c: 43:     _delay((unsigned long)((10)*(4000000UL/4000000.0)));
  2416  037A  3003               	movlw	3
  2417  037B  00F2               	movwf	??___lcd_en_pulse
  2418  037C                     u857:
  2419  037C  0BF2               	decfsz	??___lcd_en_pulse,f
  2420  037D  2B7C               	goto	u857
  2421  037E                     l1344:
  2422                           
  2423                           ;main.c: 44:     PORTAbits.RA4 = 1;
  2424  037E  1283               	bcf	3,5	;RP0=0, select bank0
  2425  037F  1303               	bcf	3,6	;RP1=0, select bank0
  2426  0380  1605               	bsf	5,4	;volatile
  2427                           
  2428                           ;main.c: 45:     _delay((unsigned long)((500)*(4000000UL/4000000.0)));
  2429  0381  30A6               	movlw	166
  2430  0382  00F2               	movwf	??___lcd_en_pulse
  2431  0383                     u867:
  2432  0383  0BF2               	decfsz	??___lcd_en_pulse,f
  2433  0384  2B83               	goto	u867
  2434  0385  0000               	nop
  2435  0386                     l1346:
  2436                           
  2437                           ;main.c: 46:     PORTAbits.RA4 = 0;
  2438  0386  1283               	bcf	3,5	;RP0=0, select bank0
  2439  0387  1303               	bcf	3,6	;RP1=0, select bank0
  2440  0388  1205               	bcf	5,4	;volatile
  2441  0389                     l52:
  2442  0389  0008               	return
  2443  038A                     __end_of___lcd_en_pulse:
  2444                           
  2445                           	psect	text13
  2446  0396                     __ptext13:	
  2447 ;; *************** function _isr *****************
  2448 ;; Defined at:
  2449 ;;		line 23 in file "interrupts.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;		None
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;		None
  2454 ;; Return value:  Size  Location     Type
  2455 ;;                  1    wreg      void 
  2456 ;; Registers used:
  2457 ;;		None
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2463 ;;      Params:         0       0       0       0
  2464 ;;      Locals:         0       0       0       0
  2465 ;;      Temps:          2       0       0       0
  2466 ;;      Totals:         2       0       0       0
  2467 ;;Total ram usage:        2 bytes
  2468 ;; Hardware stack levels used:    1
  2469 ;; This function calls:
  2470 ;;		Nothing
  2471 ;; This function is called by:
  2472 ;;		Interrupt level 1
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           
  2477                           ;psect for function _isr
  2478  0396                     _isr:
  2479  0396                     i1l5:
  2480  0396  0871               	movf	??_isr+1,w
  2481  0397  008A               	movwf	10
  2482  0398  0E70               	swapf	??_isr,w
  2483  0399  0083               	movwf	3
  2484  039A  0EFE               	swapf	btemp,f
  2485  039B  0E7E               	swapf	btemp,w
  2486  039C  0009               	retfie
  2487  039D                     __end_of_isr:
  2488  007E                     btemp	set	126	;btemp
  2489  007E                     wtemp0	set	126
  2490                           
  2491                           	psect	intentry
  2492  0004                     __pintentry:	
  2493                           ;incstack = 0
  2494                           ; Regs used in _isr: []
  2495                           
  2496  0004                     interrupt_function:
  2497  007E                     saved_w	set	btemp
  2498  0004  00FE               	movwf	btemp
  2499  0005  0E03               	swapf	3,w
  2500  0006  00F0               	movwf	??_isr
  2501  0007  080A               	movf	10,w
  2502  0008  00F1               	movwf	??_isr+1
  2503  0009  118A  2B96         	ljmp	_isr
  2504                           
  2505                           	psect	config
  2506                           
  2507                           ;Config register CONFIG @ 0x2007
  2508                           ;	Oscillator Selection bits
  2509                           ;	FOSC = INTOSCIO, INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O functio
      +                          n on RA5/OSC1/CLKIN
  2510                           ;	Watchdog Timer Enable bit
  2511                           ;	WDTE = OFF, WDT disabled
  2512                           ;	Power-up Timer Enable bit
  2513                           ;	PWRTE = OFF, PWRT disabled
  2514                           ;	MCLR Pin Function Select bit
  2515                           ;	MCLRE = ON, MCLR pin function is MCLR
  2516                           ;	Code Protection bit
  2517                           ;	CP = OFF, Program memory code protection is disabled
  2518                           ;	Data Code Protection bit
  2519                           ;	CPD = OFF, Data memory code protection is disabled
  2520                           ;	Brown Out Detect
  2521                           ;	BOREN = OFF, BOR disabled
  2522                           ;	Internal External Switchover bit
  2523                           ;	IESO = OFF, Internal External Switchover mode is disabled
  2524                           ;	Fail-Safe Clock Monitor Enabled bit
  2525                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2526  2007                     	org	8199
  2527  2007  30F4               	dw	12532

Data Sizes:
    Strings     0
    Constant    51
    Data        35
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80      6      41
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    LCD_send_string@string	PTR unsigned char  size(2) Largest target is 12
		 -> s_humi(CODE[9]), s_temp(CODE[12]), s_date(CODE[5]), s_time(CODE[5]), 
		 -> date(BANK0[9]), l_date(CODE[5]), time(BANK0[8]), l_time(CODE[5]), 
		 -> update_humi(BANK0[4]), current_humi(BANK0[4]), l_humi(CODE[5]), update_temp(BANK0[5]), 
		 -> current_temp(BANK0[5]), l_temp(CODE[5]), 


Critical Paths under _main in COMMON

    _LCD_display_ctrl->___lcd_cmd
    _LCD_Init->___lcd_cmd
    _Draw_settings_display->_LCD_send_string
    _Draw_main_display_p2->_LCD_send_string
    _LCD_display_clear->_LCD_set_cursor
    _LCD_display_clear->___lcd_send_char
    _Draw_main_display_p1->_LCD_send_string
    _LCD_set_cursor->___lcd_cmd
    ___lcd_cmd->___lcd_en_pulse
    ___lcd_cmd->___lcd_port_write
    _LCD_send_string->___lcd_send_char
    ___lcd_send_char->___lcd_en_pulse
    ___lcd_send_char->___lcd_port_write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Draw_settings_display
    _Draw_settings_display->_LCD_send_string
    _Draw_main_display_p2->_LCD_send_string
    _Draw_main_display_p1->_LCD_send_string

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   18408
                                              3 BANK0      3     3      0
               _Draw_main_display_p1
               _Draw_main_display_p2
              _Draw_settings_display
                           _LCD_Init
                  _LCD_display_clear
                   _LCD_display_ctrl
 ---------------------------------------------------------------------------------
 (1) _LCD_display_ctrl                                     5     3      2     468
                                              4 COMMON     5     3      2
                          ___lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     155
                                              4 COMMON     2     2      0
                          ___lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _Draw_settings_display                                2     2      0    5788
                                              1 BANK0      2     2      0
                  _LCD_display_clear
                    _LCD_send_string
                     _LCD_set_cursor
 ---------------------------------------------------------------------------------
 (1) _Draw_main_display_p2                                 1     1      0    5788
                                              1 BANK0      1     1      0
                  _LCD_display_clear
                    _LCD_send_string
                     _LCD_set_cursor
 ---------------------------------------------------------------------------------
 (1) _LCD_display_clear                                    2     2      0    2053
                                              8 COMMON     2     2      0
                     _LCD_set_cursor
                    ___lcd_send_char
 ---------------------------------------------------------------------------------
 (1) _Draw_main_display_p1                                 1     1      0    3995
                                              1 BANK0      1     1      0
                    _LCD_send_string
                     _LCD_set_cursor
                    ___lcd_send_char
 ---------------------------------------------------------------------------------
 (2) _LCD_set_cursor                                       4     3      1    1722
                                              4 COMMON     4     3      1
                          ___lcd_cmd
 ---------------------------------------------------------------------------------
 (2) ___lcd_cmd                                            1     1      0     155
                                              3 COMMON     1     1      0
                     ___lcd_en_pulse
                   ___lcd_port_write
 ---------------------------------------------------------------------------------
 (2) _LCD_send_string                                      4     2      2    2013
                                              8 COMMON     3     1      2
                                              0 BANK0      1     1      0
                    ___lcd_send_char
 ---------------------------------------------------------------------------------
 (2) ___lcd_send_char                                      5     5      0     260
                                              3 COMMON     5     5      0
                     ___lcd_en_pulse
                   ___lcd_port_write
 ---------------------------------------------------------------------------------
 (3) ___lcd_port_write                                     1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lcd_en_pulse                                       1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Draw_main_display_p1
     _LCD_send_string
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_set_cursor
       ___lcd_cmd
         ___lcd_en_pulse
         ___lcd_port_write
     ___lcd_send_char
       ___lcd_en_pulse
       ___lcd_port_write
   _Draw_main_display_p2
     _LCD_display_clear
       _LCD_set_cursor
         ___lcd_cmd
           ___lcd_en_pulse
           ___lcd_port_write
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_send_string
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_set_cursor
       ___lcd_cmd
         ___lcd_en_pulse
         ___lcd_port_write
   _Draw_settings_display
     _LCD_display_clear
       _LCD_set_cursor
         ___lcd_cmd
           ___lcd_en_pulse
           ___lcd_port_write
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_send_string
       ___lcd_send_char
         ___lcd_en_pulse
         ___lcd_port_write
     _LCD_set_cursor
       ___lcd_cmd
         ___lcd_en_pulse
         ___lcd_port_write
   _LCD_Init
     ___lcd_cmd
       ___lcd_en_pulse
       ___lcd_port_write
   _LCD_display_clear
     _LCD_set_cursor
       ___lcd_cmd
         ___lcd_en_pulse
         ___lcd_port_write
     ___lcd_send_char
       ___lcd_en_pulse
       ___lcd_port_write
   _LCD_display_ctrl
     ___lcd_cmd
       ___lcd_en_pulse
       ___lcd_port_write

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       5        0.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      6      29       3       51.2%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      35      10        0.0%
ABS                  0      0      35       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Fri Oct 23 19:40:58 2020

                   _update_humi 003B                     _update_temp 0031                               pc 0002  
                            l52 0389                              l60 032F                              l61 0335  
                            l63 0336                              l55 031E                              l56 0321  
                            l57 0327                              l58 0328                              l66 0395  
                            l82 02F1                              l59 032E                              l75 02A8  
                            l69 02CD                              l93 0353                              l98 0368  
                            fsr 0004                   ___lcd_cmd@cmd 0073                             l101 01D7  
                           l134 0190                             l160 00A7                             l152 0041  
                           l137 0280                             l146 0144                             l162 0064  
                           l154 0047                             l156 0055                             l173 00A3  
                           l158 0059                             l175 00A7                             l179 00AF  
                           _RA2 002A                             _RC0 0038                             _RC1 0039  
                           _RA5 002D                             _RC2 003A                             _RC3 003B  
                           _RC4 003C                             _RC5 003D                             u600 033D  
                           u601 033C                             u610 0347                             u611 0346  
                           u620 02A8                             u700 0059                             u621 02A7  
                           u701 0058                             u550 031A                             u630 0368  
                           u710 005D                             u551 0319                             u631 0367  
                           u711 005C                             u560 0325                             u640 02DC  
                           u800 00AB                             u720 006A                             i1l5 0396  
                           u561 0324                             u641 02DB                             u801 00AA  
                           u721 0069                             u570 032C                             u650 02E1  
                           u810 00B5                             u730 0074                             u571 032B  
                           u651 02E0                             u811 00B4                             u731 0073  
                           u580 0333                             u660 02E7                             u740 0079  
                           u581 0332                             u661 02E6                             u741 0078  
                           u750 0081                             u751 0080                             u760 0087  
                           u680 0047                             u761 0086                             u681 0046  
                           u770 0096                             u690 0054                             u595 02B1  
                           u827 0195                             u771 0095                             u691 0053  
                           u780 00A2                             u837 01A2                             u781 00A1  
                           u790 00A7                             u847 01AC                             u791 00A6  
                           u857 037C                             u867 0383                             _isr 0396  
                           fsr0 0004                             indf 0000   __size_of_Draw_main_display_p1 004C  
 __size_of_Draw_main_display_p2 003E                            l1400 0354                            l1410 035E  
                          l1402 0359                            l1412 0362                            l1500 00E7  
                          l1420 02DC                            l1342 037A                            l1350 031A  
                          l1510 0118                            l1502 00F4                            l1422 02E1  
                          l1430 02ED                            l1414 02CF                            l1344 037E  
                          l1352 0325                            l1360 038E                            l1408 035A  
                          l1512 011F                            l1504 00FC                            l1440 01AF  
                          l1432 0191                            l1424 02E2                            l1416 02D3  
                          l1600 00B5                            l1346 0386                            l1354 032C  
                          l1370 02BF                            l1362 02AA                            l1506 0103  
                          l1450 01C3                            l1442 01B3                            l1434 019A  
                          l1426 02E7                            l1418 02D7                            l1356 0333  
                          l1348 0316                            l1372 02C3                            l1364 02AD  
                          l1380 033D                            l1460 0145                            l1508 0110  
                          l1516 012C                            l1452 01C7                            l1444 01B7  
                          l1436 019E                            l1428 02E8                            l1540 002B  
                          l1374 02C6                            l1366 02AE                            l1390 0281  
                          l1358 038B                            l1382 0342                            l1470 0174  
                          l1462 014C                            l1622 0136                            l1454 01CB  
                          l1446 01BB                            l1438 01AA                            l1550 0037  
                          l1542 002F                            l1534 001D                            l1376 02CA  
                          l1368 02BA                            l1392 0286                            l1384 0347  
                          l1472 017E                            l1464 0156                            l1480 0252  
                          l1456 01CF                            l1448 01BF                            l1560 004B  
                          l1552 0038                            l1544 0032                            l1536 0020  
                          l1394 0293                            l1386 034B                            l1378 0338  
                          l1474 0189                            l1466 0161                            l1482 0263  
                          l1490 00BC                            l1458 01D3                            l1570 0061  
                          l1562 004E                            l1554 003B                            l1546 0033  
                          l1538 0024                            l1396 0299                            l1388 034F  
                          l1468 0168                            l1484 0268                            l1476 0243  
                          l1492 00C4                            l1580 0081                            l1572 006A  
                          l1564 0054                            l1556 0048                            l1548 0034  
                          l1398 0354                            l1486 0279                            l1478 024B  
                          l1494 00CB                            l1590 0099                            l1582 0087  
                          l1574 006E                            l1566 005D                            l1558 004A  
                          l1496 00D8                            l1488 00BB                            l1584 008C  
                          l1576 0074                            l1592 009A                            l1568 005E  
                          l1498 00E0                            l1594 009E                            l1586 0091  
                          l1578 0079                            l1596 00A2                            l1588 0096  
                   main@lastCLK 0047                            l1598 00AC                            ?_isr 0070  
                ___lcd_en_pulse 037A                            _date 0020                            _main 001D  
                          _time 0029                            btemp 007E      __size_of_LCD_display_clear 0015  
       ??_Draw_settings_display 0044                            start 000B                           ??_isr 0070  
              __end_of_LCD_Init 01D8                           ?_main 0070                           _ANSEL 0091  
                         _T1CON 0010                           _TMR1H 000F                           _TMR1L 000E  
                         _PORTA 0005                           _PORTC 0007                           _TRISA 0085  
                         _TRISC 0087              LCD_display_clear@i 0079          __end_of___lcd_en_pulse 038A  
                         pclath 000A                           status 0003                           wtemp0 007E  
     __size_of___lcd_port_write 0022         __size_of_LCD_set_cursor 001D                 __initialization 000D  
               ___lcd_send_char 02A9                    __end_of_main 00BB                          ??_main 0046  
            LCD_set_cursor@temp 0076        __end_of_LCD_display_ctrl 02F2                 ?___lcd_en_pulse 0070  
                        _CMCON0 0019                          _TMR1IF 0060                          _TMR1ON 0080  
           ___lcd_send_char@low 0076                          _l_date 022F                          _l_humi 0225  
                        _l_temp 022A                          _l_time 0234                          _s_date 0239  
                        _s_humi 021C                          _s_temp 0210                          _s_time 023E  
                        saved_w 007E        __size_of_LCD_send_string 0028              __size_of___lcd_cmd 000C  
       __end_of__initialization 001A                       ?_LCD_Init 0070         __end_of___lcd_send_char 02CE  
                __pcstackCOMMON 0070                    __pidataBANK0 02F2                      ??_LCD_Init 0074  
              ___lcd_port_write 0315    __end_of_Draw_main_display_p1 0191    __end_of_Draw_main_display_p2 0281  
                _LCD_set_cursor 0337  __size_of_Draw_settings_display 008A   __end_of_Draw_settings_display 0145  
                    __pmaintext 001D                      __pintentry 0004               __end_of___lcd_cmd 0396  
         ___lcd_port_write@data 0072                  main@currentCLK 0048                      __stringtab 0200  
        __end_of_LCD_set_cursor 0354            ___lcd_send_char@high 0075                ?___lcd_send_char 0070  
             ??_LCD_send_string 007A                         __ptext1 02CE                         __ptext2 0191  
                       __ptext3 00BB                         __ptext4 0243                         __ptext5 0354  
                       __ptext6 0145                         __ptext7 0337                         __ptext8 038A  
                       __ptext9 0281                       _T1CONbits 0010                         _counter 007B  
              ??___lcd_en_pulse 0072                    __size_of_isr 0007            LCD_display_ctrl@temp 0078  
             ?_LCD_display_ctrl 0074            end_of_initialization 001A              ??_LCD_display_ctrl 0076  
               ?_LCD_set_cursor 0074         LCD_display_ctrl@display 0077                       _PORTAbits 0005  
          _Draw_main_display_p1 0145            _Draw_main_display_p2 0243               __size_of_LCD_Init 0047  
                __end_of_l_date 0234                  __end_of_l_humi 022A                  __end_of_l_temp 022F  
                __end_of_l_time 0239                  __end_of_s_date 023E                  __end_of_s_humi 0225  
                __end_of_s_temp 021C                  __end_of_s_time 0243        __end_of___lcd_port_write 0337  
         ?_Draw_main_display_p1 0070           ?_Draw_main_display_p2 0070             start_initialization 000D  
                   __end_of_isr 039D               LCD_set_cursor@row 0077            LCD_set_cursor@column 0074  
                    init_fetch0 0369                     __pdataBANK0 0020                       ___lcd_cmd 038A  
                   __pbssCOMMON 007B                       ___latbits 0001                   __pcstackBANK0 0043  
               _LCD_send_string 0281                    _current_humi 003F                    _current_temp 0036  
         LCD_send_string@string 0078           _Draw_settings_display 00BB                       __pstrings 0200  
        ??_Draw_main_display_p1 0044          ??_Draw_main_display_p2 0044                      ?___lcd_cmd 0070  
              ??_LCD_set_cursor 0075                LCD_send_string@i 0043               interrupt_function 0004  
                      _LCD_Init 0191          LCD_display_ctrl@cursor 0074       __size_of_LCD_display_ctrl 0024  
      __size_of___lcd_send_char 0025                     __stringbase 020F         __end_of_LCD_send_string 02A9  
         ___lcd_send_char@ascii 0077          ?_Draw_settings_display 0070              __end_of__stringtab 0210  
                   ??___lcd_cmd 0073               ?___lcd_port_write 0070              ??___lcd_port_write 0072  
                      __ptext10 02A9                        __ptext11 0315                        __ptext12 037A  
                      __ptext13 0396         __size_of___lcd_en_pulse 0010                   __size_of_main 009E  
         LCD_display_ctrl@blink 0075               _LCD_display_clear 0354              ?_LCD_display_clear 0070  
           ??_LCD_display_clear 0078                ?_LCD_send_string 0078               ??___lcd_send_char 0073  
                      init_ram0 036D                        intlevel1 0000       __end_of_LCD_display_clear 0369  
                     stringcode 020A                _LCD_display_ctrl 02CE                        stringdir 020A  
                      stringtab 0200  
